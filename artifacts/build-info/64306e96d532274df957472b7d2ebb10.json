{
  "id": "64306e96d532274df957472b7d2ebb10",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.7",
  "solcLongVersion": "0.8.7+commit.e28d00a7",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/staking/TokenFarm.sol": {
        "content": "// Sources flattened with hardhat v2.6.0 https://hardhat.org\n\n// File @openzeppelin/contracts/security/ReentrancyGuard.sol@v4.2.0\n\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n// File @openzeppelin/contracts/utils/Context.sol@v4.2.0\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n// File @openzeppelin/contracts/access/Ownable.sol@v4.2.0\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n// File contracts/libraries/IBoringERC20.sol\n\npragma solidity ^0.8.7;\n\ninterface IBoringERC20 {\n    function mint(address to, uint256 amount) external;\n\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /// @notice EIP 2612\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n// File contracts/libraries/BoringERC20.sol\n\npragma solidity ^0.8.7;\n\n// solhint-disable avoid-low-level-calls\n\nlibrary BoringERC20 {\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41; // symbol()\n    bytes4 private constant SIG_NAME = 0x06fdde03; // name()\n    bytes4 private constant SIG_DECIMALS = 0x313ce567; // decimals()\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb; // transfer(address,uint256)\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd; // transferFrom(address,address,uint256)\n\n    function returnDataToString(bytes memory data)\n        internal\n        pure\n        returns (string memory)\n    {\n        if (data.length >= 64) {\n            return abi.decode(data, (string));\n        } else if (data.length == 32) {\n            uint8 i = 0;\n            while (i < 32 && data[i] != 0) {\n                i++;\n            }\n            bytes memory bytesArray = new bytes(i);\n            for (i = 0; i < 32 && data[i] != 0; i++) {\n                bytesArray[i] = data[i];\n            }\n            return string(bytesArray);\n        } else {\n            return \"???\";\n        }\n    }\n\n    /// @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\n    /// @param token The address of the ERC-20 token contract.\n    /// @return (string) Token symbol.\n    function safeSymbol(IBoringERC20 token)\n        internal\n        view\n        returns (string memory)\n    {\n        (bool success, bytes memory data) = address(token).staticcall(\n            abi.encodeWithSelector(SIG_SYMBOL)\n        );\n        return success ? returnDataToString(data) : \"???\";\n    }\n\n    /// @notice Provides a safe ERC20.name version which returns '???' as fallback string.\n    /// @param token The address of the ERC-20 token contract.\n    /// @return (string) Token name.\n    function safeName(IBoringERC20 token)\n        internal\n        view\n        returns (string memory)\n    {\n        (bool success, bytes memory data) = address(token).staticcall(\n            abi.encodeWithSelector(SIG_NAME)\n        );\n        return success ? returnDataToString(data) : \"???\";\n    }\n\n    /// @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\n    /// @param token The address of the ERC-20 token contract.\n    /// @return (uint8) Token decimals.\n    function safeDecimals(IBoringERC20 token) internal view returns (uint8) {\n        (bool success, bytes memory data) = address(token).staticcall(\n            abi.encodeWithSelector(SIG_DECIMALS)\n        );\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\n    }\n\n    /// @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\n    /// Reverts on a failed transfer.\n    /// @param token The address of the ERC-20 token.\n    /// @param to Transfer tokens to.\n    /// @param amount The token amount.\n    function safeTransfer(\n        IBoringERC20 token,\n        address to,\n        uint256 amount\n    ) internal {\n        (bool success, bytes memory data) = address(token).call(\n            abi.encodeWithSelector(SIG_TRANSFER, to, amount)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"BoringERC20: Transfer failed\"\n        );\n    }\n\n    /// @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\n    /// Reverts on a failed transfer.\n    /// @param token The address of the ERC-20 token.\n    /// @param from Transfer tokens from.\n    /// @param to Transfer tokens to.\n    /// @param amount The token amount.\n    function safeTransferFrom(\n        IBoringERC20 token,\n        address from,\n        address to,\n        uint256 amount\n    ) internal {\n        (bool success, bytes memory data) = address(token).call(\n            abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount)\n        );\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            \"BoringERC20: TransferFrom failed\"\n        );\n    }\n}\n// File contracts/staking/TokenFarm.sol\n\npragma solidity ^0.8.7;\n\ncontract TokenFarm is Ownable, ReentrancyGuard {\n    using BoringERC20 for IBoringERC20;\n\n    // Info of each user for each farm.\n    struct UserInfo {\n        uint256 amount; // How many Staking tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. See explanation below.\n    }\n\n    // Info of each reward distribution campaign.\n    struct CampaignInfo {\n        IBoringERC20 stakingToken; // Address of Staking token contract.\n        IBoringERC20 rewardToken; // Address of Reward token contract\n        uint256 precision; //reward token precision\n        uint256 startTimestamp; // start timestamp of the campaign\n        uint256 lastRewardTimestamp; // Last timestamp that Reward Token distribution occurs.\n        uint256 accRewardPerShare; // Accumulated Reward Token per share. See below.\n        uint256 totalStaked; // total staked amount each campaign's stake token, typically, each campaign has the same stake token, so need to track it separatedly\n        uint256 totalRewards;\n    }\n\n    // Reward info\n    struct RewardInfo {\n        uint256 endTimestamp;\n        uint256 rewardPerSec;\n    }\n\n    // @dev this is mostly used for extending reward period\n    // @notice Reward info is a set of {endTimestamp, rewardPerTimestamp}\n    // indexed by campaigh ID\n    mapping(uint256 => RewardInfo[]) public campaignRewardInfo;\n\n    // @notice Info of each campaign. mapped from campaigh ID\n    CampaignInfo[] public campaignInfo;\n    // Info of each user that stakes Staking tokens.\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n\n    // @notice limit length of reward info\n    // how many phases are allowed\n    uint256 public rewardInfoLimit;\n    // @dev reward holder account\n    address public rewardHolder;\n\n    event Deposit(address indexed user, uint256 amount, uint256 campaign);\n    event Withdraw(address indexed user, uint256 amount, uint256 campaign);\n    event EmergencyWithdraw(\n        address indexed user,\n        uint256 amount,\n        uint256 campaign\n    );\n    event AddCampaignInfo(\n        uint256 indexed campaignID,\n        IBoringERC20 stakingToken,\n        IBoringERC20 rewardToken,\n        uint256 startTimestamp\n    );\n    event AddRewardInfo(\n        uint256 indexed campaignID,\n        uint256 indexed phase,\n        uint256 endTimestamp,\n        uint256 rewardPerTimestamp\n    );\n    event SetRewardInfoLimit(uint256 rewardInfoLimit);\n    event SetRewardHolder(address rewardHolder);\n\n    // constructor\n    constructor(address _rewardHolder) {\n        rewardInfoLimit = 53;\n        rewardHolder = _rewardHolder;\n    }\n\n    // @notice function for setting a reward holder who is responsible for adding a reward info\n    function setRewardHolder(address _rewardHolder) external onlyOwner {\n        rewardHolder = _rewardHolder;\n        emit SetRewardHolder(_rewardHolder);\n    }\n\n    // @notice set new reward info limit\n    function setRewardInfoLimit(uint256 _updatedRewardInfoLimit)\n        external\n        onlyOwner\n    {\n        rewardInfoLimit = _updatedRewardInfoLimit;\n        emit SetRewardInfoLimit(rewardInfoLimit);\n    }\n\n    // @notice reward campaign, one campaign represents a pair of staking and reward token, last reward Timestamp and acc reward Per Share\n    function addCampaignInfo(\n        IBoringERC20 _stakingToken,\n        IBoringERC20 _rewardToken,\n        uint256 _startTimestamp\n    ) external onlyOwner {\n        uint256 decimalsRewardToken = uint256(_rewardToken.safeDecimals());\n\n        require(\n            decimalsRewardToken < 30,\n            \"constructor: reward token decimals must be inferior to 30\"\n        );\n\n        uint256 precision = uint256(10**(uint256(30) - (decimalsRewardToken)));\n\n        campaignInfo.push(\n            CampaignInfo({\n                stakingToken: _stakingToken,\n                rewardToken: _rewardToken,\n                precision: precision,\n                startTimestamp: _startTimestamp,\n                lastRewardTimestamp: _startTimestamp,\n                accRewardPerShare: 0,\n                totalStaked: 0,\n                totalRewards: 0\n            })\n        );\n        emit AddCampaignInfo(\n            campaignInfo.length - 1,\n            _stakingToken,\n            _rewardToken,\n            _startTimestamp\n        );\n    }\n\n    // @notice if the new reward info is added, the reward & its end timestamp will be extended by the newly pushed reward info.\n    function addRewardInfo(\n        uint256 _campaignID,\n        uint256 _endTimestamp,\n        uint256 _rewardPerSec\n    ) external onlyOwner {\n        RewardInfo[] storage rewardInfo = campaignRewardInfo[_campaignID];\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\n        require(\n            rewardInfo.length < rewardInfoLimit,\n            \"addRewardInfo::reward info length exceeds the limit\"\n        );\n        require(\n            rewardInfo.length == 0 ||\n                rewardInfo[rewardInfo.length - 1].endTimestamp >=\n                block.timestamp,\n            \"addRewardInfo::reward period ended\"\n        );\n        require(\n            rewardInfo.length == 0 ||\n                rewardInfo[rewardInfo.length - 1].endTimestamp < _endTimestamp,\n            \"addRewardInfo::bad new endTimestamp\"\n        );\n        uint256 startTimestamp = rewardInfo.length == 0\n            ? campaign.startTimestamp\n            : rewardInfo[rewardInfo.length - 1].endTimestamp;\n        uint256 timeRange = _endTimestamp - startTimestamp;\n        uint256 totalRewards = _rewardPerSec * timeRange;\n        campaign.rewardToken.safeTransferFrom(\n            rewardHolder,\n            address(this),\n            totalRewards\n        );\n        campaign.totalRewards += totalRewards;\n        rewardInfo.push(\n            RewardInfo({\n                endTimestamp: _endTimestamp,\n                rewardPerSec: _rewardPerSec\n            })\n        );\n        emit AddRewardInfo(\n            _campaignID,\n            rewardInfo.length - 1,\n            _endTimestamp,\n            _rewardPerSec\n        );\n    }\n\n    function rewardInfoLen(uint256 _campaignID)\n        external\n        view\n        returns (uint256)\n    {\n        return campaignRewardInfo[_campaignID].length;\n    }\n\n    function campaignInfoLen() external view returns (uint256) {\n        return campaignInfo.length;\n    }\n\n    // @notice this will return  end block based on the current block timestamp.\n    function currentEndTimestamp(uint256 _campaignID)\n        external\n        view\n        returns (uint256)\n    {\n        return _endTimestampOf(_campaignID, block.timestamp);\n    }\n\n    function _endTimestampOf(uint256 _campaignID, uint256 _blockTimestamp)\n        internal\n        view\n        returns (uint256)\n    {\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\n        uint256 len = rewardInfo.length;\n        if (len == 0) {\n            return 0;\n        }\n        for (uint256 i = 0; i < len; ++i) {\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\n                return rewardInfo[i].endTimestamp;\n        }\n        // @dev when couldn't find any reward info, it means that _blockTimestamp exceed endTimestamp\n        // so return the latest reward info.\n        return rewardInfo[len - 1].endTimestamp;\n    }\n\n    // @notice this will return reward per block based on the current block timestamp.\n    function currentRewardPerSec(uint256 _campaignID)\n        external\n        view\n        returns (uint256)\n    {\n        return _rewardPerSecOf(_campaignID, block.timestamp);\n    }\n\n    function _rewardPerSecOf(uint256 _campaignID, uint256 _blockTimestamp)\n        internal\n        view\n        returns (uint256)\n    {\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\n        uint256 len = rewardInfo.length;\n        if (len == 0) {\n            return 0;\n        }\n        for (uint256 i = 0; i < len; ++i) {\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\n                return rewardInfo[i].rewardPerSec;\n        }\n        // @dev when couldn't find any reward info, it means that timestamp exceed endtimestamp\n        // so return 0\n        return 0;\n    }\n\n    // @notice Return reward multiplier over the given _from to _to timestamp.\n    function getMultiplier(\n        uint256 _from,\n        uint256 _to,\n        uint256 _endTimestamp\n    ) public pure returns (uint256) {\n        if ((_from >= _endTimestamp) || (_from > _to)) {\n            return 0;\n        }\n        if (_to <= _endTimestamp) {\n            return _to - _from;\n        }\n        return _endTimestamp - _from;\n    }\n\n    // @notice View function to see pending Reward on frontend.\n    function pendingReward(uint256 _campaignID, address _user)\n        external\n        view\n        returns (uint256)\n    {\n        return\n            _pendingReward(\n                _campaignID,\n                userInfo[_campaignID][_user].amount,\n                userInfo[_campaignID][_user].rewardDebt\n            );\n    }\n\n    function _pendingReward(\n        uint256 _campaignID,\n        uint256 _amount,\n        uint256 _rewardDebt\n    ) internal view returns (uint256) {\n        CampaignInfo memory campaign = campaignInfo[_campaignID];\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\n        uint256 accRewardPerShare = campaign.accRewardPerShare;\n        if (\n            block.timestamp > campaign.lastRewardTimestamp &&\n            campaign.totalStaked != 0\n        ) {\n            uint256 cursor = campaign.lastRewardTimestamp;\n            for (uint256 i = 0; i < rewardInfo.length; ++i) {\n                uint256 multiplier = getMultiplier(\n                    cursor,\n                    block.timestamp,\n                    rewardInfo[i].endTimestamp\n                );\n                if (multiplier == 0) continue;\n                cursor = rewardInfo[i].endTimestamp;\n                accRewardPerShare +=\n                    ((multiplier * rewardInfo[i].rewardPerSec) *\n                        campaign.precision) /\n                    campaign.totalStaked;\n            }\n        }\n        return\n            ((_amount * accRewardPerShare) / campaign.precision) - _rewardDebt;\n    }\n\n    function updateCampaign(uint256 _campaignID) external nonReentrant {\n        _updateCampaign(_campaignID);\n    }\n\n    // @notice Update reward variables of the given campaign to be up-to-date.\n    function _updateCampaign(uint256 _campaignID) internal {\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\n        if (block.timestamp <= campaign.lastRewardTimestamp) {\n            return;\n        }\n        if (campaign.totalStaked == 0) {\n            // if there is no total supply, return and use the campaign's start block timestamp as the last reward block timestamp\n            // so that ALL reward will be distributed.\n            // however, if the first deposit is out of reward period, last reward block will be its block timestamp\n            // in order to keep the multiplier = 0\n            if (\n                block.timestamp > _endTimestampOf(_campaignID, block.timestamp)\n            ) {\n                campaign.lastRewardTimestamp = block.timestamp;\n            }\n            return;\n        }\n        // @dev for each reward info\n        for (uint256 i = 0; i < rewardInfo.length; ++i) {\n            // @dev get multiplier based on current Block and rewardInfo's end block\n            // multiplier will be a range of either (current block - campaign.lastRewardBlock)\n            // or (reward info's endblock - campaign.lastRewardTimestamp) or 0\n            uint256 multiplier = getMultiplier(\n                campaign.lastRewardTimestamp,\n                block.timestamp,\n                rewardInfo[i].endTimestamp\n            );\n            if (multiplier == 0) continue;\n            // @dev if currentTimestamp exceed end block, use end block as the last reward block\n            // so that for the next iteration, previous endTimestamp will be used as the last reward block\n            if (block.timestamp > rewardInfo[i].endTimestamp) {\n                campaign.lastRewardTimestamp = rewardInfo[i].endTimestamp;\n            } else {\n                campaign.lastRewardTimestamp = block.timestamp;\n            }\n            campaign.accRewardPerShare +=\n                ((multiplier * rewardInfo[i].rewardPerSec) *\n                    campaign.precision) /\n                campaign.totalStaked;\n        }\n    }\n\n    // @notice Update reward variables for all campaigns. gas spending is HIGH in this method call, BE CAREFUL\n    function massUpdateCampaigns() external nonReentrant {\n        uint256 length = campaignInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            _updateCampaign(pid);\n        }\n    }\n\n    function depositWithPermit(\n        uint256 _campaignID,\n        uint256 _amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external nonReentrant {\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\n        campaign.stakingToken.permit(\n            msg.sender,\n            address(this),\n            _amount,\n            deadline,\n            v,\n            r,\n            s\n        );\n        _deposit(_campaignID, _amount);\n    }\n\n    // @notice Stake Staking tokens to TokenFarm\n    function deposit(uint256 _campaignID, uint256 _amount)\n        external\n        nonReentrant\n    {\n        _deposit(_campaignID, _amount);\n    }\n\n    // @notice Stake Staking tokens to TokenFarm\n    function _deposit(uint256 _campaignID, uint256 _amount) internal {\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\n        _updateCampaign(_campaignID);\n        if (user.amount > 0) {\n            uint256 pending = ((user.amount * campaign.accRewardPerShare) /\n                campaign.precision) - user.rewardDebt;\n            if (pending > 0) {\n                campaign.rewardToken.safeTransfer(address(msg.sender), pending);\n            }\n        }\n        if (_amount > 0) {\n            campaign.stakingToken.safeTransferFrom(\n                address(msg.sender),\n                address(this),\n                _amount\n            );\n            user.amount += _amount;\n            campaign.totalStaked += _amount;\n        }\n        user.rewardDebt =\n            (user.amount * campaign.accRewardPerShare) /\n            campaign.precision;\n        emit Deposit(msg.sender, _amount, _campaignID);\n    }\n\n    // @notice Withdraw Staking tokens from STAKING.\n    function withdraw(uint256 _campaignID, uint256 _amount)\n        external\n        nonReentrant\n    {\n        _withdraw(_campaignID, _amount);\n    }\n\n    // @notice internal method for withdraw (withdraw and harvest method depend on this method)\n    function _withdraw(uint256 _campaignID, uint256 _amount) internal {\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\n        require(user.amount >= _amount, \"withdraw::bad withdraw amount\");\n        _updateCampaign(_campaignID);\n        uint256 pending = ((user.amount * campaign.accRewardPerShare) /\n            campaign.precision) - user.rewardDebt;\n        if (pending > 0) {\n            campaign.rewardToken.safeTransfer(address(msg.sender), pending);\n        }\n        if (_amount > 0) {\n            user.amount -= _amount;\n            campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\n            campaign.totalStaked -= _amount;\n        }\n        user.rewardDebt =\n            (user.amount * campaign.accRewardPerShare) /\n            campaign.precision;\n\n        emit Withdraw(msg.sender, _amount, _campaignID);\n    }\n\n    // @notice method for harvest campaigns (used when the user want to claim their reward token based on specified campaigns)\n    function harvest(uint256[] calldata _campaignIDs) external nonReentrant {\n        for (uint256 i = 0; i < _campaignIDs.length; ++i) {\n            _withdraw(_campaignIDs[i], 0);\n        }\n    }\n\n    // @notice Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _campaignID) external nonReentrant {\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\n        uint256 _amount = user.amount;\n        campaign.totalStaked -= _amount;\n        user.amount = 0;\n        user.rewardDebt = 0;\n        campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\n        emit EmergencyWithdraw(msg.sender, _amount, _campaignID);\n    }\n\n    // @notice Withdraw reward. EMERGENCY ONLY.\n    function emergencyRewardWithdraw(\n        uint256 _campaignID,\n        uint256 _amount,\n        address _beneficiary\n    ) external onlyOwner nonReentrant {\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\n        uint256 currentStakingPendingReward = _pendingReward(\n            _campaignID,\n            campaign.totalStaked,\n            0\n        );\n        require(\n            currentStakingPendingReward + _amount <= campaign.totalRewards,\n            \"emergencyRewardWithdraw::not enough reward token\"\n        );\n        campaign.totalRewards -= _amount;\n        campaign.rewardToken.safeTransfer(_beneficiary, _amount);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/staking/TokenFarm.sol": {
        "BoringERC20": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204248910b0e6747fd1374e04830d81205c49c7537e8cbd9620273193cee5e21e264736f6c63430008070033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP BASEFEE SWAP2 SIGNEXTEND 0xE PUSH8 0x47FD1374E04830D8 SLT SDIV 0xC4 SWAP13 PUSH22 0x37E8CBD9620273193CEE5E21E264736F6C6343000807 STOP CALLER ",
              "sourceMap": "6746:3909:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;6746:3909:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204248910b0e6747fd1374e04830d81205c49c7537e8cbd9620273193cee5e21e264736f6c63430008070033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP BASEFEE SWAP2 SIGNEXTEND 0xE PUSH8 0x47FD1374E04830D8 SLT SDIV 0xC4 SWAP13 PUSH22 0x37E8CBD9620273193CEE5E21E264736F6C6343000807 STOP CALLER ",
              "sourceMap": "6746:3909:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "returnDataToString(bytes memory)": "infinite",
                "safeDecimals(contract IBoringERC20)": "infinite",
                "safeName(contract IBoringERC20)": "infinite",
                "safeSymbol(contract IBoringERC20)": "infinite",
                "safeTransfer(contract IBoringERC20,address,uint256)": "infinite",
                "safeTransferFrom(contract IBoringERC20,address,address,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking/TokenFarm.sol\":\"BoringERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"contracts/staking/TokenFarm.sol\":{\"content\":\"// Sources flattened with hardhat v2.6.0 https://hardhat.org\\n\\n// File @openzeppelin/contracts/security/ReentrancyGuard.sol@v4.2.0\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n// File @openzeppelin/contracts/utils/Context.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n// File @openzeppelin/contracts/access/Ownable.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n// File contracts/libraries/IBoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\ninterface IBoringERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice EIP 2612\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n// File contracts/libraries/BoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\n// solhint-disable avoid-low-level-calls\\n\\nlibrary BoringERC20 {\\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41; // symbol()\\n    bytes4 private constant SIG_NAME = 0x06fdde03; // name()\\n    bytes4 private constant SIG_DECIMALS = 0x313ce567; // decimals()\\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb; // transfer(address,uint256)\\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd; // transferFrom(address,address,uint256)\\n\\n    function returnDataToString(bytes memory data)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        if (data.length >= 64) {\\n            return abi.decode(data, (string));\\n        } else if (data.length == 32) {\\n            uint8 i = 0;\\n            while (i < 32 && data[i] != 0) {\\n                i++;\\n            }\\n            bytes memory bytesArray = new bytes(i);\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\n                bytesArray[i] = data[i];\\n            }\\n            return string(bytesArray);\\n        } else {\\n            return \\\"???\\\";\\n        }\\n    }\\n\\n    /// @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token symbol.\\n    function safeSymbol(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_SYMBOL)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.name version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token name.\\n    function safeName(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_NAME)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (uint8) Token decimals.\\n    function safeDecimals(IBoringERC20 token) internal view returns (uint8) {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_DECIMALS)\\n        );\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\n    }\\n\\n    /// @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransfer(\\n        IBoringERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: Transfer failed\\\"\\n        );\\n    }\\n\\n    /// @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param from Transfer tokens from.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransferFrom(\\n        IBoringERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: TransferFrom failed\\\"\\n        );\\n    }\\n}\\n// File contracts/staking/TokenFarm.sol\\n\\npragma solidity ^0.8.7;\\n\\ncontract TokenFarm is Ownable, ReentrancyGuard {\\n    using BoringERC20 for IBoringERC20;\\n\\n    // Info of each user for each farm.\\n    struct UserInfo {\\n        uint256 amount; // How many Staking tokens the user has provided.\\n        uint256 rewardDebt; // Reward debt. See explanation below.\\n    }\\n\\n    // Info of each reward distribution campaign.\\n    struct CampaignInfo {\\n        IBoringERC20 stakingToken; // Address of Staking token contract.\\n        IBoringERC20 rewardToken; // Address of Reward token contract\\n        uint256 precision; //reward token precision\\n        uint256 startTimestamp; // start timestamp of the campaign\\n        uint256 lastRewardTimestamp; // Last timestamp that Reward Token distribution occurs.\\n        uint256 accRewardPerShare; // Accumulated Reward Token per share. See below.\\n        uint256 totalStaked; // total staked amount each campaign's stake token, typically, each campaign has the same stake token, so need to track it separatedly\\n        uint256 totalRewards;\\n    }\\n\\n    // Reward info\\n    struct RewardInfo {\\n        uint256 endTimestamp;\\n        uint256 rewardPerSec;\\n    }\\n\\n    // @dev this is mostly used for extending reward period\\n    // @notice Reward info is a set of {endTimestamp, rewardPerTimestamp}\\n    // indexed by campaigh ID\\n    mapping(uint256 => RewardInfo[]) public campaignRewardInfo;\\n\\n    // @notice Info of each campaign. mapped from campaigh ID\\n    CampaignInfo[] public campaignInfo;\\n    // Info of each user that stakes Staking tokens.\\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\\n\\n    // @notice limit length of reward info\\n    // how many phases are allowed\\n    uint256 public rewardInfoLimit;\\n    // @dev reward holder account\\n    address public rewardHolder;\\n\\n    event Deposit(address indexed user, uint256 amount, uint256 campaign);\\n    event Withdraw(address indexed user, uint256 amount, uint256 campaign);\\n    event EmergencyWithdraw(\\n        address indexed user,\\n        uint256 amount,\\n        uint256 campaign\\n    );\\n    event AddCampaignInfo(\\n        uint256 indexed campaignID,\\n        IBoringERC20 stakingToken,\\n        IBoringERC20 rewardToken,\\n        uint256 startTimestamp\\n    );\\n    event AddRewardInfo(\\n        uint256 indexed campaignID,\\n        uint256 indexed phase,\\n        uint256 endTimestamp,\\n        uint256 rewardPerTimestamp\\n    );\\n    event SetRewardInfoLimit(uint256 rewardInfoLimit);\\n    event SetRewardHolder(address rewardHolder);\\n\\n    // constructor\\n    constructor(address _rewardHolder) {\\n        rewardInfoLimit = 53;\\n        rewardHolder = _rewardHolder;\\n    }\\n\\n    // @notice function for setting a reward holder who is responsible for adding a reward info\\n    function setRewardHolder(address _rewardHolder) external onlyOwner {\\n        rewardHolder = _rewardHolder;\\n        emit SetRewardHolder(_rewardHolder);\\n    }\\n\\n    // @notice set new reward info limit\\n    function setRewardInfoLimit(uint256 _updatedRewardInfoLimit)\\n        external\\n        onlyOwner\\n    {\\n        rewardInfoLimit = _updatedRewardInfoLimit;\\n        emit SetRewardInfoLimit(rewardInfoLimit);\\n    }\\n\\n    // @notice reward campaign, one campaign represents a pair of staking and reward token, last reward Timestamp and acc reward Per Share\\n    function addCampaignInfo(\\n        IBoringERC20 _stakingToken,\\n        IBoringERC20 _rewardToken,\\n        uint256 _startTimestamp\\n    ) external onlyOwner {\\n        uint256 decimalsRewardToken = uint256(_rewardToken.safeDecimals());\\n\\n        require(\\n            decimalsRewardToken < 30,\\n            \\\"constructor: reward token decimals must be inferior to 30\\\"\\n        );\\n\\n        uint256 precision = uint256(10**(uint256(30) - (decimalsRewardToken)));\\n\\n        campaignInfo.push(\\n            CampaignInfo({\\n                stakingToken: _stakingToken,\\n                rewardToken: _rewardToken,\\n                precision: precision,\\n                startTimestamp: _startTimestamp,\\n                lastRewardTimestamp: _startTimestamp,\\n                accRewardPerShare: 0,\\n                totalStaked: 0,\\n                totalRewards: 0\\n            })\\n        );\\n        emit AddCampaignInfo(\\n            campaignInfo.length - 1,\\n            _stakingToken,\\n            _rewardToken,\\n            _startTimestamp\\n        );\\n    }\\n\\n    // @notice if the new reward info is added, the reward & its end timestamp will be extended by the newly pushed reward info.\\n    function addRewardInfo(\\n        uint256 _campaignID,\\n        uint256 _endTimestamp,\\n        uint256 _rewardPerSec\\n    ) external onlyOwner {\\n        RewardInfo[] storage rewardInfo = campaignRewardInfo[_campaignID];\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        require(\\n            rewardInfo.length < rewardInfoLimit,\\n            \\\"addRewardInfo::reward info length exceeds the limit\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp >=\\n                block.timestamp,\\n            \\\"addRewardInfo::reward period ended\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp < _endTimestamp,\\n            \\\"addRewardInfo::bad new endTimestamp\\\"\\n        );\\n        uint256 startTimestamp = rewardInfo.length == 0\\n            ? campaign.startTimestamp\\n            : rewardInfo[rewardInfo.length - 1].endTimestamp;\\n        uint256 timeRange = _endTimestamp - startTimestamp;\\n        uint256 totalRewards = _rewardPerSec * timeRange;\\n        campaign.rewardToken.safeTransferFrom(\\n            rewardHolder,\\n            address(this),\\n            totalRewards\\n        );\\n        campaign.totalRewards += totalRewards;\\n        rewardInfo.push(\\n            RewardInfo({\\n                endTimestamp: _endTimestamp,\\n                rewardPerSec: _rewardPerSec\\n            })\\n        );\\n        emit AddRewardInfo(\\n            _campaignID,\\n            rewardInfo.length - 1,\\n            _endTimestamp,\\n            _rewardPerSec\\n        );\\n    }\\n\\n    function rewardInfoLen(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return campaignRewardInfo[_campaignID].length;\\n    }\\n\\n    function campaignInfoLen() external view returns (uint256) {\\n        return campaignInfo.length;\\n    }\\n\\n    // @notice this will return  end block based on the current block timestamp.\\n    function currentEndTimestamp(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _endTimestampOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _endTimestampOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].endTimestamp;\\n        }\\n        // @dev when couldn't find any reward info, it means that _blockTimestamp exceed endTimestamp\\n        // so return the latest reward info.\\n        return rewardInfo[len - 1].endTimestamp;\\n    }\\n\\n    // @notice this will return reward per block based on the current block timestamp.\\n    function currentRewardPerSec(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _rewardPerSecOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _rewardPerSecOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].rewardPerSec;\\n        }\\n        // @dev when couldn't find any reward info, it means that timestamp exceed endtimestamp\\n        // so return 0\\n        return 0;\\n    }\\n\\n    // @notice Return reward multiplier over the given _from to _to timestamp.\\n    function getMultiplier(\\n        uint256 _from,\\n        uint256 _to,\\n        uint256 _endTimestamp\\n    ) public pure returns (uint256) {\\n        if ((_from >= _endTimestamp) || (_from > _to)) {\\n            return 0;\\n        }\\n        if (_to <= _endTimestamp) {\\n            return _to - _from;\\n        }\\n        return _endTimestamp - _from;\\n    }\\n\\n    // @notice View function to see pending Reward on frontend.\\n    function pendingReward(uint256 _campaignID, address _user)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return\\n            _pendingReward(\\n                _campaignID,\\n                userInfo[_campaignID][_user].amount,\\n                userInfo[_campaignID][_user].rewardDebt\\n            );\\n    }\\n\\n    function _pendingReward(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 _rewardDebt\\n    ) internal view returns (uint256) {\\n        CampaignInfo memory campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 accRewardPerShare = campaign.accRewardPerShare;\\n        if (\\n            block.timestamp > campaign.lastRewardTimestamp &&\\n            campaign.totalStaked != 0\\n        ) {\\n            uint256 cursor = campaign.lastRewardTimestamp;\\n            for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n                uint256 multiplier = getMultiplier(\\n                    cursor,\\n                    block.timestamp,\\n                    rewardInfo[i].endTimestamp\\n                );\\n                if (multiplier == 0) continue;\\n                cursor = rewardInfo[i].endTimestamp;\\n                accRewardPerShare +=\\n                    ((multiplier * rewardInfo[i].rewardPerSec) *\\n                        campaign.precision) /\\n                    campaign.totalStaked;\\n            }\\n        }\\n        return\\n            ((_amount * accRewardPerShare) / campaign.precision) - _rewardDebt;\\n    }\\n\\n    function updateCampaign(uint256 _campaignID) external nonReentrant {\\n        _updateCampaign(_campaignID);\\n    }\\n\\n    // @notice Update reward variables of the given campaign to be up-to-date.\\n    function _updateCampaign(uint256 _campaignID) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        if (block.timestamp <= campaign.lastRewardTimestamp) {\\n            return;\\n        }\\n        if (campaign.totalStaked == 0) {\\n            // if there is no total supply, return and use the campaign's start block timestamp as the last reward block timestamp\\n            // so that ALL reward will be distributed.\\n            // however, if the first deposit is out of reward period, last reward block will be its block timestamp\\n            // in order to keep the multiplier = 0\\n            if (\\n                block.timestamp > _endTimestampOf(_campaignID, block.timestamp)\\n            ) {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            return;\\n        }\\n        // @dev for each reward info\\n        for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n            // @dev get multiplier based on current Block and rewardInfo's end block\\n            // multiplier will be a range of either (current block - campaign.lastRewardBlock)\\n            // or (reward info's endblock - campaign.lastRewardTimestamp) or 0\\n            uint256 multiplier = getMultiplier(\\n                campaign.lastRewardTimestamp,\\n                block.timestamp,\\n                rewardInfo[i].endTimestamp\\n            );\\n            if (multiplier == 0) continue;\\n            // @dev if currentTimestamp exceed end block, use end block as the last reward block\\n            // so that for the next iteration, previous endTimestamp will be used as the last reward block\\n            if (block.timestamp > rewardInfo[i].endTimestamp) {\\n                campaign.lastRewardTimestamp = rewardInfo[i].endTimestamp;\\n            } else {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            campaign.accRewardPerShare +=\\n                ((multiplier * rewardInfo[i].rewardPerSec) *\\n                    campaign.precision) /\\n                campaign.totalStaked;\\n        }\\n    }\\n\\n    // @notice Update reward variables for all campaigns. gas spending is HIGH in this method call, BE CAREFUL\\n    function massUpdateCampaigns() external nonReentrant {\\n        uint256 length = campaignInfo.length;\\n        for (uint256 pid = 0; pid < length; ++pid) {\\n            _updateCampaign(pid);\\n        }\\n    }\\n\\n    function depositWithPermit(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        campaign.stakingToken.permit(\\n            msg.sender,\\n            address(this),\\n            _amount,\\n            deadline,\\n            v,\\n            r,\\n            s\\n        );\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function deposit(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function _deposit(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        _updateCampaign(_campaignID);\\n        if (user.amount > 0) {\\n            uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n                campaign.precision) - user.rewardDebt;\\n            if (pending > 0) {\\n                campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n            }\\n        }\\n        if (_amount > 0) {\\n            campaign.stakingToken.safeTransferFrom(\\n                address(msg.sender),\\n                address(this),\\n                _amount\\n            );\\n            user.amount += _amount;\\n            campaign.totalStaked += _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n        emit Deposit(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw Staking tokens from STAKING.\\n    function withdraw(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _withdraw(_campaignID, _amount);\\n    }\\n\\n    // @notice internal method for withdraw (withdraw and harvest method depend on this method)\\n    function _withdraw(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        require(user.amount >= _amount, \\\"withdraw::bad withdraw amount\\\");\\n        _updateCampaign(_campaignID);\\n        uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n            campaign.precision) - user.rewardDebt;\\n        if (pending > 0) {\\n            campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n        }\\n        if (_amount > 0) {\\n            user.amount -= _amount;\\n            campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n            campaign.totalStaked -= _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n\\n        emit Withdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice method for harvest campaigns (used when the user want to claim their reward token based on specified campaigns)\\n    function harvest(uint256[] calldata _campaignIDs) external nonReentrant {\\n        for (uint256 i = 0; i < _campaignIDs.length; ++i) {\\n            _withdraw(_campaignIDs[i], 0);\\n        }\\n    }\\n\\n    // @notice Withdraw without caring about rewards. EMERGENCY ONLY.\\n    function emergencyWithdraw(uint256 _campaignID) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        uint256 _amount = user.amount;\\n        campaign.totalStaked -= _amount;\\n        user.amount = 0;\\n        user.rewardDebt = 0;\\n        campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n        emit EmergencyWithdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw reward. EMERGENCY ONLY.\\n    function emergencyRewardWithdraw(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        address _beneficiary\\n    ) external onlyOwner nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        uint256 currentStakingPendingReward = _pendingReward(\\n            _campaignID,\\n            campaign.totalStaked,\\n            0\\n        );\\n        require(\\n            currentStakingPendingReward + _amount <= campaign.totalRewards,\\n            \\\"emergencyRewardWithdraw::not enough reward token\\\"\\n        );\\n        campaign.totalRewards -= _amount;\\n        campaign.rewardToken.safeTransfer(_beneficiary, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0694f4be8e5ed7ebc4357e3e639c73573c0f801f88bd80dbec3b0cb4bd879035\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "Context": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking/TokenFarm.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"contracts/staking/TokenFarm.sol\":{\"content\":\"// Sources flattened with hardhat v2.6.0 https://hardhat.org\\n\\n// File @openzeppelin/contracts/security/ReentrancyGuard.sol@v4.2.0\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n// File @openzeppelin/contracts/utils/Context.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n// File @openzeppelin/contracts/access/Ownable.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n// File contracts/libraries/IBoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\ninterface IBoringERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice EIP 2612\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n// File contracts/libraries/BoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\n// solhint-disable avoid-low-level-calls\\n\\nlibrary BoringERC20 {\\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41; // symbol()\\n    bytes4 private constant SIG_NAME = 0x06fdde03; // name()\\n    bytes4 private constant SIG_DECIMALS = 0x313ce567; // decimals()\\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb; // transfer(address,uint256)\\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd; // transferFrom(address,address,uint256)\\n\\n    function returnDataToString(bytes memory data)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        if (data.length >= 64) {\\n            return abi.decode(data, (string));\\n        } else if (data.length == 32) {\\n            uint8 i = 0;\\n            while (i < 32 && data[i] != 0) {\\n                i++;\\n            }\\n            bytes memory bytesArray = new bytes(i);\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\n                bytesArray[i] = data[i];\\n            }\\n            return string(bytesArray);\\n        } else {\\n            return \\\"???\\\";\\n        }\\n    }\\n\\n    /// @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token symbol.\\n    function safeSymbol(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_SYMBOL)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.name version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token name.\\n    function safeName(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_NAME)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (uint8) Token decimals.\\n    function safeDecimals(IBoringERC20 token) internal view returns (uint8) {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_DECIMALS)\\n        );\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\n    }\\n\\n    /// @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransfer(\\n        IBoringERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: Transfer failed\\\"\\n        );\\n    }\\n\\n    /// @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param from Transfer tokens from.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransferFrom(\\n        IBoringERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: TransferFrom failed\\\"\\n        );\\n    }\\n}\\n// File contracts/staking/TokenFarm.sol\\n\\npragma solidity ^0.8.7;\\n\\ncontract TokenFarm is Ownable, ReentrancyGuard {\\n    using BoringERC20 for IBoringERC20;\\n\\n    // Info of each user for each farm.\\n    struct UserInfo {\\n        uint256 amount; // How many Staking tokens the user has provided.\\n        uint256 rewardDebt; // Reward debt. See explanation below.\\n    }\\n\\n    // Info of each reward distribution campaign.\\n    struct CampaignInfo {\\n        IBoringERC20 stakingToken; // Address of Staking token contract.\\n        IBoringERC20 rewardToken; // Address of Reward token contract\\n        uint256 precision; //reward token precision\\n        uint256 startTimestamp; // start timestamp of the campaign\\n        uint256 lastRewardTimestamp; // Last timestamp that Reward Token distribution occurs.\\n        uint256 accRewardPerShare; // Accumulated Reward Token per share. See below.\\n        uint256 totalStaked; // total staked amount each campaign's stake token, typically, each campaign has the same stake token, so need to track it separatedly\\n        uint256 totalRewards;\\n    }\\n\\n    // Reward info\\n    struct RewardInfo {\\n        uint256 endTimestamp;\\n        uint256 rewardPerSec;\\n    }\\n\\n    // @dev this is mostly used for extending reward period\\n    // @notice Reward info is a set of {endTimestamp, rewardPerTimestamp}\\n    // indexed by campaigh ID\\n    mapping(uint256 => RewardInfo[]) public campaignRewardInfo;\\n\\n    // @notice Info of each campaign. mapped from campaigh ID\\n    CampaignInfo[] public campaignInfo;\\n    // Info of each user that stakes Staking tokens.\\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\\n\\n    // @notice limit length of reward info\\n    // how many phases are allowed\\n    uint256 public rewardInfoLimit;\\n    // @dev reward holder account\\n    address public rewardHolder;\\n\\n    event Deposit(address indexed user, uint256 amount, uint256 campaign);\\n    event Withdraw(address indexed user, uint256 amount, uint256 campaign);\\n    event EmergencyWithdraw(\\n        address indexed user,\\n        uint256 amount,\\n        uint256 campaign\\n    );\\n    event AddCampaignInfo(\\n        uint256 indexed campaignID,\\n        IBoringERC20 stakingToken,\\n        IBoringERC20 rewardToken,\\n        uint256 startTimestamp\\n    );\\n    event AddRewardInfo(\\n        uint256 indexed campaignID,\\n        uint256 indexed phase,\\n        uint256 endTimestamp,\\n        uint256 rewardPerTimestamp\\n    );\\n    event SetRewardInfoLimit(uint256 rewardInfoLimit);\\n    event SetRewardHolder(address rewardHolder);\\n\\n    // constructor\\n    constructor(address _rewardHolder) {\\n        rewardInfoLimit = 53;\\n        rewardHolder = _rewardHolder;\\n    }\\n\\n    // @notice function for setting a reward holder who is responsible for adding a reward info\\n    function setRewardHolder(address _rewardHolder) external onlyOwner {\\n        rewardHolder = _rewardHolder;\\n        emit SetRewardHolder(_rewardHolder);\\n    }\\n\\n    // @notice set new reward info limit\\n    function setRewardInfoLimit(uint256 _updatedRewardInfoLimit)\\n        external\\n        onlyOwner\\n    {\\n        rewardInfoLimit = _updatedRewardInfoLimit;\\n        emit SetRewardInfoLimit(rewardInfoLimit);\\n    }\\n\\n    // @notice reward campaign, one campaign represents a pair of staking and reward token, last reward Timestamp and acc reward Per Share\\n    function addCampaignInfo(\\n        IBoringERC20 _stakingToken,\\n        IBoringERC20 _rewardToken,\\n        uint256 _startTimestamp\\n    ) external onlyOwner {\\n        uint256 decimalsRewardToken = uint256(_rewardToken.safeDecimals());\\n\\n        require(\\n            decimalsRewardToken < 30,\\n            \\\"constructor: reward token decimals must be inferior to 30\\\"\\n        );\\n\\n        uint256 precision = uint256(10**(uint256(30) - (decimalsRewardToken)));\\n\\n        campaignInfo.push(\\n            CampaignInfo({\\n                stakingToken: _stakingToken,\\n                rewardToken: _rewardToken,\\n                precision: precision,\\n                startTimestamp: _startTimestamp,\\n                lastRewardTimestamp: _startTimestamp,\\n                accRewardPerShare: 0,\\n                totalStaked: 0,\\n                totalRewards: 0\\n            })\\n        );\\n        emit AddCampaignInfo(\\n            campaignInfo.length - 1,\\n            _stakingToken,\\n            _rewardToken,\\n            _startTimestamp\\n        );\\n    }\\n\\n    // @notice if the new reward info is added, the reward & its end timestamp will be extended by the newly pushed reward info.\\n    function addRewardInfo(\\n        uint256 _campaignID,\\n        uint256 _endTimestamp,\\n        uint256 _rewardPerSec\\n    ) external onlyOwner {\\n        RewardInfo[] storage rewardInfo = campaignRewardInfo[_campaignID];\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        require(\\n            rewardInfo.length < rewardInfoLimit,\\n            \\\"addRewardInfo::reward info length exceeds the limit\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp >=\\n                block.timestamp,\\n            \\\"addRewardInfo::reward period ended\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp < _endTimestamp,\\n            \\\"addRewardInfo::bad new endTimestamp\\\"\\n        );\\n        uint256 startTimestamp = rewardInfo.length == 0\\n            ? campaign.startTimestamp\\n            : rewardInfo[rewardInfo.length - 1].endTimestamp;\\n        uint256 timeRange = _endTimestamp - startTimestamp;\\n        uint256 totalRewards = _rewardPerSec * timeRange;\\n        campaign.rewardToken.safeTransferFrom(\\n            rewardHolder,\\n            address(this),\\n            totalRewards\\n        );\\n        campaign.totalRewards += totalRewards;\\n        rewardInfo.push(\\n            RewardInfo({\\n                endTimestamp: _endTimestamp,\\n                rewardPerSec: _rewardPerSec\\n            })\\n        );\\n        emit AddRewardInfo(\\n            _campaignID,\\n            rewardInfo.length - 1,\\n            _endTimestamp,\\n            _rewardPerSec\\n        );\\n    }\\n\\n    function rewardInfoLen(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return campaignRewardInfo[_campaignID].length;\\n    }\\n\\n    function campaignInfoLen() external view returns (uint256) {\\n        return campaignInfo.length;\\n    }\\n\\n    // @notice this will return  end block based on the current block timestamp.\\n    function currentEndTimestamp(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _endTimestampOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _endTimestampOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].endTimestamp;\\n        }\\n        // @dev when couldn't find any reward info, it means that _blockTimestamp exceed endTimestamp\\n        // so return the latest reward info.\\n        return rewardInfo[len - 1].endTimestamp;\\n    }\\n\\n    // @notice this will return reward per block based on the current block timestamp.\\n    function currentRewardPerSec(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _rewardPerSecOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _rewardPerSecOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].rewardPerSec;\\n        }\\n        // @dev when couldn't find any reward info, it means that timestamp exceed endtimestamp\\n        // so return 0\\n        return 0;\\n    }\\n\\n    // @notice Return reward multiplier over the given _from to _to timestamp.\\n    function getMultiplier(\\n        uint256 _from,\\n        uint256 _to,\\n        uint256 _endTimestamp\\n    ) public pure returns (uint256) {\\n        if ((_from >= _endTimestamp) || (_from > _to)) {\\n            return 0;\\n        }\\n        if (_to <= _endTimestamp) {\\n            return _to - _from;\\n        }\\n        return _endTimestamp - _from;\\n    }\\n\\n    // @notice View function to see pending Reward on frontend.\\n    function pendingReward(uint256 _campaignID, address _user)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return\\n            _pendingReward(\\n                _campaignID,\\n                userInfo[_campaignID][_user].amount,\\n                userInfo[_campaignID][_user].rewardDebt\\n            );\\n    }\\n\\n    function _pendingReward(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 _rewardDebt\\n    ) internal view returns (uint256) {\\n        CampaignInfo memory campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 accRewardPerShare = campaign.accRewardPerShare;\\n        if (\\n            block.timestamp > campaign.lastRewardTimestamp &&\\n            campaign.totalStaked != 0\\n        ) {\\n            uint256 cursor = campaign.lastRewardTimestamp;\\n            for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n                uint256 multiplier = getMultiplier(\\n                    cursor,\\n                    block.timestamp,\\n                    rewardInfo[i].endTimestamp\\n                );\\n                if (multiplier == 0) continue;\\n                cursor = rewardInfo[i].endTimestamp;\\n                accRewardPerShare +=\\n                    ((multiplier * rewardInfo[i].rewardPerSec) *\\n                        campaign.precision) /\\n                    campaign.totalStaked;\\n            }\\n        }\\n        return\\n            ((_amount * accRewardPerShare) / campaign.precision) - _rewardDebt;\\n    }\\n\\n    function updateCampaign(uint256 _campaignID) external nonReentrant {\\n        _updateCampaign(_campaignID);\\n    }\\n\\n    // @notice Update reward variables of the given campaign to be up-to-date.\\n    function _updateCampaign(uint256 _campaignID) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        if (block.timestamp <= campaign.lastRewardTimestamp) {\\n            return;\\n        }\\n        if (campaign.totalStaked == 0) {\\n            // if there is no total supply, return and use the campaign's start block timestamp as the last reward block timestamp\\n            // so that ALL reward will be distributed.\\n            // however, if the first deposit is out of reward period, last reward block will be its block timestamp\\n            // in order to keep the multiplier = 0\\n            if (\\n                block.timestamp > _endTimestampOf(_campaignID, block.timestamp)\\n            ) {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            return;\\n        }\\n        // @dev for each reward info\\n        for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n            // @dev get multiplier based on current Block and rewardInfo's end block\\n            // multiplier will be a range of either (current block - campaign.lastRewardBlock)\\n            // or (reward info's endblock - campaign.lastRewardTimestamp) or 0\\n            uint256 multiplier = getMultiplier(\\n                campaign.lastRewardTimestamp,\\n                block.timestamp,\\n                rewardInfo[i].endTimestamp\\n            );\\n            if (multiplier == 0) continue;\\n            // @dev if currentTimestamp exceed end block, use end block as the last reward block\\n            // so that for the next iteration, previous endTimestamp will be used as the last reward block\\n            if (block.timestamp > rewardInfo[i].endTimestamp) {\\n                campaign.lastRewardTimestamp = rewardInfo[i].endTimestamp;\\n            } else {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            campaign.accRewardPerShare +=\\n                ((multiplier * rewardInfo[i].rewardPerSec) *\\n                    campaign.precision) /\\n                campaign.totalStaked;\\n        }\\n    }\\n\\n    // @notice Update reward variables for all campaigns. gas spending is HIGH in this method call, BE CAREFUL\\n    function massUpdateCampaigns() external nonReentrant {\\n        uint256 length = campaignInfo.length;\\n        for (uint256 pid = 0; pid < length; ++pid) {\\n            _updateCampaign(pid);\\n        }\\n    }\\n\\n    function depositWithPermit(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        campaign.stakingToken.permit(\\n            msg.sender,\\n            address(this),\\n            _amount,\\n            deadline,\\n            v,\\n            r,\\n            s\\n        );\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function deposit(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function _deposit(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        _updateCampaign(_campaignID);\\n        if (user.amount > 0) {\\n            uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n                campaign.precision) - user.rewardDebt;\\n            if (pending > 0) {\\n                campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n            }\\n        }\\n        if (_amount > 0) {\\n            campaign.stakingToken.safeTransferFrom(\\n                address(msg.sender),\\n                address(this),\\n                _amount\\n            );\\n            user.amount += _amount;\\n            campaign.totalStaked += _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n        emit Deposit(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw Staking tokens from STAKING.\\n    function withdraw(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _withdraw(_campaignID, _amount);\\n    }\\n\\n    // @notice internal method for withdraw (withdraw and harvest method depend on this method)\\n    function _withdraw(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        require(user.amount >= _amount, \\\"withdraw::bad withdraw amount\\\");\\n        _updateCampaign(_campaignID);\\n        uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n            campaign.precision) - user.rewardDebt;\\n        if (pending > 0) {\\n            campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n        }\\n        if (_amount > 0) {\\n            user.amount -= _amount;\\n            campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n            campaign.totalStaked -= _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n\\n        emit Withdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice method for harvest campaigns (used when the user want to claim their reward token based on specified campaigns)\\n    function harvest(uint256[] calldata _campaignIDs) external nonReentrant {\\n        for (uint256 i = 0; i < _campaignIDs.length; ++i) {\\n            _withdraw(_campaignIDs[i], 0);\\n        }\\n    }\\n\\n    // @notice Withdraw without caring about rewards. EMERGENCY ONLY.\\n    function emergencyWithdraw(uint256 _campaignID) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        uint256 _amount = user.amount;\\n        campaign.totalStaked -= _amount;\\n        user.amount = 0;\\n        user.rewardDebt = 0;\\n        campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n        emit EmergencyWithdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw reward. EMERGENCY ONLY.\\n    function emergencyRewardWithdraw(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        address _beneficiary\\n    ) external onlyOwner nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        uint256 currentStakingPendingReward = _pendingReward(\\n            _campaignID,\\n            campaign.totalStaked,\\n            0\\n        );\\n        require(\\n            currentStakingPendingReward + _amount <= campaign.totalRewards,\\n            \\\"emergencyRewardWithdraw::not enough reward token\\\"\\n        );\\n        campaign.totalRewards -= _amount;\\n        campaign.rewardToken.safeTransfer(_beneficiary, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0694f4be8e5ed7ebc4357e3e639c73573c0f801f88bd80dbec3b0cb4bd879035\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "IBoringERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "mint(address,uint256)": "40c10f19",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "totalSupply()": "18160ddd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"EIP 2612\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking/TokenFarm.sol\":\"IBoringERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"contracts/staking/TokenFarm.sol\":{\"content\":\"// Sources flattened with hardhat v2.6.0 https://hardhat.org\\n\\n// File @openzeppelin/contracts/security/ReentrancyGuard.sol@v4.2.0\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n// File @openzeppelin/contracts/utils/Context.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n// File @openzeppelin/contracts/access/Ownable.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n// File contracts/libraries/IBoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\ninterface IBoringERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice EIP 2612\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n// File contracts/libraries/BoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\n// solhint-disable avoid-low-level-calls\\n\\nlibrary BoringERC20 {\\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41; // symbol()\\n    bytes4 private constant SIG_NAME = 0x06fdde03; // name()\\n    bytes4 private constant SIG_DECIMALS = 0x313ce567; // decimals()\\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb; // transfer(address,uint256)\\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd; // transferFrom(address,address,uint256)\\n\\n    function returnDataToString(bytes memory data)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        if (data.length >= 64) {\\n            return abi.decode(data, (string));\\n        } else if (data.length == 32) {\\n            uint8 i = 0;\\n            while (i < 32 && data[i] != 0) {\\n                i++;\\n            }\\n            bytes memory bytesArray = new bytes(i);\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\n                bytesArray[i] = data[i];\\n            }\\n            return string(bytesArray);\\n        } else {\\n            return \\\"???\\\";\\n        }\\n    }\\n\\n    /// @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token symbol.\\n    function safeSymbol(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_SYMBOL)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.name version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token name.\\n    function safeName(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_NAME)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (uint8) Token decimals.\\n    function safeDecimals(IBoringERC20 token) internal view returns (uint8) {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_DECIMALS)\\n        );\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\n    }\\n\\n    /// @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransfer(\\n        IBoringERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: Transfer failed\\\"\\n        );\\n    }\\n\\n    /// @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param from Transfer tokens from.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransferFrom(\\n        IBoringERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: TransferFrom failed\\\"\\n        );\\n    }\\n}\\n// File contracts/staking/TokenFarm.sol\\n\\npragma solidity ^0.8.7;\\n\\ncontract TokenFarm is Ownable, ReentrancyGuard {\\n    using BoringERC20 for IBoringERC20;\\n\\n    // Info of each user for each farm.\\n    struct UserInfo {\\n        uint256 amount; // How many Staking tokens the user has provided.\\n        uint256 rewardDebt; // Reward debt. See explanation below.\\n    }\\n\\n    // Info of each reward distribution campaign.\\n    struct CampaignInfo {\\n        IBoringERC20 stakingToken; // Address of Staking token contract.\\n        IBoringERC20 rewardToken; // Address of Reward token contract\\n        uint256 precision; //reward token precision\\n        uint256 startTimestamp; // start timestamp of the campaign\\n        uint256 lastRewardTimestamp; // Last timestamp that Reward Token distribution occurs.\\n        uint256 accRewardPerShare; // Accumulated Reward Token per share. See below.\\n        uint256 totalStaked; // total staked amount each campaign's stake token, typically, each campaign has the same stake token, so need to track it separatedly\\n        uint256 totalRewards;\\n    }\\n\\n    // Reward info\\n    struct RewardInfo {\\n        uint256 endTimestamp;\\n        uint256 rewardPerSec;\\n    }\\n\\n    // @dev this is mostly used for extending reward period\\n    // @notice Reward info is a set of {endTimestamp, rewardPerTimestamp}\\n    // indexed by campaigh ID\\n    mapping(uint256 => RewardInfo[]) public campaignRewardInfo;\\n\\n    // @notice Info of each campaign. mapped from campaigh ID\\n    CampaignInfo[] public campaignInfo;\\n    // Info of each user that stakes Staking tokens.\\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\\n\\n    // @notice limit length of reward info\\n    // how many phases are allowed\\n    uint256 public rewardInfoLimit;\\n    // @dev reward holder account\\n    address public rewardHolder;\\n\\n    event Deposit(address indexed user, uint256 amount, uint256 campaign);\\n    event Withdraw(address indexed user, uint256 amount, uint256 campaign);\\n    event EmergencyWithdraw(\\n        address indexed user,\\n        uint256 amount,\\n        uint256 campaign\\n    );\\n    event AddCampaignInfo(\\n        uint256 indexed campaignID,\\n        IBoringERC20 stakingToken,\\n        IBoringERC20 rewardToken,\\n        uint256 startTimestamp\\n    );\\n    event AddRewardInfo(\\n        uint256 indexed campaignID,\\n        uint256 indexed phase,\\n        uint256 endTimestamp,\\n        uint256 rewardPerTimestamp\\n    );\\n    event SetRewardInfoLimit(uint256 rewardInfoLimit);\\n    event SetRewardHolder(address rewardHolder);\\n\\n    // constructor\\n    constructor(address _rewardHolder) {\\n        rewardInfoLimit = 53;\\n        rewardHolder = _rewardHolder;\\n    }\\n\\n    // @notice function for setting a reward holder who is responsible for adding a reward info\\n    function setRewardHolder(address _rewardHolder) external onlyOwner {\\n        rewardHolder = _rewardHolder;\\n        emit SetRewardHolder(_rewardHolder);\\n    }\\n\\n    // @notice set new reward info limit\\n    function setRewardInfoLimit(uint256 _updatedRewardInfoLimit)\\n        external\\n        onlyOwner\\n    {\\n        rewardInfoLimit = _updatedRewardInfoLimit;\\n        emit SetRewardInfoLimit(rewardInfoLimit);\\n    }\\n\\n    // @notice reward campaign, one campaign represents a pair of staking and reward token, last reward Timestamp and acc reward Per Share\\n    function addCampaignInfo(\\n        IBoringERC20 _stakingToken,\\n        IBoringERC20 _rewardToken,\\n        uint256 _startTimestamp\\n    ) external onlyOwner {\\n        uint256 decimalsRewardToken = uint256(_rewardToken.safeDecimals());\\n\\n        require(\\n            decimalsRewardToken < 30,\\n            \\\"constructor: reward token decimals must be inferior to 30\\\"\\n        );\\n\\n        uint256 precision = uint256(10**(uint256(30) - (decimalsRewardToken)));\\n\\n        campaignInfo.push(\\n            CampaignInfo({\\n                stakingToken: _stakingToken,\\n                rewardToken: _rewardToken,\\n                precision: precision,\\n                startTimestamp: _startTimestamp,\\n                lastRewardTimestamp: _startTimestamp,\\n                accRewardPerShare: 0,\\n                totalStaked: 0,\\n                totalRewards: 0\\n            })\\n        );\\n        emit AddCampaignInfo(\\n            campaignInfo.length - 1,\\n            _stakingToken,\\n            _rewardToken,\\n            _startTimestamp\\n        );\\n    }\\n\\n    // @notice if the new reward info is added, the reward & its end timestamp will be extended by the newly pushed reward info.\\n    function addRewardInfo(\\n        uint256 _campaignID,\\n        uint256 _endTimestamp,\\n        uint256 _rewardPerSec\\n    ) external onlyOwner {\\n        RewardInfo[] storage rewardInfo = campaignRewardInfo[_campaignID];\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        require(\\n            rewardInfo.length < rewardInfoLimit,\\n            \\\"addRewardInfo::reward info length exceeds the limit\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp >=\\n                block.timestamp,\\n            \\\"addRewardInfo::reward period ended\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp < _endTimestamp,\\n            \\\"addRewardInfo::bad new endTimestamp\\\"\\n        );\\n        uint256 startTimestamp = rewardInfo.length == 0\\n            ? campaign.startTimestamp\\n            : rewardInfo[rewardInfo.length - 1].endTimestamp;\\n        uint256 timeRange = _endTimestamp - startTimestamp;\\n        uint256 totalRewards = _rewardPerSec * timeRange;\\n        campaign.rewardToken.safeTransferFrom(\\n            rewardHolder,\\n            address(this),\\n            totalRewards\\n        );\\n        campaign.totalRewards += totalRewards;\\n        rewardInfo.push(\\n            RewardInfo({\\n                endTimestamp: _endTimestamp,\\n                rewardPerSec: _rewardPerSec\\n            })\\n        );\\n        emit AddRewardInfo(\\n            _campaignID,\\n            rewardInfo.length - 1,\\n            _endTimestamp,\\n            _rewardPerSec\\n        );\\n    }\\n\\n    function rewardInfoLen(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return campaignRewardInfo[_campaignID].length;\\n    }\\n\\n    function campaignInfoLen() external view returns (uint256) {\\n        return campaignInfo.length;\\n    }\\n\\n    // @notice this will return  end block based on the current block timestamp.\\n    function currentEndTimestamp(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _endTimestampOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _endTimestampOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].endTimestamp;\\n        }\\n        // @dev when couldn't find any reward info, it means that _blockTimestamp exceed endTimestamp\\n        // so return the latest reward info.\\n        return rewardInfo[len - 1].endTimestamp;\\n    }\\n\\n    // @notice this will return reward per block based on the current block timestamp.\\n    function currentRewardPerSec(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _rewardPerSecOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _rewardPerSecOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].rewardPerSec;\\n        }\\n        // @dev when couldn't find any reward info, it means that timestamp exceed endtimestamp\\n        // so return 0\\n        return 0;\\n    }\\n\\n    // @notice Return reward multiplier over the given _from to _to timestamp.\\n    function getMultiplier(\\n        uint256 _from,\\n        uint256 _to,\\n        uint256 _endTimestamp\\n    ) public pure returns (uint256) {\\n        if ((_from >= _endTimestamp) || (_from > _to)) {\\n            return 0;\\n        }\\n        if (_to <= _endTimestamp) {\\n            return _to - _from;\\n        }\\n        return _endTimestamp - _from;\\n    }\\n\\n    // @notice View function to see pending Reward on frontend.\\n    function pendingReward(uint256 _campaignID, address _user)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return\\n            _pendingReward(\\n                _campaignID,\\n                userInfo[_campaignID][_user].amount,\\n                userInfo[_campaignID][_user].rewardDebt\\n            );\\n    }\\n\\n    function _pendingReward(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 _rewardDebt\\n    ) internal view returns (uint256) {\\n        CampaignInfo memory campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 accRewardPerShare = campaign.accRewardPerShare;\\n        if (\\n            block.timestamp > campaign.lastRewardTimestamp &&\\n            campaign.totalStaked != 0\\n        ) {\\n            uint256 cursor = campaign.lastRewardTimestamp;\\n            for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n                uint256 multiplier = getMultiplier(\\n                    cursor,\\n                    block.timestamp,\\n                    rewardInfo[i].endTimestamp\\n                );\\n                if (multiplier == 0) continue;\\n                cursor = rewardInfo[i].endTimestamp;\\n                accRewardPerShare +=\\n                    ((multiplier * rewardInfo[i].rewardPerSec) *\\n                        campaign.precision) /\\n                    campaign.totalStaked;\\n            }\\n        }\\n        return\\n            ((_amount * accRewardPerShare) / campaign.precision) - _rewardDebt;\\n    }\\n\\n    function updateCampaign(uint256 _campaignID) external nonReentrant {\\n        _updateCampaign(_campaignID);\\n    }\\n\\n    // @notice Update reward variables of the given campaign to be up-to-date.\\n    function _updateCampaign(uint256 _campaignID) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        if (block.timestamp <= campaign.lastRewardTimestamp) {\\n            return;\\n        }\\n        if (campaign.totalStaked == 0) {\\n            // if there is no total supply, return and use the campaign's start block timestamp as the last reward block timestamp\\n            // so that ALL reward will be distributed.\\n            // however, if the first deposit is out of reward period, last reward block will be its block timestamp\\n            // in order to keep the multiplier = 0\\n            if (\\n                block.timestamp > _endTimestampOf(_campaignID, block.timestamp)\\n            ) {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            return;\\n        }\\n        // @dev for each reward info\\n        for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n            // @dev get multiplier based on current Block and rewardInfo's end block\\n            // multiplier will be a range of either (current block - campaign.lastRewardBlock)\\n            // or (reward info's endblock - campaign.lastRewardTimestamp) or 0\\n            uint256 multiplier = getMultiplier(\\n                campaign.lastRewardTimestamp,\\n                block.timestamp,\\n                rewardInfo[i].endTimestamp\\n            );\\n            if (multiplier == 0) continue;\\n            // @dev if currentTimestamp exceed end block, use end block as the last reward block\\n            // so that for the next iteration, previous endTimestamp will be used as the last reward block\\n            if (block.timestamp > rewardInfo[i].endTimestamp) {\\n                campaign.lastRewardTimestamp = rewardInfo[i].endTimestamp;\\n            } else {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            campaign.accRewardPerShare +=\\n                ((multiplier * rewardInfo[i].rewardPerSec) *\\n                    campaign.precision) /\\n                campaign.totalStaked;\\n        }\\n    }\\n\\n    // @notice Update reward variables for all campaigns. gas spending is HIGH in this method call, BE CAREFUL\\n    function massUpdateCampaigns() external nonReentrant {\\n        uint256 length = campaignInfo.length;\\n        for (uint256 pid = 0; pid < length; ++pid) {\\n            _updateCampaign(pid);\\n        }\\n    }\\n\\n    function depositWithPermit(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        campaign.stakingToken.permit(\\n            msg.sender,\\n            address(this),\\n            _amount,\\n            deadline,\\n            v,\\n            r,\\n            s\\n        );\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function deposit(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function _deposit(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        _updateCampaign(_campaignID);\\n        if (user.amount > 0) {\\n            uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n                campaign.precision) - user.rewardDebt;\\n            if (pending > 0) {\\n                campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n            }\\n        }\\n        if (_amount > 0) {\\n            campaign.stakingToken.safeTransferFrom(\\n                address(msg.sender),\\n                address(this),\\n                _amount\\n            );\\n            user.amount += _amount;\\n            campaign.totalStaked += _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n        emit Deposit(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw Staking tokens from STAKING.\\n    function withdraw(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _withdraw(_campaignID, _amount);\\n    }\\n\\n    // @notice internal method for withdraw (withdraw and harvest method depend on this method)\\n    function _withdraw(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        require(user.amount >= _amount, \\\"withdraw::bad withdraw amount\\\");\\n        _updateCampaign(_campaignID);\\n        uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n            campaign.precision) - user.rewardDebt;\\n        if (pending > 0) {\\n            campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n        }\\n        if (_amount > 0) {\\n            user.amount -= _amount;\\n            campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n            campaign.totalStaked -= _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n\\n        emit Withdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice method for harvest campaigns (used when the user want to claim their reward token based on specified campaigns)\\n    function harvest(uint256[] calldata _campaignIDs) external nonReentrant {\\n        for (uint256 i = 0; i < _campaignIDs.length; ++i) {\\n            _withdraw(_campaignIDs[i], 0);\\n        }\\n    }\\n\\n    // @notice Withdraw without caring about rewards. EMERGENCY ONLY.\\n    function emergencyWithdraw(uint256 _campaignID) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        uint256 _amount = user.amount;\\n        campaign.totalStaked -= _amount;\\n        user.amount = 0;\\n        user.rewardDebt = 0;\\n        campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n        emit EmergencyWithdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw reward. EMERGENCY ONLY.\\n    function emergencyRewardWithdraw(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        address _beneficiary\\n    ) external onlyOwner nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        uint256 currentStakingPendingReward = _pendingReward(\\n            _campaignID,\\n            campaign.totalStaked,\\n            0\\n        );\\n        require(\\n            currentStakingPendingReward + _amount <= campaign.totalRewards,\\n            \\\"emergencyRewardWithdraw::not enough reward token\\\"\\n        );\\n        campaign.totalRewards -= _amount;\\n        campaign.rewardToken.safeTransfer(_beneficiary, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0694f4be8e5ed7ebc4357e3e639c73573c0f801f88bd80dbec3b0cb4bd879035\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
                "notice": "EIP 2612"
              }
            },
            "version": 1
          }
        },
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "Initializes the contract setting the deployer as the initial owner."
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking/TokenFarm.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"contracts/staking/TokenFarm.sol\":{\"content\":\"// Sources flattened with hardhat v2.6.0 https://hardhat.org\\n\\n// File @openzeppelin/contracts/security/ReentrancyGuard.sol@v4.2.0\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n// File @openzeppelin/contracts/utils/Context.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n// File @openzeppelin/contracts/access/Ownable.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n// File contracts/libraries/IBoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\ninterface IBoringERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice EIP 2612\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n// File contracts/libraries/BoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\n// solhint-disable avoid-low-level-calls\\n\\nlibrary BoringERC20 {\\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41; // symbol()\\n    bytes4 private constant SIG_NAME = 0x06fdde03; // name()\\n    bytes4 private constant SIG_DECIMALS = 0x313ce567; // decimals()\\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb; // transfer(address,uint256)\\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd; // transferFrom(address,address,uint256)\\n\\n    function returnDataToString(bytes memory data)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        if (data.length >= 64) {\\n            return abi.decode(data, (string));\\n        } else if (data.length == 32) {\\n            uint8 i = 0;\\n            while (i < 32 && data[i] != 0) {\\n                i++;\\n            }\\n            bytes memory bytesArray = new bytes(i);\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\n                bytesArray[i] = data[i];\\n            }\\n            return string(bytesArray);\\n        } else {\\n            return \\\"???\\\";\\n        }\\n    }\\n\\n    /// @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token symbol.\\n    function safeSymbol(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_SYMBOL)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.name version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token name.\\n    function safeName(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_NAME)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (uint8) Token decimals.\\n    function safeDecimals(IBoringERC20 token) internal view returns (uint8) {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_DECIMALS)\\n        );\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\n    }\\n\\n    /// @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransfer(\\n        IBoringERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: Transfer failed\\\"\\n        );\\n    }\\n\\n    /// @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param from Transfer tokens from.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransferFrom(\\n        IBoringERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: TransferFrom failed\\\"\\n        );\\n    }\\n}\\n// File contracts/staking/TokenFarm.sol\\n\\npragma solidity ^0.8.7;\\n\\ncontract TokenFarm is Ownable, ReentrancyGuard {\\n    using BoringERC20 for IBoringERC20;\\n\\n    // Info of each user for each farm.\\n    struct UserInfo {\\n        uint256 amount; // How many Staking tokens the user has provided.\\n        uint256 rewardDebt; // Reward debt. See explanation below.\\n    }\\n\\n    // Info of each reward distribution campaign.\\n    struct CampaignInfo {\\n        IBoringERC20 stakingToken; // Address of Staking token contract.\\n        IBoringERC20 rewardToken; // Address of Reward token contract\\n        uint256 precision; //reward token precision\\n        uint256 startTimestamp; // start timestamp of the campaign\\n        uint256 lastRewardTimestamp; // Last timestamp that Reward Token distribution occurs.\\n        uint256 accRewardPerShare; // Accumulated Reward Token per share. See below.\\n        uint256 totalStaked; // total staked amount each campaign's stake token, typically, each campaign has the same stake token, so need to track it separatedly\\n        uint256 totalRewards;\\n    }\\n\\n    // Reward info\\n    struct RewardInfo {\\n        uint256 endTimestamp;\\n        uint256 rewardPerSec;\\n    }\\n\\n    // @dev this is mostly used for extending reward period\\n    // @notice Reward info is a set of {endTimestamp, rewardPerTimestamp}\\n    // indexed by campaigh ID\\n    mapping(uint256 => RewardInfo[]) public campaignRewardInfo;\\n\\n    // @notice Info of each campaign. mapped from campaigh ID\\n    CampaignInfo[] public campaignInfo;\\n    // Info of each user that stakes Staking tokens.\\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\\n\\n    // @notice limit length of reward info\\n    // how many phases are allowed\\n    uint256 public rewardInfoLimit;\\n    // @dev reward holder account\\n    address public rewardHolder;\\n\\n    event Deposit(address indexed user, uint256 amount, uint256 campaign);\\n    event Withdraw(address indexed user, uint256 amount, uint256 campaign);\\n    event EmergencyWithdraw(\\n        address indexed user,\\n        uint256 amount,\\n        uint256 campaign\\n    );\\n    event AddCampaignInfo(\\n        uint256 indexed campaignID,\\n        IBoringERC20 stakingToken,\\n        IBoringERC20 rewardToken,\\n        uint256 startTimestamp\\n    );\\n    event AddRewardInfo(\\n        uint256 indexed campaignID,\\n        uint256 indexed phase,\\n        uint256 endTimestamp,\\n        uint256 rewardPerTimestamp\\n    );\\n    event SetRewardInfoLimit(uint256 rewardInfoLimit);\\n    event SetRewardHolder(address rewardHolder);\\n\\n    // constructor\\n    constructor(address _rewardHolder) {\\n        rewardInfoLimit = 53;\\n        rewardHolder = _rewardHolder;\\n    }\\n\\n    // @notice function for setting a reward holder who is responsible for adding a reward info\\n    function setRewardHolder(address _rewardHolder) external onlyOwner {\\n        rewardHolder = _rewardHolder;\\n        emit SetRewardHolder(_rewardHolder);\\n    }\\n\\n    // @notice set new reward info limit\\n    function setRewardInfoLimit(uint256 _updatedRewardInfoLimit)\\n        external\\n        onlyOwner\\n    {\\n        rewardInfoLimit = _updatedRewardInfoLimit;\\n        emit SetRewardInfoLimit(rewardInfoLimit);\\n    }\\n\\n    // @notice reward campaign, one campaign represents a pair of staking and reward token, last reward Timestamp and acc reward Per Share\\n    function addCampaignInfo(\\n        IBoringERC20 _stakingToken,\\n        IBoringERC20 _rewardToken,\\n        uint256 _startTimestamp\\n    ) external onlyOwner {\\n        uint256 decimalsRewardToken = uint256(_rewardToken.safeDecimals());\\n\\n        require(\\n            decimalsRewardToken < 30,\\n            \\\"constructor: reward token decimals must be inferior to 30\\\"\\n        );\\n\\n        uint256 precision = uint256(10**(uint256(30) - (decimalsRewardToken)));\\n\\n        campaignInfo.push(\\n            CampaignInfo({\\n                stakingToken: _stakingToken,\\n                rewardToken: _rewardToken,\\n                precision: precision,\\n                startTimestamp: _startTimestamp,\\n                lastRewardTimestamp: _startTimestamp,\\n                accRewardPerShare: 0,\\n                totalStaked: 0,\\n                totalRewards: 0\\n            })\\n        );\\n        emit AddCampaignInfo(\\n            campaignInfo.length - 1,\\n            _stakingToken,\\n            _rewardToken,\\n            _startTimestamp\\n        );\\n    }\\n\\n    // @notice if the new reward info is added, the reward & its end timestamp will be extended by the newly pushed reward info.\\n    function addRewardInfo(\\n        uint256 _campaignID,\\n        uint256 _endTimestamp,\\n        uint256 _rewardPerSec\\n    ) external onlyOwner {\\n        RewardInfo[] storage rewardInfo = campaignRewardInfo[_campaignID];\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        require(\\n            rewardInfo.length < rewardInfoLimit,\\n            \\\"addRewardInfo::reward info length exceeds the limit\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp >=\\n                block.timestamp,\\n            \\\"addRewardInfo::reward period ended\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp < _endTimestamp,\\n            \\\"addRewardInfo::bad new endTimestamp\\\"\\n        );\\n        uint256 startTimestamp = rewardInfo.length == 0\\n            ? campaign.startTimestamp\\n            : rewardInfo[rewardInfo.length - 1].endTimestamp;\\n        uint256 timeRange = _endTimestamp - startTimestamp;\\n        uint256 totalRewards = _rewardPerSec * timeRange;\\n        campaign.rewardToken.safeTransferFrom(\\n            rewardHolder,\\n            address(this),\\n            totalRewards\\n        );\\n        campaign.totalRewards += totalRewards;\\n        rewardInfo.push(\\n            RewardInfo({\\n                endTimestamp: _endTimestamp,\\n                rewardPerSec: _rewardPerSec\\n            })\\n        );\\n        emit AddRewardInfo(\\n            _campaignID,\\n            rewardInfo.length - 1,\\n            _endTimestamp,\\n            _rewardPerSec\\n        );\\n    }\\n\\n    function rewardInfoLen(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return campaignRewardInfo[_campaignID].length;\\n    }\\n\\n    function campaignInfoLen() external view returns (uint256) {\\n        return campaignInfo.length;\\n    }\\n\\n    // @notice this will return  end block based on the current block timestamp.\\n    function currentEndTimestamp(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _endTimestampOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _endTimestampOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].endTimestamp;\\n        }\\n        // @dev when couldn't find any reward info, it means that _blockTimestamp exceed endTimestamp\\n        // so return the latest reward info.\\n        return rewardInfo[len - 1].endTimestamp;\\n    }\\n\\n    // @notice this will return reward per block based on the current block timestamp.\\n    function currentRewardPerSec(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _rewardPerSecOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _rewardPerSecOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].rewardPerSec;\\n        }\\n        // @dev when couldn't find any reward info, it means that timestamp exceed endtimestamp\\n        // so return 0\\n        return 0;\\n    }\\n\\n    // @notice Return reward multiplier over the given _from to _to timestamp.\\n    function getMultiplier(\\n        uint256 _from,\\n        uint256 _to,\\n        uint256 _endTimestamp\\n    ) public pure returns (uint256) {\\n        if ((_from >= _endTimestamp) || (_from > _to)) {\\n            return 0;\\n        }\\n        if (_to <= _endTimestamp) {\\n            return _to - _from;\\n        }\\n        return _endTimestamp - _from;\\n    }\\n\\n    // @notice View function to see pending Reward on frontend.\\n    function pendingReward(uint256 _campaignID, address _user)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return\\n            _pendingReward(\\n                _campaignID,\\n                userInfo[_campaignID][_user].amount,\\n                userInfo[_campaignID][_user].rewardDebt\\n            );\\n    }\\n\\n    function _pendingReward(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 _rewardDebt\\n    ) internal view returns (uint256) {\\n        CampaignInfo memory campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 accRewardPerShare = campaign.accRewardPerShare;\\n        if (\\n            block.timestamp > campaign.lastRewardTimestamp &&\\n            campaign.totalStaked != 0\\n        ) {\\n            uint256 cursor = campaign.lastRewardTimestamp;\\n            for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n                uint256 multiplier = getMultiplier(\\n                    cursor,\\n                    block.timestamp,\\n                    rewardInfo[i].endTimestamp\\n                );\\n                if (multiplier == 0) continue;\\n                cursor = rewardInfo[i].endTimestamp;\\n                accRewardPerShare +=\\n                    ((multiplier * rewardInfo[i].rewardPerSec) *\\n                        campaign.precision) /\\n                    campaign.totalStaked;\\n            }\\n        }\\n        return\\n            ((_amount * accRewardPerShare) / campaign.precision) - _rewardDebt;\\n    }\\n\\n    function updateCampaign(uint256 _campaignID) external nonReentrant {\\n        _updateCampaign(_campaignID);\\n    }\\n\\n    // @notice Update reward variables of the given campaign to be up-to-date.\\n    function _updateCampaign(uint256 _campaignID) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        if (block.timestamp <= campaign.lastRewardTimestamp) {\\n            return;\\n        }\\n        if (campaign.totalStaked == 0) {\\n            // if there is no total supply, return and use the campaign's start block timestamp as the last reward block timestamp\\n            // so that ALL reward will be distributed.\\n            // however, if the first deposit is out of reward period, last reward block will be its block timestamp\\n            // in order to keep the multiplier = 0\\n            if (\\n                block.timestamp > _endTimestampOf(_campaignID, block.timestamp)\\n            ) {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            return;\\n        }\\n        // @dev for each reward info\\n        for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n            // @dev get multiplier based on current Block and rewardInfo's end block\\n            // multiplier will be a range of either (current block - campaign.lastRewardBlock)\\n            // or (reward info's endblock - campaign.lastRewardTimestamp) or 0\\n            uint256 multiplier = getMultiplier(\\n                campaign.lastRewardTimestamp,\\n                block.timestamp,\\n                rewardInfo[i].endTimestamp\\n            );\\n            if (multiplier == 0) continue;\\n            // @dev if currentTimestamp exceed end block, use end block as the last reward block\\n            // so that for the next iteration, previous endTimestamp will be used as the last reward block\\n            if (block.timestamp > rewardInfo[i].endTimestamp) {\\n                campaign.lastRewardTimestamp = rewardInfo[i].endTimestamp;\\n            } else {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            campaign.accRewardPerShare +=\\n                ((multiplier * rewardInfo[i].rewardPerSec) *\\n                    campaign.precision) /\\n                campaign.totalStaked;\\n        }\\n    }\\n\\n    // @notice Update reward variables for all campaigns. gas spending is HIGH in this method call, BE CAREFUL\\n    function massUpdateCampaigns() external nonReentrant {\\n        uint256 length = campaignInfo.length;\\n        for (uint256 pid = 0; pid < length; ++pid) {\\n            _updateCampaign(pid);\\n        }\\n    }\\n\\n    function depositWithPermit(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        campaign.stakingToken.permit(\\n            msg.sender,\\n            address(this),\\n            _amount,\\n            deadline,\\n            v,\\n            r,\\n            s\\n        );\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function deposit(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function _deposit(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        _updateCampaign(_campaignID);\\n        if (user.amount > 0) {\\n            uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n                campaign.precision) - user.rewardDebt;\\n            if (pending > 0) {\\n                campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n            }\\n        }\\n        if (_amount > 0) {\\n            campaign.stakingToken.safeTransferFrom(\\n                address(msg.sender),\\n                address(this),\\n                _amount\\n            );\\n            user.amount += _amount;\\n            campaign.totalStaked += _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n        emit Deposit(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw Staking tokens from STAKING.\\n    function withdraw(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _withdraw(_campaignID, _amount);\\n    }\\n\\n    // @notice internal method for withdraw (withdraw and harvest method depend on this method)\\n    function _withdraw(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        require(user.amount >= _amount, \\\"withdraw::bad withdraw amount\\\");\\n        _updateCampaign(_campaignID);\\n        uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n            campaign.precision) - user.rewardDebt;\\n        if (pending > 0) {\\n            campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n        }\\n        if (_amount > 0) {\\n            user.amount -= _amount;\\n            campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n            campaign.totalStaked -= _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n\\n        emit Withdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice method for harvest campaigns (used when the user want to claim their reward token based on specified campaigns)\\n    function harvest(uint256[] calldata _campaignIDs) external nonReentrant {\\n        for (uint256 i = 0; i < _campaignIDs.length; ++i) {\\n            _withdraw(_campaignIDs[i], 0);\\n        }\\n    }\\n\\n    // @notice Withdraw without caring about rewards. EMERGENCY ONLY.\\n    function emergencyWithdraw(uint256 _campaignID) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        uint256 _amount = user.amount;\\n        campaign.totalStaked -= _amount;\\n        user.amount = 0;\\n        user.rewardDebt = 0;\\n        campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n        emit EmergencyWithdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw reward. EMERGENCY ONLY.\\n    function emergencyRewardWithdraw(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        address _beneficiary\\n    ) external onlyOwner nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        uint256 currentStakingPendingReward = _pendingReward(\\n            _campaignID,\\n            campaign.totalStaked,\\n            0\\n        );\\n        require(\\n            currentStakingPendingReward + _amount <= campaign.totalRewards,\\n            \\\"emergencyRewardWithdraw::not enough reward token\\\"\\n        );\\n        campaign.totalRewards -= _amount;\\n        campaign.rewardToken.safeTransfer(_beneficiary, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0694f4be8e5ed7ebc4357e3e639c73573c0f801f88bd80dbec3b0cb4bd879035\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 65,
                "contract": "contracts/staking/TokenFarm.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "ReentrancyGuard": {
          "abi": [],
          "devdoc": {
            "details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking/TokenFarm.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"contracts/staking/TokenFarm.sol\":{\"content\":\"// Sources flattened with hardhat v2.6.0 https://hardhat.org\\n\\n// File @openzeppelin/contracts/security/ReentrancyGuard.sol@v4.2.0\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n// File @openzeppelin/contracts/utils/Context.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n// File @openzeppelin/contracts/access/Ownable.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n// File contracts/libraries/IBoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\ninterface IBoringERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice EIP 2612\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n// File contracts/libraries/BoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\n// solhint-disable avoid-low-level-calls\\n\\nlibrary BoringERC20 {\\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41; // symbol()\\n    bytes4 private constant SIG_NAME = 0x06fdde03; // name()\\n    bytes4 private constant SIG_DECIMALS = 0x313ce567; // decimals()\\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb; // transfer(address,uint256)\\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd; // transferFrom(address,address,uint256)\\n\\n    function returnDataToString(bytes memory data)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        if (data.length >= 64) {\\n            return abi.decode(data, (string));\\n        } else if (data.length == 32) {\\n            uint8 i = 0;\\n            while (i < 32 && data[i] != 0) {\\n                i++;\\n            }\\n            bytes memory bytesArray = new bytes(i);\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\n                bytesArray[i] = data[i];\\n            }\\n            return string(bytesArray);\\n        } else {\\n            return \\\"???\\\";\\n        }\\n    }\\n\\n    /// @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token symbol.\\n    function safeSymbol(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_SYMBOL)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.name version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token name.\\n    function safeName(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_NAME)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (uint8) Token decimals.\\n    function safeDecimals(IBoringERC20 token) internal view returns (uint8) {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_DECIMALS)\\n        );\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\n    }\\n\\n    /// @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransfer(\\n        IBoringERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: Transfer failed\\\"\\n        );\\n    }\\n\\n    /// @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param from Transfer tokens from.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransferFrom(\\n        IBoringERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: TransferFrom failed\\\"\\n        );\\n    }\\n}\\n// File contracts/staking/TokenFarm.sol\\n\\npragma solidity ^0.8.7;\\n\\ncontract TokenFarm is Ownable, ReentrancyGuard {\\n    using BoringERC20 for IBoringERC20;\\n\\n    // Info of each user for each farm.\\n    struct UserInfo {\\n        uint256 amount; // How many Staking tokens the user has provided.\\n        uint256 rewardDebt; // Reward debt. See explanation below.\\n    }\\n\\n    // Info of each reward distribution campaign.\\n    struct CampaignInfo {\\n        IBoringERC20 stakingToken; // Address of Staking token contract.\\n        IBoringERC20 rewardToken; // Address of Reward token contract\\n        uint256 precision; //reward token precision\\n        uint256 startTimestamp; // start timestamp of the campaign\\n        uint256 lastRewardTimestamp; // Last timestamp that Reward Token distribution occurs.\\n        uint256 accRewardPerShare; // Accumulated Reward Token per share. See below.\\n        uint256 totalStaked; // total staked amount each campaign's stake token, typically, each campaign has the same stake token, so need to track it separatedly\\n        uint256 totalRewards;\\n    }\\n\\n    // Reward info\\n    struct RewardInfo {\\n        uint256 endTimestamp;\\n        uint256 rewardPerSec;\\n    }\\n\\n    // @dev this is mostly used for extending reward period\\n    // @notice Reward info is a set of {endTimestamp, rewardPerTimestamp}\\n    // indexed by campaigh ID\\n    mapping(uint256 => RewardInfo[]) public campaignRewardInfo;\\n\\n    // @notice Info of each campaign. mapped from campaigh ID\\n    CampaignInfo[] public campaignInfo;\\n    // Info of each user that stakes Staking tokens.\\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\\n\\n    // @notice limit length of reward info\\n    // how many phases are allowed\\n    uint256 public rewardInfoLimit;\\n    // @dev reward holder account\\n    address public rewardHolder;\\n\\n    event Deposit(address indexed user, uint256 amount, uint256 campaign);\\n    event Withdraw(address indexed user, uint256 amount, uint256 campaign);\\n    event EmergencyWithdraw(\\n        address indexed user,\\n        uint256 amount,\\n        uint256 campaign\\n    );\\n    event AddCampaignInfo(\\n        uint256 indexed campaignID,\\n        IBoringERC20 stakingToken,\\n        IBoringERC20 rewardToken,\\n        uint256 startTimestamp\\n    );\\n    event AddRewardInfo(\\n        uint256 indexed campaignID,\\n        uint256 indexed phase,\\n        uint256 endTimestamp,\\n        uint256 rewardPerTimestamp\\n    );\\n    event SetRewardInfoLimit(uint256 rewardInfoLimit);\\n    event SetRewardHolder(address rewardHolder);\\n\\n    // constructor\\n    constructor(address _rewardHolder) {\\n        rewardInfoLimit = 53;\\n        rewardHolder = _rewardHolder;\\n    }\\n\\n    // @notice function for setting a reward holder who is responsible for adding a reward info\\n    function setRewardHolder(address _rewardHolder) external onlyOwner {\\n        rewardHolder = _rewardHolder;\\n        emit SetRewardHolder(_rewardHolder);\\n    }\\n\\n    // @notice set new reward info limit\\n    function setRewardInfoLimit(uint256 _updatedRewardInfoLimit)\\n        external\\n        onlyOwner\\n    {\\n        rewardInfoLimit = _updatedRewardInfoLimit;\\n        emit SetRewardInfoLimit(rewardInfoLimit);\\n    }\\n\\n    // @notice reward campaign, one campaign represents a pair of staking and reward token, last reward Timestamp and acc reward Per Share\\n    function addCampaignInfo(\\n        IBoringERC20 _stakingToken,\\n        IBoringERC20 _rewardToken,\\n        uint256 _startTimestamp\\n    ) external onlyOwner {\\n        uint256 decimalsRewardToken = uint256(_rewardToken.safeDecimals());\\n\\n        require(\\n            decimalsRewardToken < 30,\\n            \\\"constructor: reward token decimals must be inferior to 30\\\"\\n        );\\n\\n        uint256 precision = uint256(10**(uint256(30) - (decimalsRewardToken)));\\n\\n        campaignInfo.push(\\n            CampaignInfo({\\n                stakingToken: _stakingToken,\\n                rewardToken: _rewardToken,\\n                precision: precision,\\n                startTimestamp: _startTimestamp,\\n                lastRewardTimestamp: _startTimestamp,\\n                accRewardPerShare: 0,\\n                totalStaked: 0,\\n                totalRewards: 0\\n            })\\n        );\\n        emit AddCampaignInfo(\\n            campaignInfo.length - 1,\\n            _stakingToken,\\n            _rewardToken,\\n            _startTimestamp\\n        );\\n    }\\n\\n    // @notice if the new reward info is added, the reward & its end timestamp will be extended by the newly pushed reward info.\\n    function addRewardInfo(\\n        uint256 _campaignID,\\n        uint256 _endTimestamp,\\n        uint256 _rewardPerSec\\n    ) external onlyOwner {\\n        RewardInfo[] storage rewardInfo = campaignRewardInfo[_campaignID];\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        require(\\n            rewardInfo.length < rewardInfoLimit,\\n            \\\"addRewardInfo::reward info length exceeds the limit\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp >=\\n                block.timestamp,\\n            \\\"addRewardInfo::reward period ended\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp < _endTimestamp,\\n            \\\"addRewardInfo::bad new endTimestamp\\\"\\n        );\\n        uint256 startTimestamp = rewardInfo.length == 0\\n            ? campaign.startTimestamp\\n            : rewardInfo[rewardInfo.length - 1].endTimestamp;\\n        uint256 timeRange = _endTimestamp - startTimestamp;\\n        uint256 totalRewards = _rewardPerSec * timeRange;\\n        campaign.rewardToken.safeTransferFrom(\\n            rewardHolder,\\n            address(this),\\n            totalRewards\\n        );\\n        campaign.totalRewards += totalRewards;\\n        rewardInfo.push(\\n            RewardInfo({\\n                endTimestamp: _endTimestamp,\\n                rewardPerSec: _rewardPerSec\\n            })\\n        );\\n        emit AddRewardInfo(\\n            _campaignID,\\n            rewardInfo.length - 1,\\n            _endTimestamp,\\n            _rewardPerSec\\n        );\\n    }\\n\\n    function rewardInfoLen(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return campaignRewardInfo[_campaignID].length;\\n    }\\n\\n    function campaignInfoLen() external view returns (uint256) {\\n        return campaignInfo.length;\\n    }\\n\\n    // @notice this will return  end block based on the current block timestamp.\\n    function currentEndTimestamp(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _endTimestampOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _endTimestampOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].endTimestamp;\\n        }\\n        // @dev when couldn't find any reward info, it means that _blockTimestamp exceed endTimestamp\\n        // so return the latest reward info.\\n        return rewardInfo[len - 1].endTimestamp;\\n    }\\n\\n    // @notice this will return reward per block based on the current block timestamp.\\n    function currentRewardPerSec(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _rewardPerSecOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _rewardPerSecOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].rewardPerSec;\\n        }\\n        // @dev when couldn't find any reward info, it means that timestamp exceed endtimestamp\\n        // so return 0\\n        return 0;\\n    }\\n\\n    // @notice Return reward multiplier over the given _from to _to timestamp.\\n    function getMultiplier(\\n        uint256 _from,\\n        uint256 _to,\\n        uint256 _endTimestamp\\n    ) public pure returns (uint256) {\\n        if ((_from >= _endTimestamp) || (_from > _to)) {\\n            return 0;\\n        }\\n        if (_to <= _endTimestamp) {\\n            return _to - _from;\\n        }\\n        return _endTimestamp - _from;\\n    }\\n\\n    // @notice View function to see pending Reward on frontend.\\n    function pendingReward(uint256 _campaignID, address _user)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return\\n            _pendingReward(\\n                _campaignID,\\n                userInfo[_campaignID][_user].amount,\\n                userInfo[_campaignID][_user].rewardDebt\\n            );\\n    }\\n\\n    function _pendingReward(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 _rewardDebt\\n    ) internal view returns (uint256) {\\n        CampaignInfo memory campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 accRewardPerShare = campaign.accRewardPerShare;\\n        if (\\n            block.timestamp > campaign.lastRewardTimestamp &&\\n            campaign.totalStaked != 0\\n        ) {\\n            uint256 cursor = campaign.lastRewardTimestamp;\\n            for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n                uint256 multiplier = getMultiplier(\\n                    cursor,\\n                    block.timestamp,\\n                    rewardInfo[i].endTimestamp\\n                );\\n                if (multiplier == 0) continue;\\n                cursor = rewardInfo[i].endTimestamp;\\n                accRewardPerShare +=\\n                    ((multiplier * rewardInfo[i].rewardPerSec) *\\n                        campaign.precision) /\\n                    campaign.totalStaked;\\n            }\\n        }\\n        return\\n            ((_amount * accRewardPerShare) / campaign.precision) - _rewardDebt;\\n    }\\n\\n    function updateCampaign(uint256 _campaignID) external nonReentrant {\\n        _updateCampaign(_campaignID);\\n    }\\n\\n    // @notice Update reward variables of the given campaign to be up-to-date.\\n    function _updateCampaign(uint256 _campaignID) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        if (block.timestamp <= campaign.lastRewardTimestamp) {\\n            return;\\n        }\\n        if (campaign.totalStaked == 0) {\\n            // if there is no total supply, return and use the campaign's start block timestamp as the last reward block timestamp\\n            // so that ALL reward will be distributed.\\n            // however, if the first deposit is out of reward period, last reward block will be its block timestamp\\n            // in order to keep the multiplier = 0\\n            if (\\n                block.timestamp > _endTimestampOf(_campaignID, block.timestamp)\\n            ) {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            return;\\n        }\\n        // @dev for each reward info\\n        for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n            // @dev get multiplier based on current Block and rewardInfo's end block\\n            // multiplier will be a range of either (current block - campaign.lastRewardBlock)\\n            // or (reward info's endblock - campaign.lastRewardTimestamp) or 0\\n            uint256 multiplier = getMultiplier(\\n                campaign.lastRewardTimestamp,\\n                block.timestamp,\\n                rewardInfo[i].endTimestamp\\n            );\\n            if (multiplier == 0) continue;\\n            // @dev if currentTimestamp exceed end block, use end block as the last reward block\\n            // so that for the next iteration, previous endTimestamp will be used as the last reward block\\n            if (block.timestamp > rewardInfo[i].endTimestamp) {\\n                campaign.lastRewardTimestamp = rewardInfo[i].endTimestamp;\\n            } else {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            campaign.accRewardPerShare +=\\n                ((multiplier * rewardInfo[i].rewardPerSec) *\\n                    campaign.precision) /\\n                campaign.totalStaked;\\n        }\\n    }\\n\\n    // @notice Update reward variables for all campaigns. gas spending is HIGH in this method call, BE CAREFUL\\n    function massUpdateCampaigns() external nonReentrant {\\n        uint256 length = campaignInfo.length;\\n        for (uint256 pid = 0; pid < length; ++pid) {\\n            _updateCampaign(pid);\\n        }\\n    }\\n\\n    function depositWithPermit(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        campaign.stakingToken.permit(\\n            msg.sender,\\n            address(this),\\n            _amount,\\n            deadline,\\n            v,\\n            r,\\n            s\\n        );\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function deposit(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function _deposit(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        _updateCampaign(_campaignID);\\n        if (user.amount > 0) {\\n            uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n                campaign.precision) - user.rewardDebt;\\n            if (pending > 0) {\\n                campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n            }\\n        }\\n        if (_amount > 0) {\\n            campaign.stakingToken.safeTransferFrom(\\n                address(msg.sender),\\n                address(this),\\n                _amount\\n            );\\n            user.amount += _amount;\\n            campaign.totalStaked += _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n        emit Deposit(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw Staking tokens from STAKING.\\n    function withdraw(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _withdraw(_campaignID, _amount);\\n    }\\n\\n    // @notice internal method for withdraw (withdraw and harvest method depend on this method)\\n    function _withdraw(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        require(user.amount >= _amount, \\\"withdraw::bad withdraw amount\\\");\\n        _updateCampaign(_campaignID);\\n        uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n            campaign.precision) - user.rewardDebt;\\n        if (pending > 0) {\\n            campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n        }\\n        if (_amount > 0) {\\n            user.amount -= _amount;\\n            campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n            campaign.totalStaked -= _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n\\n        emit Withdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice method for harvest campaigns (used when the user want to claim their reward token based on specified campaigns)\\n    function harvest(uint256[] calldata _campaignIDs) external nonReentrant {\\n        for (uint256 i = 0; i < _campaignIDs.length; ++i) {\\n            _withdraw(_campaignIDs[i], 0);\\n        }\\n    }\\n\\n    // @notice Withdraw without caring about rewards. EMERGENCY ONLY.\\n    function emergencyWithdraw(uint256 _campaignID) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        uint256 _amount = user.amount;\\n        campaign.totalStaked -= _amount;\\n        user.amount = 0;\\n        user.rewardDebt = 0;\\n        campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n        emit EmergencyWithdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw reward. EMERGENCY ONLY.\\n    function emergencyRewardWithdraw(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        address _beneficiary\\n    ) external onlyOwner nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        uint256 currentStakingPendingReward = _pendingReward(\\n            _campaignID,\\n            campaign.totalStaked,\\n            0\\n        );\\n        require(\\n            currentStakingPendingReward + _amount <= campaign.totalRewards,\\n            \\\"emergencyRewardWithdraw::not enough reward token\\\"\\n        );\\n        campaign.totalRewards -= _amount;\\n        campaign.rewardToken.safeTransfer(_beneficiary, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0694f4be8e5ed7ebc4357e3e639c73573c0f801f88bd80dbec3b0cb4bd879035\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 10,
                "contract": "contracts/staking/TokenFarm.sol:ReentrancyGuard",
                "label": "_status",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "TokenFarm": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_rewardHolder",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "campaignID",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "contract IBoringERC20",
                  "name": "stakingToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "contract IBoringERC20",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                }
              ],
              "name": "AddCampaignInfo",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "campaignID",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "phase",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "endTimestamp",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardPerTimestamp",
                  "type": "uint256"
                }
              ],
              "name": "AddRewardInfo",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "campaign",
                  "type": "uint256"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "campaign",
                  "type": "uint256"
                }
              ],
              "name": "EmergencyWithdraw",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "rewardHolder",
                  "type": "address"
                }
              ],
              "name": "SetRewardHolder",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "rewardInfoLimit",
                  "type": "uint256"
                }
              ],
              "name": "SetRewardInfoLimit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "campaign",
                  "type": "uint256"
                }
              ],
              "name": "Withdraw",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IBoringERC20",
                  "name": "_stakingToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IBoringERC20",
                  "name": "_rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_startTimestamp",
                  "type": "uint256"
                }
              ],
              "name": "addCampaignInfo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_endTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_rewardPerSec",
                  "type": "uint256"
                }
              ],
              "name": "addRewardInfo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "campaignInfo",
              "outputs": [
                {
                  "internalType": "contract IBoringERC20",
                  "name": "stakingToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IBoringERC20",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "precision",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastRewardTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accRewardPerShare",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalStaked",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalRewards",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "campaignInfoLen",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "campaignRewardInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "endTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardPerSec",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                }
              ],
              "name": "currentEndTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                }
              ],
              "name": "currentRewardPerSec",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "depositWithPermit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_beneficiary",
                  "type": "address"
                }
              ],
              "name": "emergencyRewardWithdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                }
              ],
              "name": "emergencyWithdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_from",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_to",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_endTimestamp",
                  "type": "uint256"
                }
              ],
              "name": "getMultiplier",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "_campaignIDs",
                  "type": "uint256[]"
                }
              ],
              "name": "harvest",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "massUpdateCampaigns",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "pendingReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardHolder",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                }
              ],
              "name": "rewardInfoLen",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardInfoLimit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_rewardHolder",
                  "type": "address"
                }
              ],
              "name": "setRewardHolder",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_updatedRewardInfoLimit",
                  "type": "uint256"
                }
              ],
              "name": "setRewardInfoLimit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                }
              ],
              "name": "updateCampaign",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "userInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardDebt",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_campaignID",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_18": {
                  "entryPoint": null,
                  "id": 18,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_669": {
                  "entryPoint": null,
                  "id": 669,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_81": {
                  "entryPoint": null,
                  "id": 81,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_msgSender_49": {
                  "entryPoint": null,
                  "id": 49,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_setOwner_160": {
                  "entryPoint": 110,
                  "id": 160,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address_fromMemory": {
                  "entryPoint": 190,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:306:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "95:209:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "141:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "150:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "153:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "105:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "166:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "185:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "179:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "179:16:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "170:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "258:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "267:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "270:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "260:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "260:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "260:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "217:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "228:5:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "243:3:1",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "248:1:1",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "239:3:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "239:11:1"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "252:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "235:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "235:19:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "224:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "224:31:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "214:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "214:42:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "207:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "207:50:1"
                              },
                              "nodeType": "YulIf",
                              "src": "204:70:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "283:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "293:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "283:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "61:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "72:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "84:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:290:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b5060405162002c5238038062002c528339810160408190526200003491620000be565b6200003f336200006e565b600180556035600555600680546001600160a01b0319166001600160a01b0392909216919091179055620000f0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000d157600080fd5b81516001600160a01b0381168114620000e957600080fd5b9392505050565b612b5280620001006000396000f3fe608060405234801561001057600080fd5b50600436106101ad5760003560e01c80635d14b06f116100ee57806398969e8211610097578063cef7042d11610071578063cef7042d1461041a578063e2bbb1581461042d578063eebdced514610440578063f2fde38b1461044857600080fd5b806398969e821461038e5780639e494bee146103a1578063bb2238ec146103b457600080fd5b80637bafb029116100c85780637bafb0291461032b5780638da5cb5b1461033e57806393f1a40b1461035c57600080fd5b80635d14b06f146102fd5780636806cc9314610310578063715018a61461032357600080fd5b8063409e00fc1161015b5780634ae56bae116101355780634ae56bae14610272578063515bc323146102925780635312ea8e146102a5578063569c93d2146102b857600080fd5b8063409e00fc14610244578063441a3e70146102575780634ad7ce801461026a57600080fd5b80632ea807c51161018c5780632ea807c51461020b57806332215c421461021e57806333824b871461023157600080fd5b8062d74850146101b257806310f7a6af146101ce5780631d123131146101f6575b600080fd5b6101bb60055481565b6040519081526020015b60405180910390f35b6101e16101dc366004612754565b61045b565b604080519283526020830191909152016101c5565b610209610204366004612776565b610497565b005b6102096102193660046127af565b6106b3565b6101bb61022c36600461270b565b610ace565b61020961023f36600461270b565b610ae0565b6102096102523660046126ca565b610b9d565b610209610265366004612754565b610f34565b6003546101bb565b6101bb61028036600461270b565b60009081526002602052604090205490565b6102096102a03660046127db565b610fb8565b6102096102b336600461270b565b611117565b6006546102d89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c5565b61020961030b366004612633565b61125b565b61020961031e366004612616565b611314565b610209611408565b6101bb6103393660046127af565b611495565b60005473ffffffffffffffffffffffffffffffffffffffff166102d8565b6101e161036a366004612724565b60046020908152600092835260408084209091529082529020805460019091015482565b6101bb61039c366004612724565b6114de565b6101bb6103af36600461270b565b611520565b6103c76103c236600461270b565b61152c565b6040805173ffffffffffffffffffffffffffffffffffffffff998a168152989097166020890152958701949094526060860192909252608085015260a084015260c083015260e0820152610100016101c5565b61020961042836600461270b565b61159b565b61020961043b366004612754565b61161d565b610209611699565b610209610456366004612616565b611732565b6002602052816000526040600020818154811061047757600080fd5b600091825260209091206002909102018054600190910154909250905082565b60005473ffffffffffffffffffffffffffffffffffffffff16331461051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6002600154141561058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b60026001819055506000600384815481106105a7576105a7612abc565b9060005260206000209060080201905060006105c98583600601546000611862565b60078301549091506105db8583612886565b1115610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f656d657267656e637952657761726457697468647261773a3a6e6f7420656e6f60448201527f7567682072657761726420746f6b656e000000000000000000000000000000006064820152608401610514565b8382600701600082825461067d9190612a3d565b909155505060018201546106a89073ffffffffffffffffffffffffffffffffffffffff168486611a8d565b505060018055505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b6000838152600260205260408120600380549192918690811061075957610759612abc565b906000526020600020906008020190506005548280549050106107fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f616464526577617264496e666f3a3a72657761726420696e666f206c656e677460448201527f68206578636565647320746865206c696d6974000000000000000000000000006064820152608401610514565b8154158061083e575081544290839061081990600190612a3d565b8154811061082957610829612abc565b90600052602060002090600202016000015410155b6108ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f616464526577617264496e666f3a3a72657761726420706572696f6420656e6460448201527f65640000000000000000000000000000000000000000000000000000000000006064820152608401610514565b8154158061090957508154849083906108e590600190612a3d565b815481106108f5576108f5612abc565b906000526020600020906002020160000154105b610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f616464526577617264496e666f3a3a626164206e657720656e6454696d65737460448201527f616d7000000000000000000000000000000000000000000000000000000000006064820152608401610514565b8154600090156109d657825483906109af90600190612a3d565b815481106109bf576109bf612abc565b9060005260206000209060020201600001546109dc565b81600301545b905060006109ea8287612a3d565b905060006109f88287612a00565b6006546001860154919250610a289173ffffffffffffffffffffffffffffffffffffffff90811691163084611bfd565b80846007016000828254610a3c9190612886565b9091555050604080518082019091528781526020808201888152875460018181018a5560008a8152939093209351600290910290930192835551918101919091558554610a899190612a3d565b60408051898152602081018990528a917fad90731bd0d97445f5af66088f3adebf343c520c20e033cc42f93b124258cdc2910160405180910390a35050505050505050565b6000610ada8242611d76565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b60058190556040518181527fb64f58843e750a8bea7135ef396cf0a7790bfc9a8f43f11ac0e0aacc1b5787ba906020015b60405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b6000610c3f8373ffffffffffffffffffffffffffffffffffffffff16611e71565b60ff169050601e8110610cd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f636f6e7374727563746f723a2072657761726420746f6b656e20646563696d6160448201527f6c73206d75737420626520696e666572696f7220746f203330000000000000006064820152608401610514565b6000610ce182601e612a3d565b610cec90600a61293a565b604080516101008101825273ffffffffffffffffffffffffffffffffffffffff8089168252878116602083019081529282018481526060830188815260808401898152600060a0860181815260c0870182815260e0880183815260038054600181810183559582905299516008909a027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810180549b8b167fffffffffffffffffffffffff00000000000000000000000000000000000000009c8d161790559a517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c8c01805491909a169a169990991790975594517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d89015592517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e88015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f87015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f86086015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f86185015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f8629093019290925554919250610ed491612a3d565b6040805173ffffffffffffffffffffffffffffffffffffffff8089168252871660208201529081018590527f9b2f18f9a188a5aec4a95ee3164fe234dfbb6117628b2ad1a581939e61c69f4e906060015b60405180910390a25050505050565b60026001541415610fa1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b6002600155610fb08282611f6c565b505060018055565b60026001541415611025576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b600260018190555060006003878154811061104257611042612abc565b6000918252602090912060089091020180546040517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018990526064810188905260ff8716608482015260a4810186905260c4810185905291925073ffffffffffffffffffffffffffffffffffffffff169063d505accf9060e401600060405180830381600087803b1580156110e857600080fd5b505af11580156110fc573d6000803e3d6000fd5b5050505061110a8787612138565b5050600180555050505050565b60026001541415611184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b60026001819055506000600382815481106111a1576111a1612abc565b60009182526020808320858452600482526040808520338652909252908320805460089390930290910160068101805491955091938392916111e4908490612a3d565b90915550506000808355600183015582546112169073ffffffffffffffffffffffffffffffffffffffff163383611a8d565b604080518281526020810186905233917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595910160405180910390a25050600180555050565b600260015414156112c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b600260015560005b8181101561130b576112fb8383838181106112ed576112ed612abc565b905060200201356000611f6c565b61130481612a54565b90506112d0565b50506001805550565b60005473ffffffffffffffffffffffffffffffffffffffff163314611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f860da714d66641e1bb8025e657aa279ec5bbe56385e52a9ee03a12718e5600cb90602001610b92565b60005473ffffffffffffffffffffffffffffffffffffffff163314611489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b61149360006122ae565b565b600081841015806114a557508284115b156114b2575060006114d7565b8183116114ca576114c38484612a3d565b90506114d7565b6114d48483612a3d565b90505b9392505050565b600082815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152812080546001909101546114d7918591611862565b6000610ada8242612323565b6003818154811061153c57600080fd5b60009182526020909120600890910201805460018201546002830154600384015460048501546005860154600687015460079097015473ffffffffffffffffffffffffffffffffffffffff968716985094909516959294919390929088565b60026001541415611608576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b600260015561161681612445565b5060018055565b6002600154141561168a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b6002600155610fb08282612138565b60026001541415611706576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b600260015560035460005b81811015610fb05761172281612445565b61172b81612a54565b9050611711565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b73ffffffffffffffffffffffffffffffffffffffff8116611856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610514565b61185f816122ae565b50565b6000806003858154811061187857611878612abc565b6000918252602080832060408051610100810182526008909402909101805473ffffffffffffffffffffffffffffffffffffffff908116855260018201541684840152600280820154858401526003820154606086015260048201546080860152600582015460a0860152600682015460c086015260079091015460e08501528985528252808420805482518185028101850190935280835293955090929091849084015b828210156119635783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061191d565b50505050905060008260a001519050826080015142118015611988575060c083015115155b15611a5d57608083015160005b8351811015611a5a5760006119c883428785815181106119b7576119b7612abc565b602002602001015160000151611495565b9050806119d55750611a4a565b8482815181106119e7576119e7612abc565b60200260200101516000015192508560c001518660400151868481518110611a1157611a11612abc565b60200260200101516020015183611a289190612a00565b611a329190612a00565b611a3c919061289e565b611a469085612886565b9350505b611a5381612a54565b9050611995565b50505b60408301518590611a6e8389612a00565b611a78919061289e565b611a829190612a3d565b979650505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611b24919061284b565b6000604051808303816000865af19150503d8060008114611b61576040519150601f19603f3d011682016040523d82523d6000602084013e611b66565b606091505b5091509150818015611b90575080511580611b90575080806020019051810190611b9091906126a8565b611bf6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606401610514565b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691611c9c919061284b565b6000604051808303816000865af19150503d8060008114611cd9576040519150601f19603f3d011682016040523d82523d6000602084013e611cde565b606091505b5091509150818015611d08575080511580611d08575080806020019051810190611d0891906126a8565b611d6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c65646044820152606401610514565b505050505050565b600082815260026020908152604080832080548251818502810185019093528083528493849084015b82821015611de557838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190611d9f565b50508251929350505080611dfe57600092505050610ada565b60005b81811015611e6557828181518110611e1b57611e1b612abc565b6020026020010151600001518511611e5557828181518110611e3f57611e3f612abc565b6020026020010151602001519350505050610ada565b611e5e81612a54565b9050611e01565b50600095945050505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f313ce5670000000000000000000000000000000000000000000000000000000017905290516000918291829173ffffffffffffffffffffffffffffffffffffffff861691611ef2919061284b565b600060405180830381855afa9150503d8060008114611f2d576040519150601f19603f3d011682016040523d82523d6000602084013e611f32565b606091505b5091509150818015611f45575080516020145b611f50576012611f64565b80806020019051810190611f64919061282e565b949350505050565b600060038381548110611f8157611f81612abc565b600091825260208083208684526004825260408085203386529092529220805460089092029092019250831115612014576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f77697468647261773a3a62616420776974686472617720616d6f756e740000006044820152606401610514565b61201d84612445565b6000816001015483600201548460050154846000015461203d9190612a00565b612047919061289e565b6120519190612a3d565b9050801561207f57600183015461207f9073ffffffffffffffffffffffffffffffffffffffff163383611a8d565b83156120db57838260000160008282546120999190612a3d565b909155505082546120c19073ffffffffffffffffffffffffffffffffffffffff163386611a8d565b838360060160008282546120d59190612a3d565b90915550505b6002830154600584015483546120f19190612a00565b6120fb919061289e565b6001830155604080518581526020810187905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689101610f25565b60006003838154811061214d5761214d612abc565b6000918252602080832086845260048252604080852033865290925292206008909102909101915061217e84612445565b8054156121e957600081600101548360020154846005015484600001546121a59190612a00565b6121af919061289e565b6121b99190612a3d565b905080156121e75760018301546121e79073ffffffffffffffffffffffffffffffffffffffff163383611a8d565b505b82156122485781546122139073ffffffffffffffffffffffffffffffffffffffff16333086611bfd565b828160000160008282546122279190612886565b92505081905550828260060160008282546122429190612886565b90915550505b60028201546005830154825461225e9190612a00565b612268919061289e565b6001820155604080518481526020810186905233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a250505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260026020908152604080832080548251818502810185019093528083528493849084015b828210156123925783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061234c565b505082519293505050806123ab57600092505050610ada565b60005b81811015612412578281815181106123c8576123c8612abc565b6020026020010151600001518511612402578281815181106123ec576123ec612abc565b6020026020010151600001519350505050610ada565b61240b81612a54565b90506123ae565b508161241f600183612a3d565b8151811061242f5761242f612abc565b6020026020010151600001519250505092915050565b60006003828154811061245a5761245a612abc565b60009182526020808320858452600282526040808520805482518186028101860190935280835260089095029092019550929091849084015b828210156124d957838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190612493565b505050509050816004015442116124ef57505050565b6006820154612515576125028342612323565b421115612510574260048301555b505050565b60005b815181101561261057600061253e8460040154428585815181106119b7576119b7612abc565b90508061254b5750612600565b82828151811061255d5761255d612abc565b6020026020010151600001514211156125985782828151811061258257612582612abc565b602090810291909101015151600485015561259f565b4260048501555b836006015484600201548484815181106125bb576125bb612abc565b602002602001015160200151836125d29190612a00565b6125dc9190612a00565b6125e6919061289e565b8460050160008282546125f99190612886565b9091555050505b61260981612a54565b9050612518565b50505050565b60006020828403121561262857600080fd5b81356114d781612aeb565b6000806020838503121561264657600080fd5b823567ffffffffffffffff8082111561265e57600080fd5b818501915085601f83011261267257600080fd5b81358181111561268157600080fd5b8660208260051b850101111561269657600080fd5b60209290920196919550909350505050565b6000602082840312156126ba57600080fd5b815180151581146114d757600080fd5b6000806000606084860312156126df57600080fd5b83356126ea81612aeb565b925060208401356126fa81612aeb565b929592945050506040919091013590565b60006020828403121561271d57600080fd5b5035919050565b6000806040838503121561273757600080fd5b82359150602083013561274981612aeb565b809150509250929050565b6000806040838503121561276757600080fd5b50508035926020909101359150565b60008060006060848603121561278b57600080fd5b833592506020840135915060408401356127a481612aeb565b809150509250925092565b6000806000606084860312156127c457600080fd5b505081359360208301359350604090920135919050565b60008060008060008060c087890312156127f457600080fd5b863595506020870135945060408701359350606087013561281481612b0d565b9598949750929560808101359460a0909101359350915050565b60006020828403121561284057600080fd5b81516114d781612b0d565b6000825160005b8181101561286c5760208186018101518583015201612852565b8181111561287b576000828501525b509190910192915050565b6000821982111561289957612899612a8d565b500190565b6000826128d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600181815b8085111561293257817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561291857612918612a8d565b8085161561292557918102915b93841c93908002906128de565b509250929050565b60006114d7838360008261295057506001610ada565b8161295d57506000610ada565b8160018114612973576002811461297d57612999565b6001915050610ada565b60ff84111561298e5761298e612a8d565b50506001821b610ada565b5060208310610133831016604e8410600b84101617156129bc575081810a610ada565b6129c683836128d9565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156129f8576129f8612a8d565b029392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a3857612a38612a8d565b500290565b600082821015612a4f57612a4f612a8d565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612a8657612a86612a8d565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461185f57600080fd5b60ff8116811461185f57600080fdfea264697066735822122014b9146c3c7bf0e76c07837e7aed02bf4d6804c8ed65fdf1aafc171e1c41f6aa64736f6c63430008070033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2C52 CODESIZE SUB DUP1 PUSH3 0x2C52 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0xBE JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x6E JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x35 PUSH1 0x5 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0xF0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2B52 DUP1 PUSH3 0x100 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D14B06F GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x98969E82 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCEF7042D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCEF7042D EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xEEBDCED5 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98969E82 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x9E494BEE EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xBB2238EC EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BAFB029 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x7BAFB029 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D14B06F EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x6806CC93 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x409E00FC GT PUSH2 0x15B JUMPI DUP1 PUSH4 0x4AE56BAE GT PUSH2 0x135 JUMPI DUP1 PUSH4 0x4AE56BAE EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x515BC323 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x569C93D2 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x409E00FC EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x4AD7CE80 EQ PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EA807C5 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x2EA807C5 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x32215C42 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x33824B87 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xD74850 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x10F7A6AF EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x1D123131 EQ PUSH2 0x1F6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BB PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2754 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0xACE JUMP JUMPDEST PUSH2 0x209 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0xAE0 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x26CA JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x209 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x2754 JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x27DB JUMP JUMPDEST PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2D8 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x2633 JUMP JUMPDEST PUSH2 0x125B JUMP JUMPDEST PUSH2 0x209 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x2724 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x2724 JUMP JUMPDEST PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0x152C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 DUP11 AND DUP2 MSTORE SWAP9 SWAP1 SWAP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0x159B JUMP JUMPDEST PUSH2 0x209 PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x2754 JUMP JUMPDEST PUSH2 0x161D JUMP JUMPDEST PUSH2 0x209 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP3 POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5A7 JUMPI PUSH2 0x5A7 PUSH2 0x2ABC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0x5C9 DUP6 DUP4 PUSH1 0x6 ADD SLOAD PUSH1 0x0 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x7 DUP4 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x5DB DUP6 DUP4 PUSH2 0x2886 JUMP JUMPDEST GT ISZERO PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x656D657267656E637952657761726457697468647261773A3A6E6F7420656E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7567682072657761726420746F6B656E00000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST DUP4 DUP3 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x6A8 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH2 0x1A8D JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP7 SWAP1 DUP2 LT PUSH2 0x759 JUMPI PUSH2 0x759 PUSH2 0x2ABC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD SWAP1 POP PUSH1 0x5 SLOAD DUP3 DUP1 SLOAD SWAP1 POP LT PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616464526577617264496E666F3A3A72657761726420696E666F206C656E6774 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68206578636565647320746865206C696D697400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST DUP2 SLOAD ISZERO DUP1 PUSH2 0x83E JUMPI POP DUP2 SLOAD TIMESTAMP SWAP1 DUP4 SWAP1 PUSH2 0x819 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x829 JUMPI PUSH2 0x829 PUSH2 0x2ABC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD LT ISZERO JUMPDEST PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616464526577617264496E666F3A3A72657761726420706572696F6420656E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST DUP2 SLOAD ISZERO DUP1 PUSH2 0x909 JUMPI POP DUP2 SLOAD DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x8E5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x8F5 JUMPI PUSH2 0x8F5 PUSH2 0x2ABC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD LT JUMPDEST PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616464526577617264496E666F3A3A626164206E657720656E6454696D657374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616D700000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x9D6 JUMPI DUP3 SLOAD DUP4 SWAP1 PUSH2 0x9AF SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9BF JUMPI PUSH2 0x9BF PUSH2 0x2ABC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x9DC JUMP JUMPDEST DUP2 PUSH1 0x3 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9EA DUP3 DUP8 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9F8 DUP3 DUP8 PUSH2 0x2A00 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 DUP7 ADD SLOAD SWAP2 SWAP3 POP PUSH2 0xA28 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND ADDRESS DUP5 PUSH2 0x1BFD JUMP JUMPDEST DUP1 DUP5 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP8 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 DUP2 MSTORE DUP8 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP11 SSTORE PUSH1 0x0 DUP11 DUP2 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 SWAP4 MLOAD PUSH1 0x2 SWAP1 SWAP2 MUL SWAP1 SWAP4 ADD SWAP3 DUP4 SSTORE MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP6 SLOAD PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE DUP11 SWAP2 PUSH32 0xAD90731BD0D97445F5AF66088F3ADEBF343C520C20E033CC42F93B124258CDC2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP3 TIMESTAMP PUSH2 0x1D76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xB64F58843E750A8BEA7135EF396CF0A7790BFC9A8F43F11AC0E0AACC1B5787BA SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3F DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x1E DUP2 LT PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E7374727563746F723A2072657761726420746F6B656E20646563696D61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C73206D75737420626520696E666572696F7220746F20333000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE1 DUP3 PUSH1 0x1E PUSH2 0x2A3D JUMP JUMPDEST PUSH2 0xCEC SWAP1 PUSH1 0xA PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND DUP3 MSTORE DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP3 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP9 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP10 DUP2 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP8 ADD DUP3 DUP2 MSTORE PUSH1 0xE0 DUP9 ADD DUP4 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP6 DUP3 SWAP1 MSTORE SWAP10 MLOAD PUSH1 0x8 SWAP1 SWAP11 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B DUP2 ADD DUP1 SLOAD SWAP12 DUP12 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP13 DUP14 AND OR SWAP1 SSTORE SWAP11 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C DUP13 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP11 AND SWAP11 AND SWAP10 SWAP1 SWAP10 OR SWAP1 SWAP8 SSTORE SWAP5 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85D DUP10 ADD SSTORE SWAP3 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85E DUP9 ADD SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85F DUP8 ADD SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F860 DUP7 ADD SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F861 DUP6 ADD SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F862 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE SLOAD SWAP2 SWAP3 POP PUSH2 0xED4 SWAP2 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x9B2F18F9A188A5AEC4A95EE3164FE234DFBB6117628B2AD1A581939E61C69F4E SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xFB0 DUP3 DUP3 PUSH2 0x1F6C JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1025 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1042 JUMPI PUSH2 0x1042 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xC4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH1 0xE4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x110A DUP8 DUP8 PUSH2 0x2138 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11A1 JUMPI PUSH2 0x11A1 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x8 SWAP4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD PUSH1 0x6 DUP2 ADD DUP1 SLOAD SWAP2 SWAP6 POP SWAP2 SWAP4 DUP4 SWAP3 SWAP2 PUSH2 0x11E4 SWAP1 DUP5 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD SSTORE DUP3 SLOAD PUSH2 0x1216 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x130B JUMPI PUSH2 0x12FB DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x12ED JUMPI PUSH2 0x12ED PUSH2 0x2ABC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x1304 DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x12D0 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1395 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x860DA714D66641E1BB8025E657AA279EC5BBE56385E52A9EE03A12718E5600CB SWAP1 PUSH1 0x20 ADD PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0x1493 PUSH1 0x0 PUSH2 0x22AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 LT ISZERO DUP1 PUSH2 0x14A5 JUMPI POP DUP3 DUP5 GT JUMPDEST ISZERO PUSH2 0x14B2 JUMPI POP PUSH1 0x0 PUSH2 0x14D7 JUMP JUMPDEST DUP2 DUP4 GT PUSH2 0x14CA JUMPI PUSH2 0x14C3 DUP5 DUP5 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x14D4 DUP5 DUP4 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0x14D7 SWAP2 DUP6 SWAP2 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP3 TIMESTAMP PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x153C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND SWAP9 POP SWAP5 SWAP1 SWAP6 AND SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 DUP9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1616 DUP2 PUSH2 0x2445 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x168A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xFB0 DUP3 DUP3 PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFB0 JUMPI PUSH2 0x1722 DUP2 PUSH2 0x2445 JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x17B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0x185F DUP2 PUSH2 0x22AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1878 JUMPI PUSH2 0x1878 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND DUP5 DUP5 ADD MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 DUP5 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE DUP10 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP4 SWAP6 POP SWAP1 SWAP3 SWAP1 SWAP2 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1963 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x191D JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xA0 ADD MLOAD SWAP1 POP DUP3 PUSH1 0x80 ADD MLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x1988 JUMPI POP PUSH1 0xC0 DUP4 ADD MLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1A5D JUMPI PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1A5A JUMPI PUSH1 0x0 PUSH2 0x19C8 DUP4 TIMESTAMP DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19B7 JUMPI PUSH2 0x19B7 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH2 0x1495 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x19D5 JUMPI POP PUSH2 0x1A4A JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19E7 JUMPI PUSH2 0x19E7 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP3 POP DUP6 PUSH1 0xC0 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A11 JUMPI PUSH2 0x1A11 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x1A28 SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x1A32 SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x1A3C SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH2 0x1A46 SWAP1 DUP6 PUSH2 0x2886 JUMP JUMPDEST SWAP4 POP POP JUMPDEST PUSH2 0x1A53 DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x1995 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD DUP6 SWAP1 PUSH2 0x1A6E DUP4 DUP10 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x1A78 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH2 0x1A82 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1B24 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B61 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B66 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1B90 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1B90 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1B90 SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x1BF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F72696E6745524332303A205472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x1C9C SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CD9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1D08 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1D08 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D08 SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x1D6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F72696E6745524332303A205472616E7366657246726F6D206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1DE5 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D9F JUMP JUMPDEST POP POP DUP3 MLOAD SWAP3 SWAP4 POP POP POP DUP1 PUSH2 0x1DFE JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E65 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E1B JUMPI PUSH2 0x1E1B PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP6 GT PUSH2 0x1E55 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E3F JUMPI PUSH2 0x1E3F PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP4 POP POP POP POP PUSH2 0xADA JUMP JUMPDEST PUSH2 0x1E5E DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E01 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x313CE56700000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP2 PUSH2 0x1EF2 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F2D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1F45 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST PUSH2 0x1F50 JUMPI PUSH1 0x12 PUSH2 0x1F64 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1F64 SWAP2 SWAP1 PUSH2 0x282E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1F81 JUMPI PUSH2 0x1F81 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x8 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x2014 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261773A3A62616420776974686472617720616D6F756E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0x201D DUP5 PUSH2 0x2445 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x203D SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x2047 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH2 0x2051 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x207F JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x207F SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x1A8D JUMP JUMPDEST DUP4 ISZERO PUSH2 0x20DB JUMPI DUP4 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2099 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 SLOAD PUSH2 0x20C1 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP7 PUSH2 0x1A8D JUMP JUMPDEST DUP4 DUP4 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20D5 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD DUP4 SLOAD PUSH2 0x20F1 SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x20FB SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 ADD PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x214D JUMPI PUSH2 0x214D PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x217E DUP5 PUSH2 0x2445 JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x21E9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x21A5 SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x21AF SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH2 0x21B9 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x21E7 JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x21E7 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x1A8D JUMP JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0x2248 JUMPI DUP2 SLOAD PUSH2 0x2213 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP7 PUSH2 0x1BFD JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2227 SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2242 SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD DUP3 SLOAD PUSH2 0x225E SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x2268 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2392 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x234C JUMP JUMPDEST POP POP DUP3 MLOAD SWAP3 SWAP4 POP POP POP DUP1 PUSH2 0x23AB JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2412 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x23C8 JUMPI PUSH2 0x23C8 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP6 GT PUSH2 0x2402 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x23EC JUMPI PUSH2 0x23EC PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP4 POP POP POP POP PUSH2 0xADA JUMP JUMPDEST PUSH2 0x240B DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x23AE JUMP JUMPDEST POP DUP2 PUSH2 0x241F PUSH1 0x1 DUP4 PUSH2 0x2A3D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x242F JUMPI PUSH2 0x242F PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x245A JUMPI PUSH2 0x245A PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP6 MUL SWAP1 SWAP3 ADD SWAP6 POP SWAP3 SWAP1 SWAP2 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x24D9 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2493 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP GT PUSH2 0x24EF JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SLOAD PUSH2 0x2515 JUMPI PUSH2 0x2502 DUP4 TIMESTAMP PUSH2 0x2323 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x2510 JUMPI TIMESTAMP PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2610 JUMPI PUSH1 0x0 PUSH2 0x253E DUP5 PUSH1 0x4 ADD SLOAD TIMESTAMP DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19B7 JUMPI PUSH2 0x19B7 PUSH2 0x2ABC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x254B JUMPI POP PUSH2 0x2600 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x255D JUMPI PUSH2 0x255D PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD TIMESTAMP GT ISZERO PUSH2 0x2598 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2582 JUMPI PUSH2 0x2582 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x259F JUMP JUMPDEST TIMESTAMP PUSH1 0x4 DUP6 ADD SSTORE JUMPDEST DUP4 PUSH1 0x6 ADD SLOAD DUP5 PUSH1 0x2 ADD SLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x25BB JUMPI PUSH2 0x25BB PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x25D2 SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x25DC SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x25E6 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST DUP5 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x25F9 SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH2 0x2609 DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x2518 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D7 DUP2 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x265E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x26EA DUP2 PUSH2 0x2AEB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x26FA DUP2 PUSH2 0x2AEB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x271D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2749 DUP2 PUSH2 0x2AEB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x278B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x27A4 DUP2 PUSH2 0x2AEB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x27F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x2814 DUP2 PUSH2 0x2B0D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14D7 DUP2 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x286C JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x2852 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x287B JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2899 JUMPI PUSH2 0x2899 PUSH2 0x2A8D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28D4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2932 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x2918 JUMPI PUSH2 0x2918 PUSH2 0x2A8D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2925 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x28DE JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D7 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x2950 JUMPI POP PUSH1 0x1 PUSH2 0xADA JUMP JUMPDEST DUP2 PUSH2 0x295D JUMPI POP PUSH1 0x0 PUSH2 0xADA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2973 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x297D JUMPI PUSH2 0x2999 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xADA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x298E JUMPI PUSH2 0x298E PUSH2 0x2A8D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xADA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x29BC JUMPI POP DUP2 DUP2 EXP PUSH2 0xADA JUMP JUMPDEST PUSH2 0x29C6 DUP4 DUP4 PUSH2 0x28D9 JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x29F8 JUMPI PUSH2 0x29F8 PUSH2 0x2A8D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A38 JUMPI PUSH2 0x2A38 PUSH2 0x2A8D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2A4F JUMPI PUSH2 0x2A4F PUSH2 0x2A8D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2A86 JUMPI PUSH2 0x2A86 PUSH2 0x2A8D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x185F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x185F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0xB9 EQ PUSH13 0x3C7BF0E76C07837E7AED02BF4D PUSH9 0x4C8ED65FDF1AAFC17 0x1E SHR COINBASE 0xF6 0xAA PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
              "sourceMap": "10722:17396:0:-:0;;;13215:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4401:23;3415:10;4401:9;:23::i;:::-;1768:1;1873:22;;13278:2;13260:15;:20;13290:12;:28;;-1:-1:-1;;;;;;13290:28:0;-1:-1:-1;;;;;13290:28:0;;;;;;;;;;10722:17396;;5575:169;5630:16;5649:6;;-1:-1:-1;;;;;5665:17:0;;;-1:-1:-1;;;;;;5665:17:0;;;;;;5697:40;;5649:6;;;;;;;5697:40;;5630:16;5697:40;5620:124;5575:169;:::o;14:290:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;:::-;10722:17396:0;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_deposit_1616": {
                  "entryPoint": 8504,
                  "id": 1616,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_endTimestampOf_1010": {
                  "entryPoint": 8995,
                  "id": 1010,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_msgSender_49": {
                  "entryPoint": null,
                  "id": 49,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_pendingReward_1260": {
                  "entryPoint": 6242,
                  "id": 1260,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@_rewardPerSecOf_1081": {
                  "entryPoint": 7542,
                  "id": 1081,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_setOwner_160": {
                  "entryPoint": 8878,
                  "id": 160,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_updateCampaign_1402": {
                  "entryPoint": 9285,
                  "id": 1402,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_withdraw_1753": {
                  "entryPoint": 8044,
                  "id": 1753,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@addCampaignInfo_772": {
                  "entryPoint": 2973,
                  "id": 772,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@addRewardInfo_912": {
                  "entryPoint": 1715,
                  "id": 912,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@campaignInfoLen_934": {
                  "entryPoint": null,
                  "id": 934,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@campaignInfo_590": {
                  "entryPoint": 5420,
                  "id": 590,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@campaignRewardInfo_586": {
                  "entryPoint": 1115,
                  "id": 586,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@currentEndTimestamp_948": {
                  "entryPoint": 5408,
                  "id": 948,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@currentRewardPerSec_1024": {
                  "entryPoint": 2766,
                  "id": 1024,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@depositWithPermit_1477": {
                  "entryPoint": 4024,
                  "id": 1477,
                  "parameterSlots": 6,
                  "returnSlots": 0
                },
                "@deposit_1492": {
                  "entryPoint": 5661,
                  "id": 1492,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@emergencyRewardWithdraw_1905": {
                  "entryPoint": 1175,
                  "id": 1905,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@emergencyWithdraw_1850": {
                  "entryPoint": 4375,
                  "id": 1850,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@getMultiplier_1119": {
                  "entryPoint": 5269,
                  "id": 1119,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@harvest_1782": {
                  "entryPoint": 4699,
                  "id": 1782,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@massUpdateCampaigns_1429": {
                  "entryPoint": 5785,
                  "id": 1429,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@owner_90": {
                  "entryPoint": null,
                  "id": 90,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pendingReward_1145": {
                  "entryPoint": 5342,
                  "id": 1145,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@renounceOwnership_118": {
                  "entryPoint": 5128,
                  "id": 118,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@rewardHolder_601": {
                  "entryPoint": null,
                  "id": 601,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@rewardInfoLen_925": {
                  "entryPoint": null,
                  "id": 925,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@rewardInfoLimit_599": {
                  "entryPoint": null,
                  "id": 599,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@safeDecimals_442": {
                  "entryPoint": 7793,
                  "id": 442,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@safeTransferFrom_541": {
                  "entryPoint": 7165,
                  "id": 541,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@safeTransfer_490": {
                  "entryPoint": 6797,
                  "id": 490,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@setRewardHolder_685": {
                  "entryPoint": 4884,
                  "id": 685,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setRewardInfoLimit_701": {
                  "entryPoint": 2784,
                  "id": 701,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@transferOwnership_141": {
                  "entryPoint": 5938,
                  "id": 141,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@updateCampaign_1272": {
                  "entryPoint": 5531,
                  "id": 1272,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@userInfo_597": {
                  "entryPoint": null,
                  "id": 597,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@withdraw_1631": {
                  "entryPoint": 3892,
                  "id": 1631,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 9750,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
                  "entryPoint": 9779,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 9896,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_contract$_IBoringERC20_$234t_contract$_IBoringERC20_$234t_uint256": {
                  "entryPoint": 9930,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 9995,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_address": {
                  "entryPoint": 10020,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256t_uint256": {
                  "entryPoint": 10068,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256t_uint256t_address": {
                  "entryPoint": 10102,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint256t_uint256t_uint256": {
                  "entryPoint": 10159,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint8t_bytes32t_bytes32": {
                  "entryPoint": 10203,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 6
                },
                "abi_decode_tuple_t_uint8_fromMemory": {
                  "entryPoint": 10286,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 10315,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 8,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IBoringERC20_$234_t_contract$_IBoringERC20_$234_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IBoringERC20_$234_t_contract$_IBoringERC20_$234_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 9,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_09999a83a6ca38b78ac937b0ef60ec67685008d1db29892188df71492abfce75__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_1a3f0851ddc9e157ae96e52ed9dfd71a8cb4b1cf2a73b26b9f3f9e0aa9469d27__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_5962806da4a4b793afb6956d0241830d41a127269ec57c15349bd63de06c2970__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_94ba677cf0efe4285070395ca1ecb0fb4dde88e049741c66212c77f57fc3f34b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_a70ca985973376d4b7dc52a397193c7ec20f1b7fa3d4fe0b2073dd7373e4599b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_dffd2f381f9235cb5927387124071d63a91c90f587c3edae76629d7dc4794f26__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e64fce31b3bd3504f76000aa77c64257eff796b8a51f9dbabf1394eb7b527db7__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ec41ec236d91df2ac5421791ea1e4c7e5e2031b36c4bff91410eca2468cc3fb1__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 10374,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 10398,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 10457,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint256": {
                  "entryPoint": 10554,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 10752,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 10813,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 10836,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 10893,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 10940,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 10987,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint8": {
                  "entryPoint": 11021,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:15121:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "84:177:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "130:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "139:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "142:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "132:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "132:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "132:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "105:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "114:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "101:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "101:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "126:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "97:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "97:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "94:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "155:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "181:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "168:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "168:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "159:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "225:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "200:24:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "200:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "200:31:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "240:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "250:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "240:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "50:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "61:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "73:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:247:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "371:510:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "417:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "426:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "429:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "419:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "419:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "419:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "392:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "401:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "388:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "388:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "413:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "384:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "384:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "381:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "442:37:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "469:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "456:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "456:23:1"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "446:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "488:28:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "498:18:1",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "492:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "543:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "552:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "555:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "545:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "545:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "545:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "531:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "539:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "528:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "528:14:1"
                              },
                              "nodeType": "YulIf",
                              "src": "525:34:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "568:32:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "582:9:1"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "593:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "578:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "578:22:1"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "572:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "648:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "657:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "660:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "650:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "650:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "650:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "627:2:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "631:4:1",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "623:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "623:13:1"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "638:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "619:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "619:27:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "612:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "612:35:1"
                              },
                              "nodeType": "YulIf",
                              "src": "609:55:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "673:30:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "700:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "687:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "687:16:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "677:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "730:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "739:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "742:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "732:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "732:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "732:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "718:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "726:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "715:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "715:14:1"
                              },
                              "nodeType": "YulIf",
                              "src": "712:34:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "804:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "813:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "816:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "806:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "806:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "806:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "769:2:1"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "777:1:1",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "780:6:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "773:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "773:14:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "765:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "765:23:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "790:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "761:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "761:32:1"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "795:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "758:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "758:45:1"
                              },
                              "nodeType": "YulIf",
                              "src": "755:65:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "829:21:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "843:2:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "847:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "839:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "839:11:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "829:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "859:16:1",
                              "value": {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "869:6:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "859:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "329:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "340:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "352:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "360:6:1",
                            "type": ""
                          }
                        ],
                        "src": "266:615:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "964:199:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1010:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1019:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1022:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1012:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1012:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1012:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "985:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "994:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "981:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "981:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1006:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "977:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "977:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "974:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1035:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1054:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1048:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1048:16:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1039:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1117:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1126:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1129:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1119:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1119:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1119:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1086:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "1107:5:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "1100:6:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1100:13:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1093:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1093:21:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1083:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1083:32:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1076:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1076:40:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1073:60:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1142:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1152:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1142:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "930:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "941:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "953:6:1",
                            "type": ""
                          }
                        ],
                        "src": "886:277:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1312:352:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1358:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1367:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1370:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1360:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1360:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1360:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1333:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1342:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1329:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1329:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1354:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1325:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1325:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1322:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1383:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1409:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1396:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1396:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1387:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1453:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1428:24:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1428:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1428:31:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1468:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1478:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1468:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1492:47:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1524:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1535:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1520:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1520:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1507:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1507:32:1"
                              },
                              "variables": [
                                {
                                  "name": "value_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1496:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1573:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1548:24:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1548:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1548:33:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1590:17:1",
                              "value": {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "1600:7:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1590:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1616:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1643:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1654:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1639:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1639:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1626:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1626:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1616:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_IBoringERC20_$234t_contract$_IBoringERC20_$234t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1262:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1273:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1285:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1293:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1301:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1168:496:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1739:110:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1785:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1794:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1797:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1787:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1787:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1787:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1760:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1769:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1756:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1756:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1781:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1752:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1752:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1749:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1810:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1833:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1820:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1820:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1810:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1705:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1716:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1728:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1669:180:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1941:228:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1987:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1996:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1999:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1989:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1989:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1989:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1962:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1971:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1958:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1958:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1983:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1954:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1954:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "1951:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2012:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2035:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2022:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2022:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2012:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2054:45:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2084:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2095:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2080:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2080:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2067:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2067:32:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2058:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2133:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2108:24:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2108:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2108:31:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2148:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2158:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2148:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1899:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1910:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1922:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1930:6:1",
                            "type": ""
                          }
                        ],
                        "src": "1854:315:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2261:161:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2307:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2316:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2319:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2309:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2309:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2309:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2282:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2291:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2278:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2278:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2303:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2274:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2274:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2271:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2332:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2355:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2342:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2342:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2332:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2374:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2401:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2412:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2397:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2397:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2384:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2384:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2374:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2219:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2230:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2242:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2250:6:1",
                            "type": ""
                          }
                        ],
                        "src": "2174:248:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2531:279:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2577:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2586:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2589:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2579:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2579:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2579:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2552:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2561:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2548:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2548:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2573:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2544:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2544:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2541:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2602:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2625:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2612:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2612:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2602:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2644:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2671:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2682:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2667:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2667:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2654:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2654:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2644:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2695:45:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2725:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2736:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2721:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2721:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2708:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2708:32:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2699:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2774:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2749:24:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2749:31:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2749:31:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2789:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2799:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2789:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2481:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2492:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2504:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2512:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2520:6:1",
                            "type": ""
                          }
                        ],
                        "src": "2427:383:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2919:212:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2965:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2974:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2977:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2967:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2967:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2967:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2940:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2949:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2936:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2936:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2961:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2932:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2932:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "2929:52:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2990:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3013:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3000:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3000:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2990:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3032:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3059:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3070:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3055:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3055:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3042:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3042:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3032:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3083:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3110:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3121:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3106:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3106:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3093:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3093:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3083:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2869:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2880:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2892:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2900:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2908:6:1",
                            "type": ""
                          }
                        ],
                        "src": "2815:316:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3289:433:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3336:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3345:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3348:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3338:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3338:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3338:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3310:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3319:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3306:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3306:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3331:3:1",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3302:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3302:33:1"
                              },
                              "nodeType": "YulIf",
                              "src": "3299:53:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3361:33:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3384:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3371:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3371:23:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3361:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3403:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3430:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3441:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3426:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3426:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3413:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3413:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3403:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3454:42:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3481:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3492:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3477:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3477:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3464:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3464:32:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3454:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3505:45:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3535:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3546:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3531:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3531:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3518:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3518:32:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "3509:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3582:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3559:22:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3559:29:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3559:29:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3597:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3607:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3597:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3621:43:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3648:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3659:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3644:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3644:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3631:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3631:33:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3621:6:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3673:43:1",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3700:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3711:3:1",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3696:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3696:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3683:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3683:33:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "3673:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint8t_bytes32t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3215:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3226:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3238:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3246:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3254:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3262:6:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "3270:6:1",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "3278:6:1",
                            "type": ""
                          }
                        ],
                        "src": "3136:586:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3806:168:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3852:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3861:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3864:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3854:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3854:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3854:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3827:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3836:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3823:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3823:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3848:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3819:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3819:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "3816:52:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3877:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3896:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3890:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3890:16:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "3881:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3938:5:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3915:22:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3915:29:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3915:29:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3953:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3963:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3953:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3772:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3783:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3795:6:1",
                            "type": ""
                          }
                        ],
                        "src": "3727:247:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4116:289:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4126:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4146:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4140:5:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4140:13:1"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "4130:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4162:10:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4171:1:1",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "4166:1:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4233:77:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "4258:3:1"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "4263:1:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4254:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4254:11:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4281:6:1"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "4289:1:1"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4277:3:1"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "4277:14:1"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "4293:4:1",
                                                  "type": "",
                                                  "value": "0x20"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "4273:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4273:25:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "4267:5:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4267:32:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4247:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4247:53:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4247:53:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "4192:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4195:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4189:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4189:13:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "4203:21:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4205:17:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4214:1:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4217:4:1",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4210:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4210:12:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "4205:1:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "4185:3:1",
                                "statements": []
                              },
                              "src": "4181:129:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4336:31:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "4349:3:1"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "4354:6:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4345:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4345:16:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4363:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4338:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4338:27:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4338:27:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "4325:1:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4328:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4322:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4322:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "4319:48:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4376:23:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4387:3:1"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4392:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4383:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4383:16:1"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4376:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4092:3:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4097:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4108:3:1",
                            "type": ""
                          }
                        ],
                        "src": "3979:426:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4511:125:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4521:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4533:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4544:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4529:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4529:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4521:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4563:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4578:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4586:42:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4574:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4574:55:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4556:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4556:74:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4556:74:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4480:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4491:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4502:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4410:226:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4798:241:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4808:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4820:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4831:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4816:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4816:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4808:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4843:52:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4853:42:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4847:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4911:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "4926:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4934:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4922:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4922:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4904:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4904:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4904:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4958:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4969:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4954:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4954:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4978:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4986:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4974:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4974:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4947:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4947:43:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4947:43:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5010:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5021:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5006:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5006:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5026:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4999:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4999:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4999:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4751:9:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4762:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4770:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4778:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4789:4:1",
                            "type": ""
                          }
                        ],
                        "src": "4641:398:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5309:428:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5319:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5331:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5342:3:1",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5327:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5327:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5319:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5355:52:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5365:42:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5359:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5423:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5438:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5446:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5434:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5434:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5416:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5416:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5416:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5470:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5481:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5466:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5466:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5490:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5498:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5486:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5486:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5459:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5459:43:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5459:43:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5522:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5533:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5518:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5518:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5538:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5511:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5511:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5511:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5565:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5576:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5561:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5561:18:1"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5581:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5554:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5554:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5554:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5608:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5619:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5604:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5604:19:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value4",
                                        "nodeType": "YulIdentifier",
                                        "src": "5629:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5637:4:1",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5625:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5625:17:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5597:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5597:46:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5597:46:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5663:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5674:3:1",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5659:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5659:19:1"
                                  },
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "5680:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5652:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5652:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5652:35:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5707:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5718:3:1",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5703:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5703:19:1"
                                  },
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "5724:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5696:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5696:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5696:35:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5230:9:1",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "5241:6:1",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "5249:6:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "5257:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5265:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5273:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5281:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5289:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5300:4:1",
                            "type": ""
                          }
                        ],
                        "src": "5044:693:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5871:168:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5881:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5893:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5904:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5889:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5889:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5881:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5923:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5938:6:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5946:42:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5934:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5934:55:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5916:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5916:74:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5916:74:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6010:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6021:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6006:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6006:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6026:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5999:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5999:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5999:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5832:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5843:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5851:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5862:4:1",
                            "type": ""
                          }
                        ],
                        "src": "5742:297:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6241:241:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6251:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6263:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6274:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6259:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6259:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6251:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6286:52:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6296:42:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6290:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6354:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6369:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6377:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6365:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6365:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6347:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6347:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6347:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6401:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6412:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6397:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6397:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6421:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6429:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6417:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6417:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6390:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6390:43:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6390:43:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6453:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6464:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6449:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6449:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6469:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6442:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6442:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6442:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IBoringERC20_$234_t_contract$_IBoringERC20_$234_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6194:9:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6205:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6213:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6221:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6232:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6044:438:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6824:461:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6834:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6846:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6857:3:1",
                                    "type": "",
                                    "value": "256"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6842:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6842:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6834:4:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6870:52:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6880:42:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6874:2:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6938:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6953:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6961:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6949:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6949:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6931:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6931:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6931:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6985:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6996:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6981:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6981:18:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7005:6:1"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7013:2:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7001:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7001:15:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6974:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6974:43:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6974:43:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7037:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7048:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7033:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7033:18:1"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7053:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7026:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7026:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7026:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7080:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7091:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7076:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7076:18:1"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7096:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7069:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7069:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7069:34:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7123:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7134:3:1",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7119:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7119:19:1"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "7140:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7112:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7112:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7112:35:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7167:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7178:3:1",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7163:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7163:19:1"
                                  },
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "7184:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7156:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7156:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7156:35:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7211:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7222:3:1",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7207:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7207:19:1"
                                  },
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "7228:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7200:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7200:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7200:35:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7255:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7266:3:1",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7251:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7251:19:1"
                                  },
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "7272:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7244:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7244:35:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7244:35:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IBoringERC20_$234_t_contract$_IBoringERC20_$234_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6737:9:1",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "6748:6:1",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "6756:6:1",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "6764:6:1",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "6772:6:1",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "6780:6:1",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6788:6:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6796:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6804:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6815:4:1",
                            "type": ""
                          }
                        ],
                        "src": "6487:798:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7464:247:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7481:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7492:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7474:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7474:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7474:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7515:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7526:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7511:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7511:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7531:2:1",
                                    "type": "",
                                    "value": "57"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7504:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7504:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7504:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7554:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7565:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7550:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7550:18:1"
                                  },
                                  {
                                    "hexValue": "636f6e7374727563746f723a2072657761726420746f6b656e20646563696d61",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7570:34:1",
                                    "type": "",
                                    "value": "constructor: reward token decima"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7543:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7543:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7543:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7625:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7636:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7621:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7621:18:1"
                                  },
                                  {
                                    "hexValue": "6c73206d75737420626520696e666572696f7220746f203330",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7641:27:1",
                                    "type": "",
                                    "value": "ls must be inferior to 30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7614:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7614:55:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7614:55:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7678:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7690:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7701:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7686:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7686:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7678:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_09999a83a6ca38b78ac937b0ef60ec67685008d1db29892188df71492abfce75__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7441:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7455:4:1",
                            "type": ""
                          }
                        ],
                        "src": "7290:421:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7890:178:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7907:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7918:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7900:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7900:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7900:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7941:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7952:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7937:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7937:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7957:2:1",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7930:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7930:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7930:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7980:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7991:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7976:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7976:18:1"
                                  },
                                  {
                                    "hexValue": "426f72696e6745524332303a205472616e73666572206661696c6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7996:30:1",
                                    "type": "",
                                    "value": "BoringERC20: Transfer failed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7969:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7969:58:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7969:58:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8036:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8048:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8059:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8044:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8044:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8036:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1a3f0851ddc9e157ae96e52ed9dfd71a8cb4b1cf2a73b26b9f3f9e0aa9469d27__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7867:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7881:4:1",
                            "type": ""
                          }
                        ],
                        "src": "7716:352:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8247:228:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8264:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8275:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8257:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8257:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8257:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8298:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8309:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8294:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8294:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8314:2:1",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8287:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8287:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8287:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8337:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8348:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8333:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8333:18:1"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8353:34:1",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8326:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8326:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8326:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8408:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8419:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8404:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8404:18:1"
                                  },
                                  {
                                    "hexValue": "646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8424:8:1",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8397:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8397:36:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8397:36:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8442:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8454:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8465:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8450:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8450:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8442:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8224:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8238:4:1",
                            "type": ""
                          }
                        ],
                        "src": "8073:402:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8654:225:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8671:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8682:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8664:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8664:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8664:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8705:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8716:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8701:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8701:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8721:2:1",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8694:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8694:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8694:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8744:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8755:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8740:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8740:18:1"
                                  },
                                  {
                                    "hexValue": "616464526577617264496e666f3a3a626164206e657720656e6454696d657374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8760:34:1",
                                    "type": "",
                                    "value": "addRewardInfo::bad new endTimest"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8733:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8733:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8733:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8815:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8826:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8811:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8811:18:1"
                                  },
                                  {
                                    "hexValue": "616d70",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8831:5:1",
                                    "type": "",
                                    "value": "amp"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8804:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8804:33:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8804:33:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8846:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8858:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8869:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8854:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8854:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8846:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5962806da4a4b793afb6956d0241830d41a127269ec57c15349bd63de06c2970__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8631:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8645:4:1",
                            "type": ""
                          }
                        ],
                        "src": "8480:399:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9058:238:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9075:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9086:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9068:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9068:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9068:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9109:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9120:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9105:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9105:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9125:2:1",
                                    "type": "",
                                    "value": "48"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9098:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9098:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9098:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9148:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9159:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9144:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9144:18:1"
                                  },
                                  {
                                    "hexValue": "656d657267656e637952657761726457697468647261773a3a6e6f7420656e6f",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9164:34:1",
                                    "type": "",
                                    "value": "emergencyRewardWithdraw::not eno"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9137:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9137:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9137:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9219:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9230:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9215:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9215:18:1"
                                  },
                                  {
                                    "hexValue": "7567682072657761726420746f6b656e",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9235:18:1",
                                    "type": "",
                                    "value": "ugh reward token"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9208:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9208:46:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9208:46:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9263:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9275:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9286:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9271:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9271:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9263:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_94ba677cf0efe4285070395ca1ecb0fb4dde88e049741c66212c77f57fc3f34b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9035:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9049:4:1",
                            "type": ""
                          }
                        ],
                        "src": "8884:412:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9475:182:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9492:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9503:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9485:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9485:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9485:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9526:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9537:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9522:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9522:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9542:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9515:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9515:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9515:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9565:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9576:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9561:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9561:18:1"
                                  },
                                  {
                                    "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9581:34:1",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9554:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9554:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9554:62:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9625:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9637:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9648:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9633:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9633:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9625:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9452:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9466:4:1",
                            "type": ""
                          }
                        ],
                        "src": "9301:356:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9836:179:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9853:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9864:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9846:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9846:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9846:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9887:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9898:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9883:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9883:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9903:2:1",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9876:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9876:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9876:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9926:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9937:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9922:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9922:18:1"
                                  },
                                  {
                                    "hexValue": "77697468647261773a3a62616420776974686472617720616d6f756e74",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9942:31:1",
                                    "type": "",
                                    "value": "withdraw::bad withdraw amount"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9915:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9915:59:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9915:59:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9983:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9995:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10006:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9991:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9991:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9983:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a70ca985973376d4b7dc52a397193c7ec20f1b7fa3d4fe0b2073dd7373e4599b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9813:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9827:4:1",
                            "type": ""
                          }
                        ],
                        "src": "9662:353:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10194:182:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10211:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10222:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10204:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10204:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10204:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10245:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10256:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10241:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10241:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10261:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10234:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10234:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10234:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10284:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10295:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10280:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10280:18:1"
                                  },
                                  {
                                    "hexValue": "426f72696e6745524332303a205472616e7366657246726f6d206661696c6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10300:34:1",
                                    "type": "",
                                    "value": "BoringERC20: TransferFrom failed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10273:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10273:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10273:62:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10344:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10356:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10367:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10352:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10352:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10344:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_dffd2f381f9235cb5927387124071d63a91c90f587c3edae76629d7dc4794f26__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10171:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10185:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10020:356:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10555:224:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10572:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10583:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10565:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10565:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10565:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10606:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10617:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10602:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10602:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10622:2:1",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10595:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10595:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10595:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10645:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10656:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10641:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10641:18:1"
                                  },
                                  {
                                    "hexValue": "616464526577617264496e666f3a3a72657761726420706572696f6420656e64",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10661:34:1",
                                    "type": "",
                                    "value": "addRewardInfo::reward period end"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10634:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10634:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10634:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10716:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10727:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10712:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10712:18:1"
                                  },
                                  {
                                    "hexValue": "6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10732:4:1",
                                    "type": "",
                                    "value": "ed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10705:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10705:32:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10705:32:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10746:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10758:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10769:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10754:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10754:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10746:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e64fce31b3bd3504f76000aa77c64257eff796b8a51f9dbabf1394eb7b527db7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10532:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10546:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10381:398:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10958:181:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10975:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10986:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10968:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10968:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10968:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11009:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11020:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11005:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11005:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11025:2:1",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10998:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10998:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10998:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11048:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11059:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11044:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11044:18:1"
                                  },
                                  {
                                    "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11064:33:1",
                                    "type": "",
                                    "value": "ReentrancyGuard: reentrant call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11037:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11037:61:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11037:61:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11107:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11119:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11130:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11115:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11115:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11107:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10935:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10949:4:1",
                            "type": ""
                          }
                        ],
                        "src": "10784:355:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11318:241:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11335:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11346:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11328:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11328:21:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11328:21:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11369:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11380:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11365:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11365:18:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11385:2:1",
                                    "type": "",
                                    "value": "51"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11358:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11358:30:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11358:30:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11408:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11419:2:1",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11404:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11404:18:1"
                                  },
                                  {
                                    "hexValue": "616464526577617264496e666f3a3a72657761726420696e666f206c656e6774",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11424:34:1",
                                    "type": "",
                                    "value": "addRewardInfo::reward info lengt"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11397:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11397:62:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11397:62:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11479:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11490:2:1",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11475:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11475:18:1"
                                  },
                                  {
                                    "hexValue": "68206578636565647320746865206c696d6974",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11495:21:1",
                                    "type": "",
                                    "value": "h exceeds the limit"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11468:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11468:49:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11468:49:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11526:27:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11538:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11549:3:1",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11534:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11534:19:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11526:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ec41ec236d91df2ac5421791ea1e4c7e5e2031b36c4bff91410eca2468cc3fb1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11295:9:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11309:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11144:415:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11665:76:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11675:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11687:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11698:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11683:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11683:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11675:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11717:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11728:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11710:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11710:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11710:25:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11634:9:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11645:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11656:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11564:177:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11875:119:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11885:26:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11897:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11908:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11893:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11893:18:1"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11885:4:1"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11927:9:1"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11938:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11920:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11920:25:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11920:25:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11965:9:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11976:2:1",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11961:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11961:18:1"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11981:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11954:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11954:34:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11954:34:1"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11836:9:1",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11847:6:1",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11855:6:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11866:4:1",
                            "type": ""
                          }
                        ],
                        "src": "11746:248:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12047:80:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12074:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "12076:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12076:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12076:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12063:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "12070:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "12066:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12066:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12060:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12060:13:1"
                              },
                              "nodeType": "YulIf",
                              "src": "12057:39:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12105:16:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12116:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12119:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12112:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12112:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "12105:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "12030:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "12033:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "12039:3:1",
                            "type": ""
                          }
                        ],
                        "src": "11999:128:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12178:228:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12209:168:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12230:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12233:77:1",
                                          "type": "",
                                          "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "12223:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12223:88:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12223:88:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12331:1:1",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12334:4:1",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "12324:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12324:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12324:15:1"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12359:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12362:4:1",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "12352:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12352:15:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "12352:15:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12198:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "12191:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12191:9:1"
                              },
                              "nodeType": "YulIf",
                              "src": "12188:189:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12386:14:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "12395:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "12398:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "12391:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12391:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "12386:1:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "12163:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "12166:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "12172:1:1",
                            "type": ""
                          }
                        ],
                        "src": "12132:274:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12475:418:1",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12485:16:1",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12500:1:1",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "12489:7:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12510:16:1",
                              "value": {
                                "name": "power_1",
                                "nodeType": "YulIdentifier",
                                "src": "12519:7:1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "12510:5:1"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12535:13:1",
                              "value": {
                                "name": "_base",
                                "nodeType": "YulIdentifier",
                                "src": "12543:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "12535:4:1"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "12599:288:1",
                                "statements": [
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "12704:22:1",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nodeType": "YulIdentifier",
                                              "src": "12706:16:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12706:18:1"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "12706:18:1"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "12619:4:1"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "12629:66:1",
                                              "type": "",
                                              "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                            },
                                            {
                                              "name": "base",
                                              "nodeType": "YulIdentifier",
                                              "src": "12697:4:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nodeType": "YulIdentifier",
                                            "src": "12625:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12625:77:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "12616:2:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12616:87:1"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "12613:113:1"
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "12765:29:1",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "12767:25:1",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nodeType": "YulIdentifier",
                                                "src": "12780:5:1"
                                              },
                                              {
                                                "name": "base",
                                                "nodeType": "YulIdentifier",
                                                "src": "12787:4:1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nodeType": "YulIdentifier",
                                              "src": "12776:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12776:16:1"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nodeType": "YulIdentifier",
                                              "src": "12767:5:1"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "12746:8:1"
                                        },
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "12756:7:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "12742:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12742:22:1"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "12739:55:1"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "12807:23:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "12819:4:1"
                                        },
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "12825:4:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nodeType": "YulIdentifier",
                                        "src": "12815:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12815:15:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nodeType": "YulIdentifier",
                                        "src": "12807:4:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "12843:34:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "power_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "12859:7:1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "12868:8:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nodeType": "YulIdentifier",
                                        "src": "12855:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12855:22:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nodeType": "YulIdentifier",
                                        "src": "12843:8:1"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "12568:8:1"
                                  },
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12578:7:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "12565:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12565:21:1"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "12587:3:1",
                                "statements": []
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "12561:3:1",
                                "statements": []
                              },
                              "src": "12557:330:1"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nodeType": "YulTypedName",
                            "src": "12439:5:1",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "12446:8:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "12459:5:1",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "12466:4:1",
                            "type": ""
                          }
                        ],
                        "src": "12411:482:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12968:61:1",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12978:45:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "13008:4:1"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "13014:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nodeType": "YulIdentifier",
                                  "src": "12987:20:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12987:36:1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "12978:5:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "12939:4:1",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "12945:8:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "12958:5:1",
                            "type": ""
                          }
                        ],
                        "src": "12898:131:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13093:807:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13131:52:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "13145:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13154:1:1",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "13145:5:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "13168:5:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "13113:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13106:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13106:16:1"
                              },
                              "nodeType": "YulIf",
                              "src": "13103:80:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13216:52:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "13230:10:1",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13239:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "13230:5:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "13253:5:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "13202:4:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13195:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13195:12:1"
                              },
                              "nodeType": "YulIf",
                              "src": "13192:76:1"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "13304:52:1",
                                    "statements": [
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "13318:10:1",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "13327:1:1",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "13318:5:1"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "13341:5:1"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "13297:59:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13302:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "13372:123:1",
                                    "statements": [
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "13407:22:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "13409:16:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "13409:18:1"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "13409:18:1"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "13392:8:1"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "13402:3:1",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nodeType": "YulIdentifier",
                                            "src": "13389:2:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "13389:17:1"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "13386:43:1"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "13442:25:1",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nodeType": "YulIdentifier",
                                              "src": "13455:8:1"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "13465:1:1",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "13451:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "13451:16:1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nodeType": "YulIdentifier",
                                            "src": "13442:5:1"
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulLeave",
                                        "src": "13480:5:1"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "13365:130:1",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13370:1:1",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "13284:4:1"
                              },
                              "nodeType": "YulSwitch",
                              "src": "13277:218:1"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13593:70:1",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "13607:28:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nodeType": "YulIdentifier",
                                          "src": "13620:4:1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nodeType": "YulIdentifier",
                                          "src": "13626:8:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nodeType": "YulIdentifier",
                                        "src": "13616:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13616:19:1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nodeType": "YulIdentifier",
                                        "src": "13607:5:1"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulLeave",
                                    "src": "13648:5:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "13517:4:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13523:2:1",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "13514:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13514:12:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "13531:8:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13541:2:1",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "13528:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13528:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "13510:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13510:35:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nodeType": "YulIdentifier",
                                            "src": "13554:4:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13560:3:1",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "13551:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13551:13:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nodeType": "YulIdentifier",
                                            "src": "13569:8:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "13579:2:1",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nodeType": "YulIdentifier",
                                          "src": "13566:2:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13566:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "13547:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13547:36:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "13507:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13507:77:1"
                              },
                              "nodeType": "YulIf",
                              "src": "13504:159:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "13672:57:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "13714:4:1"
                                  },
                                  {
                                    "name": "exponent",
                                    "nodeType": "YulIdentifier",
                                    "src": "13720:8:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nodeType": "YulIdentifier",
                                  "src": "13695:18:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13695:34:1"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nodeType": "YulTypedName",
                                  "src": "13676:7:1",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nodeType": "YulTypedName",
                                  "src": "13685:6:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "13834:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "13836:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "13836:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "13836:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13744:7:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13757:66:1",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "base_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "13825:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "13753:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13753:79:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "13741:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13741:92:1"
                              },
                              "nodeType": "YulIf",
                              "src": "13738:118:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13865:29:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13878:7:1"
                                  },
                                  {
                                    "name": "base_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "13887:6:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "13874:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13874:20:1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "13865:5:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nodeType": "YulTypedName",
                            "src": "13064:4:1",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nodeType": "YulTypedName",
                            "src": "13070:8:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nodeType": "YulTypedName",
                            "src": "13083:5:1",
                            "type": ""
                          }
                        ],
                        "src": "13034:866:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13957:176:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14076:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "14078:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14078:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14078:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "13988:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "13981:6:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13981:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "13974:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13974:17:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "13996:1:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14003:66:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "14071:1:1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "13999:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "13999:74:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "13993:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13993:81:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "13970:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13970:105:1"
                              },
                              "nodeType": "YulIf",
                              "src": "13967:131:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14107:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14122:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14125:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "14118:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14118:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "14107:7:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "13936:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "13939:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "13945:7:1",
                            "type": ""
                          }
                        ],
                        "src": "13905:228:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14187:76:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14209:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "14211:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14211:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14211:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14203:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14206:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14200:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14200:8:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14197:34:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14240:17:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14252:1:1"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14255:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "14248:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14248:9:1"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "14240:4:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "14169:1:1",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "14172:1:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "14178:4:1",
                            "type": ""
                          }
                        ],
                        "src": "14138:125:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14315:148:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14406:22:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "14408:16:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14408:18:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14408:18:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14331:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14338:66:1",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "14328:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14328:77:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14325:103:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14437:20:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14448:5:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14455:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14444:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14444:13:1"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "14437:3:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14297:5:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "14307:3:1",
                            "type": ""
                          }
                        ],
                        "src": "14268:195:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14500:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14517:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14520:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14510:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14510:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14510:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14614:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14617:4:1",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14607:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14607:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14607:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14638:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14641:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14631:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14631:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14631:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14468:184:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14689:152:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14706:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14709:77:1",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14699:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14699:88:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14699:88:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14803:1:1",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14806:4:1",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14796:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14796:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14796:15:1"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14827:1:1",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14830:4:1",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "14820:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14820:15:1"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14820:15:1"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14657:184:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14891:109:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14978:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14987:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14990:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14980:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14980:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14980:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "14914:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "14925:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14932:42:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "14921:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14921:54:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "14911:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14911:65:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14904:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14904:73:1"
                              },
                              "nodeType": "YulIf",
                              "src": "14901:93:1"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "14880:5:1",
                            "type": ""
                          }
                        ],
                        "src": "14846:154:1"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15048:71:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15097:16:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15106:1:1",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15109:1:1",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15099:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15099:12:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15099:12:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "15071:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "15082:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15089:4:1",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "15078:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15078:16:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "15068:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15068:27:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15061:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15061:35:1"
                              },
                              "nodeType": "YulIf",
                              "src": "15058:55:1"
                            }
                          ]
                        },
                        "name": "validator_revert_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15037:5:1",
                            "type": ""
                          }
                        ],
                        "src": "15005:114:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IBoringERC20_$234t_contract$_IBoringERC20_$234t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value := calldataload(add(headStart, 96))\n        validator_revert_uint8(value)\n        value3 := value\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xff))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_contract$_IBoringERC20_$234_t_contract$_IBoringERC20_$234_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_IBoringERC20_$234_t_contract$_IBoringERC20_$234_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_t_stringliteral_09999a83a6ca38b78ac937b0ef60ec67685008d1db29892188df71492abfce75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"constructor: reward token decima\")\n        mstore(add(headStart, 96), \"ls must be inferior to 30\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1a3f0851ddc9e157ae96e52ed9dfd71a8cb4b1cf2a73b26b9f3f9e0aa9469d27__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"BoringERC20: Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5962806da4a4b793afb6956d0241830d41a127269ec57c15349bd63de06c2970__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"addRewardInfo::bad new endTimest\")\n        mstore(add(headStart, 96), \"amp\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_94ba677cf0efe4285070395ca1ecb0fb4dde88e049741c66212c77f57fc3f34b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"emergencyRewardWithdraw::not eno\")\n        mstore(add(headStart, 96), \"ugh reward token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a70ca985973376d4b7dc52a397193c7ec20f1b7fa3d4fe0b2073dd7373e4599b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"withdraw::bad withdraw amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dffd2f381f9235cb5927387124071d63a91c90f587c3edae76629d7dc4794f26__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"BoringERC20: TransferFrom failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e64fce31b3bd3504f76000aa77c64257eff796b8a51f9dbabf1394eb7b527db7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"addRewardInfo::reward period end\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ec41ec236d91df2ac5421791ea1e4c7e5e2031b36c4bff91410eca2468cc3fb1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"addRewardInfo::reward info lengt\")\n        mstore(add(headStart, 96), \"h exceeds the limit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106101ad5760003560e01c80635d14b06f116100ee57806398969e8211610097578063cef7042d11610071578063cef7042d1461041a578063e2bbb1581461042d578063eebdced514610440578063f2fde38b1461044857600080fd5b806398969e821461038e5780639e494bee146103a1578063bb2238ec146103b457600080fd5b80637bafb029116100c85780637bafb0291461032b5780638da5cb5b1461033e57806393f1a40b1461035c57600080fd5b80635d14b06f146102fd5780636806cc9314610310578063715018a61461032357600080fd5b8063409e00fc1161015b5780634ae56bae116101355780634ae56bae14610272578063515bc323146102925780635312ea8e146102a5578063569c93d2146102b857600080fd5b8063409e00fc14610244578063441a3e70146102575780634ad7ce801461026a57600080fd5b80632ea807c51161018c5780632ea807c51461020b57806332215c421461021e57806333824b871461023157600080fd5b8062d74850146101b257806310f7a6af146101ce5780631d123131146101f6575b600080fd5b6101bb60055481565b6040519081526020015b60405180910390f35b6101e16101dc366004612754565b61045b565b604080519283526020830191909152016101c5565b610209610204366004612776565b610497565b005b6102096102193660046127af565b6106b3565b6101bb61022c36600461270b565b610ace565b61020961023f36600461270b565b610ae0565b6102096102523660046126ca565b610b9d565b610209610265366004612754565b610f34565b6003546101bb565b6101bb61028036600461270b565b60009081526002602052604090205490565b6102096102a03660046127db565b610fb8565b6102096102b336600461270b565b611117565b6006546102d89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c5565b61020961030b366004612633565b61125b565b61020961031e366004612616565b611314565b610209611408565b6101bb6103393660046127af565b611495565b60005473ffffffffffffffffffffffffffffffffffffffff166102d8565b6101e161036a366004612724565b60046020908152600092835260408084209091529082529020805460019091015482565b6101bb61039c366004612724565b6114de565b6101bb6103af36600461270b565b611520565b6103c76103c236600461270b565b61152c565b6040805173ffffffffffffffffffffffffffffffffffffffff998a168152989097166020890152958701949094526060860192909252608085015260a084015260c083015260e0820152610100016101c5565b61020961042836600461270b565b61159b565b61020961043b366004612754565b61161d565b610209611699565b610209610456366004612616565b611732565b6002602052816000526040600020818154811061047757600080fd5b600091825260209091206002909102018054600190910154909250905082565b60005473ffffffffffffffffffffffffffffffffffffffff16331461051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6002600154141561058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b60026001819055506000600384815481106105a7576105a7612abc565b9060005260206000209060080201905060006105c98583600601546000611862565b60078301549091506105db8583612886565b1115610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f656d657267656e637952657761726457697468647261773a3a6e6f7420656e6f60448201527f7567682072657761726420746f6b656e000000000000000000000000000000006064820152608401610514565b8382600701600082825461067d9190612a3d565b909155505060018201546106a89073ffffffffffffffffffffffffffffffffffffffff168486611a8d565b505060018055505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b6000838152600260205260408120600380549192918690811061075957610759612abc565b906000526020600020906008020190506005548280549050106107fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f616464526577617264496e666f3a3a72657761726420696e666f206c656e677460448201527f68206578636565647320746865206c696d6974000000000000000000000000006064820152608401610514565b8154158061083e575081544290839061081990600190612a3d565b8154811061082957610829612abc565b90600052602060002090600202016000015410155b6108ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f616464526577617264496e666f3a3a72657761726420706572696f6420656e6460448201527f65640000000000000000000000000000000000000000000000000000000000006064820152608401610514565b8154158061090957508154849083906108e590600190612a3d565b815481106108f5576108f5612abc565b906000526020600020906002020160000154105b610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f616464526577617264496e666f3a3a626164206e657720656e6454696d65737460448201527f616d7000000000000000000000000000000000000000000000000000000000006064820152608401610514565b8154600090156109d657825483906109af90600190612a3d565b815481106109bf576109bf612abc565b9060005260206000209060020201600001546109dc565b81600301545b905060006109ea8287612a3d565b905060006109f88287612a00565b6006546001860154919250610a289173ffffffffffffffffffffffffffffffffffffffff90811691163084611bfd565b80846007016000828254610a3c9190612886565b9091555050604080518082019091528781526020808201888152875460018181018a5560008a8152939093209351600290910290930192835551918101919091558554610a899190612a3d565b60408051898152602081018990528a917fad90731bd0d97445f5af66088f3adebf343c520c20e033cc42f93b124258cdc2910160405180910390a35050505050505050565b6000610ada8242611d76565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b60058190556040518181527fb64f58843e750a8bea7135ef396cf0a7790bfc9a8f43f11ac0e0aacc1b5787ba906020015b60405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff163314610c1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b6000610c3f8373ffffffffffffffffffffffffffffffffffffffff16611e71565b60ff169050601e8110610cd4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f636f6e7374727563746f723a2072657761726420746f6b656e20646563696d6160448201527f6c73206d75737420626520696e666572696f7220746f203330000000000000006064820152608401610514565b6000610ce182601e612a3d565b610cec90600a61293a565b604080516101008101825273ffffffffffffffffffffffffffffffffffffffff8089168252878116602083019081529282018481526060830188815260808401898152600060a0860181815260c0870182815260e0880183815260038054600181810183559582905299516008909a027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810180549b8b167fffffffffffffffffffffffff00000000000000000000000000000000000000009c8d161790559a517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c8c01805491909a169a169990991790975594517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d89015592517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e88015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f87015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f86086015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f86185015590517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f8629093019290925554919250610ed491612a3d565b6040805173ffffffffffffffffffffffffffffffffffffffff8089168252871660208201529081018590527f9b2f18f9a188a5aec4a95ee3164fe234dfbb6117628b2ad1a581939e61c69f4e906060015b60405180910390a25050505050565b60026001541415610fa1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b6002600155610fb08282611f6c565b505060018055565b60026001541415611025576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b600260018190555060006003878154811061104257611042612abc565b6000918252602090912060089091020180546040517fd505accf000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018990526064810188905260ff8716608482015260a4810186905260c4810185905291925073ffffffffffffffffffffffffffffffffffffffff169063d505accf9060e401600060405180830381600087803b1580156110e857600080fd5b505af11580156110fc573d6000803e3d6000fd5b5050505061110a8787612138565b5050600180555050505050565b60026001541415611184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b60026001819055506000600382815481106111a1576111a1612abc565b60009182526020808320858452600482526040808520338652909252908320805460089390930290910160068101805491955091938392916111e4908490612a3d565b90915550506000808355600183015582546112169073ffffffffffffffffffffffffffffffffffffffff163383611a8d565b604080518281526020810186905233917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595910160405180910390a25050600180555050565b600260015414156112c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b600260015560005b8181101561130b576112fb8383838181106112ed576112ed612abc565b905060200201356000611f6c565b61130481612a54565b90506112d0565b50506001805550565b60005473ffffffffffffffffffffffffffffffffffffffff163314611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f860da714d66641e1bb8025e657aa279ec5bbe56385e52a9ee03a12718e5600cb90602001610b92565b60005473ffffffffffffffffffffffffffffffffffffffff163314611489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b61149360006122ae565b565b600081841015806114a557508284115b156114b2575060006114d7565b8183116114ca576114c38484612a3d565b90506114d7565b6114d48483612a3d565b90505b9392505050565b600082815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152812080546001909101546114d7918591611862565b6000610ada8242612323565b6003818154811061153c57600080fd5b60009182526020909120600890910201805460018201546002830154600384015460048501546005860154600687015460079097015473ffffffffffffffffffffffffffffffffffffffff968716985094909516959294919390929088565b60026001541415611608576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b600260015561161681612445565b5060018055565b6002600154141561168a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b6002600155610fb08282612138565b60026001541415611706576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610514565b600260015560035460005b81811015610fb05761172281612445565b61172b81612a54565b9050611711565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610514565b73ffffffffffffffffffffffffffffffffffffffff8116611856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610514565b61185f816122ae565b50565b6000806003858154811061187857611878612abc565b6000918252602080832060408051610100810182526008909402909101805473ffffffffffffffffffffffffffffffffffffffff908116855260018201541684840152600280820154858401526003820154606086015260048201546080860152600582015460a0860152600682015460c086015260079091015460e08501528985528252808420805482518185028101850190935280835293955090929091849084015b828210156119635783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061191d565b50505050905060008260a001519050826080015142118015611988575060c083015115155b15611a5d57608083015160005b8351811015611a5a5760006119c883428785815181106119b7576119b7612abc565b602002602001015160000151611495565b9050806119d55750611a4a565b8482815181106119e7576119e7612abc565b60200260200101516000015192508560c001518660400151868481518110611a1157611a11612abc565b60200260200101516020015183611a289190612a00565b611a329190612a00565b611a3c919061289e565b611a469085612886565b9350505b611a5381612a54565b9050611995565b50505b60408301518590611a6e8389612a00565b611a78919061289e565b611a829190612a3d565b979650505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790529151600092839290871691611b24919061284b565b6000604051808303816000865af19150503d8060008114611b61576040519150601f19603f3d011682016040523d82523d6000602084013e611b66565b606091505b5091509150818015611b90575080511580611b90575080806020019051810190611b9091906126a8565b611bf6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152606401610514565b5050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790529151600092839290881691611c9c919061284b565b6000604051808303816000865af19150503d8060008114611cd9576040519150601f19603f3d011682016040523d82523d6000602084013e611cde565b606091505b5091509150818015611d08575080511580611d08575080806020019051810190611d0891906126a8565b611d6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c65646044820152606401610514565b505050505050565b600082815260026020908152604080832080548251818502810185019093528083528493849084015b82821015611de557838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190611d9f565b50508251929350505080611dfe57600092505050610ada565b60005b81811015611e6557828181518110611e1b57611e1b612abc565b6020026020010151600001518511611e5557828181518110611e3f57611e3f612abc565b6020026020010151602001519350505050610ada565b611e5e81612a54565b9050611e01565b50600095945050505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f313ce5670000000000000000000000000000000000000000000000000000000017905290516000918291829173ffffffffffffffffffffffffffffffffffffffff861691611ef2919061284b565b600060405180830381855afa9150503d8060008114611f2d576040519150601f19603f3d011682016040523d82523d6000602084013e611f32565b606091505b5091509150818015611f45575080516020145b611f50576012611f64565b80806020019051810190611f64919061282e565b949350505050565b600060038381548110611f8157611f81612abc565b600091825260208083208684526004825260408085203386529092529220805460089092029092019250831115612014576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f77697468647261773a3a62616420776974686472617720616d6f756e740000006044820152606401610514565b61201d84612445565b6000816001015483600201548460050154846000015461203d9190612a00565b612047919061289e565b6120519190612a3d565b9050801561207f57600183015461207f9073ffffffffffffffffffffffffffffffffffffffff163383611a8d565b83156120db57838260000160008282546120999190612a3d565b909155505082546120c19073ffffffffffffffffffffffffffffffffffffffff163386611a8d565b838360060160008282546120d59190612a3d565b90915550505b6002830154600584015483546120f19190612a00565b6120fb919061289e565b6001830155604080518581526020810187905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689101610f25565b60006003838154811061214d5761214d612abc565b6000918252602080832086845260048252604080852033865290925292206008909102909101915061217e84612445565b8054156121e957600081600101548360020154846005015484600001546121a59190612a00565b6121af919061289e565b6121b99190612a3d565b905080156121e75760018301546121e79073ffffffffffffffffffffffffffffffffffffffff163383611a8d565b505b82156122485781546122139073ffffffffffffffffffffffffffffffffffffffff16333086611bfd565b828160000160008282546122279190612886565b92505081905550828260060160008282546122429190612886565b90915550505b60028201546005830154825461225e9190612a00565b612268919061289e565b6001820155604080518481526020810186905233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a250505050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082815260026020908152604080832080548251818502810185019093528083528493849084015b828210156123925783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061234c565b505082519293505050806123ab57600092505050610ada565b60005b81811015612412578281815181106123c8576123c8612abc565b6020026020010151600001518511612402578281815181106123ec576123ec612abc565b6020026020010151600001519350505050610ada565b61240b81612a54565b90506123ae565b508161241f600183612a3d565b8151811061242f5761242f612abc565b6020026020010151600001519250505092915050565b60006003828154811061245a5761245a612abc565b60009182526020808320858452600282526040808520805482518186028101860190935280835260089095029092019550929091849084015b828210156124d957838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190612493565b505050509050816004015442116124ef57505050565b6006820154612515576125028342612323565b421115612510574260048301555b505050565b60005b815181101561261057600061253e8460040154428585815181106119b7576119b7612abc565b90508061254b5750612600565b82828151811061255d5761255d612abc565b6020026020010151600001514211156125985782828151811061258257612582612abc565b602090810291909101015151600485015561259f565b4260048501555b836006015484600201548484815181106125bb576125bb612abc565b602002602001015160200151836125d29190612a00565b6125dc9190612a00565b6125e6919061289e565b8460050160008282546125f99190612886565b9091555050505b61260981612a54565b9050612518565b50505050565b60006020828403121561262857600080fd5b81356114d781612aeb565b6000806020838503121561264657600080fd5b823567ffffffffffffffff8082111561265e57600080fd5b818501915085601f83011261267257600080fd5b81358181111561268157600080fd5b8660208260051b850101111561269657600080fd5b60209290920196919550909350505050565b6000602082840312156126ba57600080fd5b815180151581146114d757600080fd5b6000806000606084860312156126df57600080fd5b83356126ea81612aeb565b925060208401356126fa81612aeb565b929592945050506040919091013590565b60006020828403121561271d57600080fd5b5035919050565b6000806040838503121561273757600080fd5b82359150602083013561274981612aeb565b809150509250929050565b6000806040838503121561276757600080fd5b50508035926020909101359150565b60008060006060848603121561278b57600080fd5b833592506020840135915060408401356127a481612aeb565b809150509250925092565b6000806000606084860312156127c457600080fd5b505081359360208301359350604090920135919050565b60008060008060008060c087890312156127f457600080fd5b863595506020870135945060408701359350606087013561281481612b0d565b9598949750929560808101359460a0909101359350915050565b60006020828403121561284057600080fd5b81516114d781612b0d565b6000825160005b8181101561286c5760208186018101518583015201612852565b8181111561287b576000828501525b509190910192915050565b6000821982111561289957612899612a8d565b500190565b6000826128d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600181815b8085111561293257817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561291857612918612a8d565b8085161561292557918102915b93841c93908002906128de565b509250929050565b60006114d7838360008261295057506001610ada565b8161295d57506000610ada565b8160018114612973576002811461297d57612999565b6001915050610ada565b60ff84111561298e5761298e612a8d565b50506001821b610ada565b5060208310610133831016604e8410600b84101617156129bc575081810a610ada565b6129c683836128d9565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156129f8576129f8612a8d565b029392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a3857612a38612a8d565b500290565b600082821015612a4f57612a4f612a8d565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612a8657612a86612a8d565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461185f57600080fd5b60ff8116811461185f57600080fdfea264697066735822122014b9146c3c7bf0e76c07837e7aed02bf4d6804c8ed65fdf1aafc171e1c41f6aa64736f6c63430008070033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1AD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5D14B06F GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x98969E82 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCEF7042D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCEF7042D EQ PUSH2 0x41A JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0xEEBDCED5 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x98969E82 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x9E494BEE EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0xBB2238EC EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BAFB029 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x7BAFB029 EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D14B06F EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x6806CC93 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x409E00FC GT PUSH2 0x15B JUMPI DUP1 PUSH4 0x4AE56BAE GT PUSH2 0x135 JUMPI DUP1 PUSH4 0x4AE56BAE EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x515BC323 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x569C93D2 EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x409E00FC EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x4AD7CE80 EQ PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EA807C5 GT PUSH2 0x18C JUMPI DUP1 PUSH4 0x2EA807C5 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x32215C42 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x33824B87 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xD74850 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x10F7A6AF EQ PUSH2 0x1CE JUMPI DUP1 PUSH4 0x1D123131 EQ PUSH2 0x1F6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BB PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2754 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0xACE JUMP JUMPDEST PUSH2 0x209 PUSH2 0x23F CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0xAE0 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x26CA JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x209 PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x2754 JUMP JUMPDEST PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1BB JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x27DB JUMP JUMPDEST PUSH2 0xFB8 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0x1117 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x2D8 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x30B CALLDATASIZE PUSH1 0x4 PUSH2 0x2633 JUMP JUMPDEST PUSH2 0x125B JUMP JUMPDEST PUSH2 0x209 PUSH2 0x31E CALLDATASIZE PUSH1 0x4 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x1314 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x27AF JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2D8 JUMP JUMPDEST PUSH2 0x1E1 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x2724 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x2724 JUMP JUMPDEST PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0x1520 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0x152C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 DUP11 AND DUP2 MSTORE SWAP9 SWAP1 SWAP8 AND PUSH1 0x20 DUP10 ADD MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x270B JUMP JUMPDEST PUSH2 0x159B JUMP JUMPDEST PUSH2 0x209 PUSH2 0x43B CALLDATASIZE PUSH1 0x4 PUSH2 0x2754 JUMP JUMPDEST PUSH2 0x161D JUMP JUMPDEST PUSH2 0x209 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x2616 JUMP JUMPDEST PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP3 POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x5A7 JUMPI PUSH2 0x5A7 PUSH2 0x2ABC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0x5C9 DUP6 DUP4 PUSH1 0x6 ADD SLOAD PUSH1 0x0 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x7 DUP4 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x5DB DUP6 DUP4 PUSH2 0x2886 JUMP JUMPDEST GT ISZERO PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x656D657267656E637952657761726457697468647261773A3A6E6F7420656E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7567682072657761726420746F6B656E00000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST DUP4 DUP3 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0x6A8 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH2 0x1A8D JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP3 SWAP2 DUP7 SWAP1 DUP2 LT PUSH2 0x759 JUMPI PUSH2 0x759 PUSH2 0x2ABC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD SWAP1 POP PUSH1 0x5 SLOAD DUP3 DUP1 SLOAD SWAP1 POP LT PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616464526577617264496E666F3A3A72657761726420696E666F206C656E6774 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x68206578636565647320746865206C696D697400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST DUP2 SLOAD ISZERO DUP1 PUSH2 0x83E JUMPI POP DUP2 SLOAD TIMESTAMP SWAP1 DUP4 SWAP1 PUSH2 0x819 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x829 JUMPI PUSH2 0x829 PUSH2 0x2ABC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD LT ISZERO JUMPDEST PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616464526577617264496E666F3A3A72657761726420706572696F6420656E64 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST DUP2 SLOAD ISZERO DUP1 PUSH2 0x909 JUMPI POP DUP2 SLOAD DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x8E5 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x8F5 JUMPI PUSH2 0x8F5 PUSH2 0x2ABC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD LT JUMPDEST PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x616464526577617264496E666F3A3A626164206E657720656E6454696D657374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616D700000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x9D6 JUMPI DUP3 SLOAD DUP4 SWAP1 PUSH2 0x9AF SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x9BF JUMPI PUSH2 0x9BF PUSH2 0x2ABC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x9DC JUMP JUMPDEST DUP2 PUSH1 0x3 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9EA DUP3 DUP8 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9F8 DUP3 DUP8 PUSH2 0x2A00 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 DUP7 ADD SLOAD SWAP2 SWAP3 POP PUSH2 0xA28 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 AND ADDRESS DUP5 PUSH2 0x1BFD JUMP JUMPDEST DUP1 DUP5 PUSH1 0x7 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE DUP8 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP9 DUP2 MSTORE DUP8 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP11 SSTORE PUSH1 0x0 DUP11 DUP2 MSTORE SWAP4 SWAP1 SWAP4 KECCAK256 SWAP4 MLOAD PUSH1 0x2 SWAP1 SWAP2 MUL SWAP1 SWAP4 ADD SWAP3 DUP4 SSTORE MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP6 SLOAD PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP10 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE DUP11 SWAP2 PUSH32 0xAD90731BD0D97445F5AF66088F3ADEBF343C520C20E033CC42F93B124258CDC2 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP3 TIMESTAMP PUSH2 0x1D76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xB64F58843E750A8BEA7135EF396CF0A7790BFC9A8F43F11AC0E0AACC1B5787BA SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3F DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x1E DUP2 LT PUSH2 0xCD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E7374727563746F723A2072657761726420746F6B656E20646563696D61 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C73206D75737420626520696E666572696F7220746F20333000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE1 DUP3 PUSH1 0x1E PUSH2 0x2A3D JUMP JUMPDEST PUSH2 0xCEC SWAP1 PUSH1 0xA PUSH2 0x293A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND DUP3 MSTORE DUP8 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP3 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP9 DUP2 MSTORE PUSH1 0x80 DUP5 ADD DUP10 DUP2 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP8 ADD DUP3 DUP2 MSTORE PUSH1 0xE0 DUP9 ADD DUP4 DUP2 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP6 DUP3 SWAP1 MSTORE SWAP10 MLOAD PUSH1 0x8 SWAP1 SWAP11 MUL PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B DUP2 ADD DUP1 SLOAD SWAP12 DUP12 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP13 DUP14 AND OR SWAP1 SSTORE SWAP11 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85C DUP13 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP11 AND SWAP11 AND SWAP10 SWAP1 SWAP10 OR SWAP1 SWAP8 SSTORE SWAP5 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85D DUP10 ADD SSTORE SWAP3 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85E DUP9 ADD SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85F DUP8 ADD SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F860 DUP7 ADD SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F861 DUP6 ADD SSTORE SWAP1 MLOAD PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F862 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE SLOAD SWAP2 SWAP3 POP PUSH2 0xED4 SWAP2 PUSH2 0x2A3D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP10 AND DUP3 MSTORE DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x9B2F18F9A188A5AEC4A95EE3164FE234DFBB6117628B2AD1A581939E61C69F4E SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xFA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xFB0 DUP3 DUP3 PUSH2 0x1F6C JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1025 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1042 JUMPI PUSH2 0x1042 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0xFF DUP8 AND PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xC4 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH1 0xE4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x110A DUP8 DUP8 PUSH2 0x2138 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1184 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11A1 JUMPI PUSH2 0x11A1 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x8 SWAP4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD PUSH1 0x6 DUP2 ADD DUP1 SLOAD SWAP2 SWAP6 POP SWAP2 SWAP4 DUP4 SWAP3 SWAP2 PUSH2 0x11E4 SWAP1 DUP5 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 SSTORE PUSH1 0x1 DUP4 ADD SSTORE DUP3 SLOAD PUSH2 0x1216 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 DUP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x130B JUMPI PUSH2 0x12FB DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x12ED JUMPI PUSH2 0x12ED PUSH2 0x2ABC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x0 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x1304 DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x12D0 JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1395 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x860DA714D66641E1BB8025E657AA279EC5BBE56385E52A9EE03A12718E5600CB SWAP1 PUSH1 0x20 ADD PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1489 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0x1493 PUSH1 0x0 PUSH2 0x22AE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 LT ISZERO DUP1 PUSH2 0x14A5 JUMPI POP DUP3 DUP5 GT JUMPDEST ISZERO PUSH2 0x14B2 JUMPI POP PUSH1 0x0 PUSH2 0x14D7 JUMP JUMPDEST DUP2 DUP4 GT PUSH2 0x14CA JUMPI PUSH2 0x14C3 DUP5 DUP5 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x14D4 DUP5 DUP4 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH2 0x14D7 SWAP2 DUP6 SWAP2 PUSH2 0x1862 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADA DUP3 TIMESTAMP PUSH2 0x2323 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x153C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0x7 SWAP1 SWAP8 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND SWAP9 POP SWAP5 SWAP1 SWAP6 AND SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 DUP9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1608 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1616 DUP2 PUSH2 0x2445 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x168A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xFB0 DUP3 DUP3 PUSH2 0x2138 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFB0 JUMPI PUSH2 0x1722 DUP2 PUSH2 0x2445 JUMP JUMPDEST PUSH2 0x172B DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x17B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0x185F DUP2 PUSH2 0x22AE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1878 JUMPI PUSH2 0x1878 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x8 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND DUP5 DUP5 ADD MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 DUP5 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x7 SWAP1 SWAP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE DUP10 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP4 SWAP6 POP SWAP1 SWAP3 SWAP1 SWAP2 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1963 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x191D JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xA0 ADD MLOAD SWAP1 POP DUP3 PUSH1 0x80 ADD MLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x1988 JUMPI POP PUSH1 0xC0 DUP4 ADD MLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1A5D JUMPI PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1A5A JUMPI PUSH1 0x0 PUSH2 0x19C8 DUP4 TIMESTAMP DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19B7 JUMPI PUSH2 0x19B7 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH2 0x1495 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x19D5 JUMPI POP PUSH2 0x1A4A JUMP JUMPDEST DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19E7 JUMPI PUSH2 0x19E7 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP3 POP DUP6 PUSH1 0xC0 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1A11 JUMPI PUSH2 0x1A11 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x1A28 SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x1A32 SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x1A3C SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH2 0x1A46 SWAP1 DUP6 PUSH2 0x2886 JUMP JUMPDEST SWAP4 POP POP JUMPDEST PUSH2 0x1A53 DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x1995 JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD DUP6 SWAP1 PUSH2 0x1A6E DUP4 DUP10 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x1A78 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH2 0x1A82 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1B24 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1B61 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B66 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1B90 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1B90 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1B90 SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x1BF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F72696E6745524332303A205472616E73666572206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x1C9C SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1CD9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1D08 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1D08 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D08 SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH2 0x1D6E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F72696E6745524332303A205472616E7366657246726F6D206661696C6564 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1DE5 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D9F JUMP JUMPDEST POP POP DUP3 MLOAD SWAP3 SWAP4 POP POP POP DUP1 PUSH2 0x1DFE JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E65 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E1B JUMPI PUSH2 0x1E1B PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP6 GT PUSH2 0x1E55 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E3F JUMPI PUSH2 0x1E3F PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP4 POP POP POP POP PUSH2 0xADA JUMP JUMPDEST PUSH2 0x1E5E DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E01 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x313CE56700000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP2 PUSH2 0x1EF2 SWAP2 SWAP1 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F2D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F32 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1F45 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST PUSH2 0x1F50 JUMPI PUSH1 0x12 PUSH2 0x1F64 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1F64 SWAP2 SWAP1 PUSH2 0x282E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1F81 JUMPI PUSH2 0x1F81 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x8 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x2014 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261773A3A62616420776974686472617720616D6F756E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x514 JUMP JUMPDEST PUSH2 0x201D DUP5 PUSH2 0x2445 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x203D SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x2047 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH2 0x2051 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x207F JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x207F SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x1A8D JUMP JUMPDEST DUP4 ISZERO PUSH2 0x20DB JUMPI DUP4 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2099 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 SLOAD PUSH2 0x20C1 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP7 PUSH2 0x1A8D JUMP JUMPDEST DUP4 DUP4 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x20D5 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD DUP4 SLOAD PUSH2 0x20F1 SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x20FB SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 ADD PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x214D JUMPI PUSH2 0x214D PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x8 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x217E DUP5 PUSH2 0x2445 JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x21E9 JUMPI PUSH1 0x0 DUP2 PUSH1 0x1 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x5 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x21A5 SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x21AF SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH2 0x21B9 SWAP2 SWAP1 PUSH2 0x2A3D JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x21E7 JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x21E7 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH2 0x1A8D JUMP JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0x2248 JUMPI DUP2 SLOAD PUSH2 0x2213 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER ADDRESS DUP7 PUSH2 0x1BFD JUMP JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2227 SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x6 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2242 SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD DUP3 SLOAD PUSH2 0x225E SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x2268 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x2392 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x234C JUMP JUMPDEST POP POP DUP3 MLOAD SWAP3 SWAP4 POP POP POP DUP1 PUSH2 0x23AB JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2412 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x23C8 JUMPI PUSH2 0x23C8 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP6 GT PUSH2 0x2402 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x23EC JUMPI PUSH2 0x23EC PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP4 POP POP POP POP PUSH2 0xADA JUMP JUMPDEST PUSH2 0x240B DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x23AE JUMP JUMPDEST POP DUP2 PUSH2 0x241F PUSH1 0x1 DUP4 PUSH2 0x2A3D JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x242F JUMPI PUSH2 0x242F PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x245A JUMPI PUSH2 0x245A PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x8 SWAP1 SWAP6 MUL SWAP1 SWAP3 ADD SWAP6 POP SWAP3 SWAP1 SWAP2 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x24D9 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2493 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP2 PUSH1 0x4 ADD SLOAD TIMESTAMP GT PUSH2 0x24EF JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SLOAD PUSH2 0x2515 JUMPI PUSH2 0x2502 DUP4 TIMESTAMP PUSH2 0x2323 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x2510 JUMPI TIMESTAMP PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2610 JUMPI PUSH1 0x0 PUSH2 0x253E DUP5 PUSH1 0x4 ADD SLOAD TIMESTAMP DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19B7 JUMPI PUSH2 0x19B7 PUSH2 0x2ABC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x254B JUMPI POP PUSH2 0x2600 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x255D JUMPI PUSH2 0x255D PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD TIMESTAMP GT ISZERO PUSH2 0x2598 JUMPI DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2582 JUMPI PUSH2 0x2582 PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x259F JUMP JUMPDEST TIMESTAMP PUSH1 0x4 DUP6 ADD SSTORE JUMPDEST DUP4 PUSH1 0x6 ADD SLOAD DUP5 PUSH1 0x2 ADD SLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x25BB JUMPI PUSH2 0x25BB PUSH2 0x2ABC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 PUSH2 0x25D2 SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x25DC SWAP2 SWAP1 PUSH2 0x2A00 JUMP JUMPDEST PUSH2 0x25E6 SWAP2 SWAP1 PUSH2 0x289E JUMP JUMPDEST DUP5 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x25F9 SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP JUMPDEST PUSH2 0x2609 DUP2 PUSH2 0x2A54 JUMP JUMPDEST SWAP1 POP PUSH2 0x2518 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D7 DUP2 PUSH2 0x2AEB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2646 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x265E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x14D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x26EA DUP2 PUSH2 0x2AEB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x26FA DUP2 PUSH2 0x2AEB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x271D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2737 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2749 DUP2 PUSH2 0x2AEB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x278B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x27A4 DUP2 PUSH2 0x2AEB JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x27C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x27F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x2814 DUP2 PUSH2 0x2B0D JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2840 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x14D7 DUP2 PUSH2 0x2B0D JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x286C JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x2852 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x287B JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2899 JUMPI PUSH2 0x2899 PUSH2 0x2A8D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28D4 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2932 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x2918 JUMPI PUSH2 0x2918 PUSH2 0x2A8D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2925 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x28DE JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D7 DUP4 DUP4 PUSH1 0x0 DUP3 PUSH2 0x2950 JUMPI POP PUSH1 0x1 PUSH2 0xADA JUMP JUMPDEST DUP2 PUSH2 0x295D JUMPI POP PUSH1 0x0 PUSH2 0xADA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2973 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x297D JUMPI PUSH2 0x2999 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xADA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x298E JUMPI PUSH2 0x298E PUSH2 0x2A8D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xADA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x29BC JUMPI POP DUP2 DUP2 EXP PUSH2 0xADA JUMP JUMPDEST PUSH2 0x29C6 DUP4 DUP4 PUSH2 0x28D9 JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x29F8 JUMPI PUSH2 0x29F8 PUSH2 0x2A8D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A38 JUMPI PUSH2 0x2A38 PUSH2 0x2A8D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2A4F JUMPI PUSH2 0x2A4F PUSH2 0x2A8D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2A86 JUMPI PUSH2 0x2A86 PUSH2 0x2A8D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x185F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x185F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0xB9 EQ PUSH13 0x3C7BF0E76C07837E7AED02BF4D PUSH9 0x4C8ED65FDF1AAFC17 0x1E SHR COINBASE 0xF6 0xAA PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
              "sourceMap": "10722:17396:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12387:30;;;;;;;;;11710:25:1;;;11698:2;11683:18;12387:30:0;;;;;;;;12018:58;;;;;;:::i;:::-;;:::i;:::-;;;;11920:25:1;;;11976:2;11961:18;;11954:34;;;;11893:18;12018:58:0;11746:248:1;27466:650:0;;;;;;:::i;:::-;;:::i;:::-;;15147:1615;;;;;;:::i;:::-;;:::i;18080:179::-;;;;;;:::i;:::-;;:::i;13631:208::-;;;;;;:::i;:::-;;:::i;13984:1028::-;;;;;;:::i;:::-;;:::i;25353:146::-;;;;;;:::i;:::-;;:::i;16940:102::-;17016:12;:19;16940:102;;16768:166;;;;;;:::i;:::-;16859:7;16889:31;;;:18;:31;;;;;:38;;16768:166;23559:491;;;;;;:::i;:::-;;:::i;26927:485::-;;;;;;:::i;:::-;;:::i;12457:27::-;;;;;;;;;;;;4586:42:1;4574:55;;;4556:74;;4544:2;4529:18;12457:27:0;4410:226:1;26659:192:0;;;;;;:::i;:::-;;:::i;13427:157::-;;;;;;:::i;:::-;;:::i;5139:92::-;;;:::i;18964:346::-;;;;;;:::i;:::-;;:::i;4507:85::-;4553:7;4579:6;;;4507:85;;12238:64;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19380:322;;;;;;:::i;:::-;;:::i;17129:179::-;;;;;;:::i;:::-;;:::i;12145:34::-;;;;;;:::i;:::-;;:::i;:::-;;;;6880:42:1;6949:15;;;6931:34;;7001:15;;;;6996:2;6981:18;;6974:43;7033:18;;;7026:34;;;;7091:2;7076:18;;7069:34;;;;7134:3;7119:19;;7112:35;7178:3;7163:19;;7156:35;7222:3;7207:19;;7200:35;7266:3;7251:19;;7244:35;6857:3;6842:19;12145:34:0;6487:798:1;20908:112:0;;;;;;:::i;:::-;;:::i;24105:144::-;;;;;;:::i;:::-;;:::i;23350:203::-;;;:::i;5380:189::-;;;;;;:::i;:::-;;:::i;12018:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12018:58:0;-1:-1:-1;12018:58:0;:::o;27466:650::-;4553:7;4579:6;4719:23;4579:6;3415:10;4719:23;4711:68;;;;;;;9503:2:1;4711:68:0;;;9485:21:1;;;9522:18;;;9515:30;9581:34;9561:18;;;9554:62;9633:18;;4711:68:0;;;;;;;;;1811:1:::1;2390:7;;:19;;2382:63;;;::::0;::::1;::::0;;10986:2:1;2382:63:0::1;::::0;::::1;10968:21:1::0;11025:2;11005:18;;;10998:30;11064:33;11044:18;;;11037:61;11115:18;;2382:63:0::1;10784:355:1::0;2382:63:0::1;1811:1;2520:7;:18;;;;27631:29:::2;27663:12;27676:11;27663:25;;;;;;;;:::i;:::-;;;;;;;;;;;27631:57;;27698:35;27736:98;27764:11;27789:8;:20;;;27823:1;27736:14;:98::i;:::-;27906:21;::::0;::::2;::::0;27698:136;;-1:-1:-1;27865:37:0::2;27895:7:::0;27698:136;27865:37:::2;:::i;:::-;:62;;27844:157;;;::::0;::::2;::::0;;9086:2:1;27844:157:0::2;::::0;::::2;9068:21:1::0;9125:2;9105:18;;;9098:30;9164:34;9144:18;;;9137:62;9235:18;9215;;;9208:46;9271:19;;27844:157:0::2;8884:412:1::0;27844:157:0::2;28036:7;28011:8;:21;;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;28053:20:0::2;::::0;::::2;::::0;:56:::2;::::0;:20:::2;;28087:12:::0;28101:7;28053:33:::2;:56::i;:::-;-1:-1:-1::0;;1768:1:0::1;2693:22:::0;;-1:-1:-1;;;27466:650:0:o;15147:1615::-;4553:7;4579:6;4719:23;4579:6;3415:10;4719:23;4711:68;;;;;;;9503:2:1;4711:68:0;;;9485:21:1;;;9522:18;;;9515:30;9581:34;9561:18;;;9554:62;9633:18;;4711:68:0;9301:356:1;4711:68:0;15296:31:::1;15330::::0;;;:18:::1;:31;::::0;;;;15403:12:::1;:25:::0;;15330:31;;15296;15349:11;;15403:25;::::1;;;;;:::i;:::-;;;;;;;;;;;15371:57;;15479:15;;15459:10;:17;;;;:35;15438:133;;;::::0;::::1;::::0;;11346:2:1;15438:133:0::1;::::0;::::1;11328:21:1::0;11385:2;11365:18;;;11358:30;11424:34;11404:18;;;11397:62;11495:21;11475:18;;;11468:49;11534:19;;15438:133:0::1;11144:415:1::0;15438:133:0::1;15602:17:::0;;:22;;:123:::1;;-1:-1:-1::0;15655:17:0;;15710:15:::1;::::0;15644:10;;15655:21:::1;::::0;15675:1:::1;::::0;15655:21:::1;:::i;:::-;15644:33;;;;;;;;:::i;:::-;;;;;;;;;;;:46;;;:81;;15602:123;15581:204;;;::::0;::::1;::::0;;10583:2:1;15581:204:0::1;::::0;::::1;10565:21:1::0;10622:2;10602:18;;;10595:30;10661:34;10641:18;;;10634:62;10732:4;10712:18;;;10705:32;10754:19;;15581:204:0::1;10381:398:1::0;15581:204:0::1;15816:17:::0;;:22;;:104:::1;;-1:-1:-1::0;15869:17:0;;15907:13;;15858:10;;15869:21:::1;::::0;15889:1:::1;::::0;15869:21:::1;:::i;:::-;15858:33;;;;;;;;:::i;:::-;;;;;;;;;;;:46;;;:62;15816:104;15795:186;;;::::0;::::1;::::0;;8682:2:1;15795:186:0::1;::::0;::::1;8664:21:1::0;8721:2;8701:18;;;8694:30;8760:34;8740:18;;;8733:62;8831:5;8811:18;;;8804:33;8854:19;;15795:186:0::1;8480:399:1::0;15795:186:0::1;16016:17:::0;;15991:22:::1;::::0;16016;:121:::1;;16102:17:::0;;16091:10;;16102:21:::1;::::0;16122:1:::1;::::0;16102:21:::1;:::i;:::-;16091:33;;;;;;;;:::i;:::-;;;;;;;;;;;:46;;;16016:121;;;16053:8;:23;;;16016:121;15991:146:::0;-1:-1:-1;16147:17:0::1;16167:30;15991:146:::0;16167:13;:30:::1;:::i;:::-;16147:50:::0;-1:-1:-1;16207:20:0::1;16230:25;16147:50:::0;16230:13;:25:::1;:::i;:::-;16316:12;::::0;;16265:20;::::1;::::0;16207:48;;-1:-1:-1;16265:126:0::1;::::0;16316:12:::1;16265:20:::0;;::::1;::::0;16316:12:::1;16350:4;16207:48:::0;16265:37:::1;:126::i;:::-;16426:12;16401:8;:21;;;:37;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;16477:116:0::1;::::0;;;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;16448:155;;::::1;::::0;;::::1;::::0;;-1:-1:-1;16448:155:0;;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;;16670:17;;:21:::1;::::0;16448:155;16670:21:::1;:::i;:::-;16618:137;::::0;;11920:25:1;;;11976:2;11961:18;;11954:34;;;16645:11:0;;16618:137:::1;::::0;11893:18:1;16618:137:0::1;;;;;;;15286:1476;;;;;15147:1615:::0;;;:::o;18080:179::-;18177:7;18207:45;18223:11;18236:15;18207;:45::i;:::-;18200:52;18080:179;-1:-1:-1;;18080:179:0:o;13631:208::-;4553:7;4579:6;4719:23;4579:6;3415:10;4719:23;4711:68;;;;;;;9503:2:1;4711:68:0;;;9485:21:1;;;9522:18;;;9515:30;9581:34;9561:18;;;9554:62;9633:18;;4711:68:0;9301:356:1;4711:68:0;13741:15:::1;:41:::0;;;13797:35:::1;::::0;11710:25:1;;;13797:35:0::1;::::0;11698:2:1;11683:18;13797:35:0::1;;;;;;;;13631:208:::0;:::o;13984:1028::-;4553:7;4579:6;4719:23;4579:6;3415:10;4719:23;4711:68;;;;;;;9503:2:1;4711:68:0;;;9485:21:1;;;9522:18;;;9515:30;9581:34;9561:18;;;9554:62;9633:18;;4711:68:0;9301:356:1;4711:68:0;14148:27:::1;14186;:12;:25;;;:27::i;:::-;14178:36;;14148:66;;14268:2;14246:19;:24;14225:128;;;::::0;::::1;::::0;;7492:2:1;14225:128:0::1;::::0;::::1;7474:21:1::0;7531:2;7511:18;;;7504:30;7570:34;7550:18;;;7543:62;7641:27;7621:18;;;7614:55;7686:19;;14225:128:0::1;7290:421:1::0;14225:128:0::1;14364:17;14397:35;14412:19:::0;14405:2:::1;14397:35;:::i;:::-;14392:41;::::0;:2:::1;:41;:::i;:::-;14476:360;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14476:360:0;;;;;;;;;;;;;;;;;;14445:12:::1;:401:::0;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;::::1;;::::0;;;;;;;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14890:19;14364:70;;-1:-1:-1;14890:23:0::1;::::0;::::1;:::i;:::-;14861:144;::::0;;4853:42:1;4922:15;;;4904:34;;4974:15;;4969:2;4954:18;;4947:43;5006:18;;;4999:34;;;14861:144:0::1;::::0;4831:2:1;4816:18;14861:144:0::1;;;;;;;;14138:874;;13984:1028:::0;;;:::o;25353:146::-;1811:1;2390:7;;:19;;2382:63;;;;;;;10986:2:1;2382:63:0;;;10968:21:1;11025:2;11005:18;;;10998:30;11064:33;11044:18;;;11037:61;11115:18;;2382:63:0;10784:355:1;2382:63:0;1811:1;2520:7;:18;25461:31:::1;25471:11:::0;25484:7;25461:9:::1;:31::i;:::-;-1:-1:-1::0;;1768:1:0;2693:22;;25353:146::o;23559:491::-;1811:1;2390:7;;:19;;2382:63;;;;;;;10986:2:1;2382:63:0;;;10968:21:1;11025:2;11005:18;;;10998:30;11064:33;11044:18;;;11037:61;11115:18;;2382:63:0;10784:355:1;2382:63:0;1811:1;2520:7;:18;;;;23759:29:::1;23791:12;23804:11;23791:25;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;23826:21:::0;;:177:::1;::::0;;;;23868:10:::1;23826:177;::::0;::::1;5416:34:1::0;23900:4:0::1;5466:18:1::0;;;5459:43;5518:18;;;5511:34;;;5561:18;;;5554:34;;;5637:4;5625:17;;5604:19;;;5597:46;5659:19;;;5652:35;;;5703:19;;;5696:35;;;23791:25:0;;-1:-1:-1;23826:21:0::1;;::::0;:28:::1;::::0;5327:19:1;;23826:177:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;24013:30;24022:11;24035:7;24013:8;:30::i;:::-;-1:-1:-1::0;;1768:1:0;2693:22;;-1:-1:-1;;;;;23559:491:0:o;26927:485::-;1811:1;2390:7;;:19;;2382:63;;;;;;;10986:2:1;2382:63:0;;;10968:21:1;11025:2;11005:18;;;10998:30;11064:33;11044:18;;;11037:61;11115:18;;2382:63:0;10784:355:1;2382:63:0;1811:1;2520:7;:18;;;;27007:29:::1;27039:12;27052:11;27039:25;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;27098:21;;;:8:::1;:21:::0;;;;;;27120:10:::1;27098:33:::0;;;;;;;;27159:11;;27039:25:::1;::::0;;;::::1;::::0;;::::1;27180:20;::::0;::::1;:31:::0;;27039:25;;-1:-1:-1;27098:33:0;;27159:11;;27180:20;:31:::1;::::0;27159:11;;27180:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;27235:1:0::1;27221:15:::0;;;27246::::1;::::0;::::1;:19:::0;27275:21;;:64:::1;::::0;:21:::1;;27318:10;27331:7:::0;27275:34:::1;:64::i;:::-;27354:51;::::0;;11920:25:1;;;11976:2;11961:18;;11954:34;;;27372:10:0::1;::::0;27354:51:::1;::::0;11893:18:1;27354:51:0::1;;;;;;;-1:-1:-1::0;;1768:1:0;2693:22;;-1:-1:-1;;26927:485:0:o;26659:192::-;1811:1;2390:7;;:19;;2382:63;;;;;;;10986:2:1;2382:63:0;;;10968:21:1;11025:2;11005:18;;;10998:30;11064:33;11044:18;;;11037:61;11115:18;;2382:63:0;10784:355:1;2382:63:0;1811:1;2520:7;:18;26746:9:::1;26741:104;26761:23:::0;;::::1;26741:104;;;26805:29;26815:12;;26828:1;26815:15;;;;;;;:::i;:::-;;;;;;;26832:1;26805:9;:29::i;:::-;26786:3;::::0;::::1;:::i;:::-;;;26741:104;;;-1:-1:-1::0;;1768:1:0;2693:22;;-1:-1:-1;26659:192:0:o;13427:157::-;4553:7;4579:6;4719:23;4579:6;3415:10;4719:23;4711:68;;;;;;;9503:2:1;4711:68:0;;;9485:21:1;;;9522:18;;;9515:30;9581:34;9561:18;;;9554:62;9633:18;;4711:68:0;9301:356:1;4711:68:0;13504:12:::1;:28:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;13547:30:::1;::::0;4556:74:1;;;13547:30:0::1;::::0;4544:2:1;4529:18;13547:30:0::1;4410:226:1::0;5139:92:0;4553:7;4579:6;4719:23;4579:6;3415:10;4719:23;4711:68;;;;;;;9503:2:1;4711:68:0;;;9485:21:1;;;9522:18;;;9515:30;9581:34;9561:18;;;9554:62;9633:18;;4711:68:0;9301:356:1;4711:68:0;5203:21:::1;5221:1;5203:9;:21::i;:::-;5139:92::o:0;18964:346::-;19089:7;19122:13;19113:5;:22;;19112:41;;;;19149:3;19141:5;:11;19112:41;19108:80;;;-1:-1:-1;19176:1:0;19169:8;;19108:80;19208:13;19201:3;:20;19197:69;;19244:11;19250:5;19244:3;:11;:::i;:::-;19237:18;;;;19197:69;19282:21;19298:5;19282:13;:21;:::i;:::-;19275:28;;18964:346;;;;;;:::o;19380:322::-;19486:7;19589:21;;;:8;:21;;;;;;;;:28;;;;;;;;;;:35;;19642:39;;;;;19528:167;;19589:21;;19528:14;:167::i;17129:179::-;17226:7;17256:45;17272:11;17285:15;17256;:45::i;12145:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12145:34:0;;;;;;;;;;;;;:::o;20908:112::-;1811:1;2390:7;;:19;;2382:63;;;;;;;10986:2:1;2382:63:0;;;10968:21:1;11025:2;11005:18;;;10998:30;11064:33;11044:18;;;11037:61;11115:18;;2382:63:0;10784:355:1;2382:63:0;1811:1;2520:7;:18;20985:28:::1;21001:11:::0;20985:15:::1;:28::i;:::-;-1:-1:-1::0;1768:1:0;2693:22;;20908:112::o;24105:144::-;1811:1;2390:7;;:19;;2382:63;;;;;;;10986:2:1;2382:63:0;;;10968:21:1;11025:2;11005:18;;;10998:30;11064:33;11044:18;;;11037:61;11115:18;;2382:63:0;10784:355:1;2382:63:0;1811:1;2520:7;:18;24212:30:::1;24221:11:::0;24234:7;24212:8:::1;:30::i;23350:203::-:0;1811:1;2390:7;;:19;;2382:63;;;;;;;10986:2:1;2382:63:0;;;10968:21:1;11025:2;11005:18;;;10998:30;11064:33;11044:18;;;11037:61;11115:18;;2382:63:0;10784:355:1;2382:63:0;1811:1;2520:7;:18;23430:12:::1;:19:::0;23413:14:::1;23459:88;23487:6;23481:3;:12;23459:88;;;23516:20;23532:3;23516:15;:20::i;:::-;23495:5;::::0;::::1;:::i;:::-;;;23459:88;;5380:189:::0;4553:7;4579:6;4719:23;4579:6;3415:10;4719:23;4711:68;;;;;;;9503:2:1;4711:68:0;;;9485:21:1;;;9522:18;;;9515:30;9581:34;9561:18;;;9554:62;9633:18;;4711:68:0;9301:356:1;4711:68:0;5468:22:::1;::::0;::::1;5460:73;;;::::0;::::1;::::0;;8275:2:1;5460:73:0::1;::::0;::::1;8257:21:1::0;8314:2;8294:18;;;8287:30;8353:34;8333:18;;;8326:62;8424:8;8404:18;;;8397:36;8450:19;;5460:73:0::1;8073:402:1::0;5460:73:0::1;5543:19;5553:8;5543:9;:19::i;:::-;5380:189:::0;:::o;19708:1194::-;19844:7;19863:28;19894:12;19907:11;19894:25;;;;;;;;:::i;:::-;;;;;;;;;19863:56;;;;;;;;19894:25;;;;;;;19863:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19962:31;;;;;;;;19929:64;;;;;;;;;;;;;;;;;19863:56;;-1:-1:-1;19929:64:0;;19962:31;;19894:25;;19929:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20003:25;20031:8;:26;;;20003:54;;20102:8;:28;;;20084:15;:46;:87;;;;-1:-1:-1;20146:20:0;;;;:25;;20084:87;20067:734;;;20213:28;;;;20196:14;20255:536;20279:10;:17;20275:1;:21;20255:536;;;20321:18;20342:144;20377:6;20405:15;20442:10;20453:1;20442:13;;;;;;;;:::i;:::-;;;;;;;:26;;;20342:13;:144::i;:::-;20321:165;-1:-1:-1;20508:15:0;20504:29;;20525:8;;;20504:29;20560:10;20571:1;20560:13;;;;;;;;:::i;:::-;;;;;;;:26;;;20551:35;;20756:8;:20;;;20714:8;:18;;;20660:10;20671:1;20660:13;;;;;;;;:::i;:::-;;;;;;;:26;;;20647:10;:39;;;;:::i;:::-;20646:86;;;;:::i;:::-;20645:131;;;;:::i;:::-;20604:172;;;;:::i;:::-;;;20303:488;20255:536;20298:3;;;:::i;:::-;;;20255:536;;;;20182:619;20067:734;20862:18;;;;20884:11;;20831:27;20841:17;20831:7;:27;:::i;:::-;20830:50;;;;:::i;:::-;20829:66;;;;:::i;:::-;20810:85;19708:1194;-1:-1:-1;;;;;;;19708:1194:0:o;9507:395::-;9695:48;;;9662:19;5934:55:1;;;9695:48:0;;;5916:74:1;6006:18;;;;5999:34;;;9695:48:0;;;;;;;;;;5889:18:1;;;;9695:48:0;;;;;;;;;9718:12;9695:48;;;9662:91;;-1:-1:-1;;;;9662:19:0;;;;:91;;9695:48;9662:91;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9626:127;;;;9784:7;:57;;;;-1:-1:-1;9796:11:0;;:16;;:44;;;9827:4;9816:24;;;;;;;;;;;;:::i;:::-;9763:132;;;;;;;7918:2:1;9763:132:0;;;7900:21:1;7957:2;7937:18;;;7930:30;7996;7976:18;;;7969:58;8044:18;;9763:132:0;7716:352:1;9763:132:0;9616:286;;9507:395;;;:::o;10217:436::-;10431:59;;;10398:19;4922:15:1;;;10431:59:0;;;4904:34:1;4974:15;;;4954:18;;;4947:43;5006:18;;;;4999:34;;;10431:59:0;;;;;;;;;;4816:18:1;;;;10431:59:0;;;;;;;;;10454:17;10431:59;;;10398:102;;-1:-1:-1;;;;10398:19:0;;;;:102;;10431:59;10398:102;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10362:138;;;;10531:7;:57;;;;-1:-1:-1;10543:11:0;;:16;;:44;;;10574:4;10563:24;;;;;;;;;;;;:::i;:::-;10510:136;;;;;;;10222:2:1;10510:136:0;;;10204:21:1;;;10241:18;;;10234:30;10300:34;10280:18;;;10273:62;10352:18;;10510:136:0;10020:356:1;10510:136:0;10352:301;;10217:436;;;;:::o;18265:614::-;18383:7;18439:31;;;:18;:31;;;;;;;;18406:64;;;;;;;;;;;;;;;;;18383:7;;;;18406:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18494:17:0;;18406:64;;-1:-1:-1;;;18525:8:0;18521:47;;18556:1;18549:8;;;;;;18521:47;18582:9;18577:159;18601:3;18597:1;:7;18577:159;;;18648:10;18659:1;18648:13;;;;;;;;:::i;:::-;;;;;;;:26;;;18629:15;:45;18625:100;;18699:10;18710:1;18699:13;;;;;;;;:::i;:::-;;;;;;;:26;;;18692:33;;;;;;;18625:100;18606:3;;;:::i;:::-;;;18577:159;;;-1:-1:-1;18871:1:0;;18265:614;-1:-1:-1;;;;;18265:614:0:o;8950:288::-;9107:36;;;;;;;;;;;;;;;;;;9130:12;9107:36;;;9068:85;;9015:5;;;;;;9068:25;;;;:85;;9107:36;9068:85;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9032:121;;;;9170:7;:28;;;;;9181:4;:11;9196:2;9181:17;9170:28;:61;;9229:2;9170:61;;;9212:4;9201:25;;;;;;;;;;;;:::i;:::-;9163:68;8950:288;-1:-1:-1;;;;8950:288:0:o;25601:925::-;25677:29;25709:12;25722:11;25709:25;;;;;;;;:::i;:::-;;;;;;;;;25768:21;;;:8;:21;;;;;;25790:10;25768:33;;;;;;;25819:11;;25709:25;;;;;;;;-1:-1:-1;25819:22:0;-1:-1:-1;25819:22:0;25811:64;;;;;;;9864:2:1;25811:64:0;;;9846:21:1;9903:2;9883:18;;;9876:30;9942:31;9922:18;;;9915:59;9991:18;;25811:64:0;9662:353:1;25811:64:0;25885:28;25901:11;25885:15;:28::i;:::-;25923:15;26021:4;:15;;;25999:8;:18;;;25957:8;:26;;;25943:4;:11;;;:40;;;;:::i;:::-;25942:75;;;;:::i;:::-;25941:95;;;;:::i;:::-;25923:113;-1:-1:-1;26050:11:0;;26046:105;;26077:20;;;;:63;;:20;;26119:10;26132:7;26077:33;:63::i;:::-;26164:11;;26160:187;;26206:7;26191:4;:11;;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;26227:21:0;;:64;;:21;;26270:10;26283:7;26227:34;:64::i;:::-;26329:7;26305:8;:20;;;:31;;;;;;;:::i;:::-;;;;-1:-1:-1;;26160:187:0;26443:18;;;;26401:26;;;;26387:11;;:40;;26401:26;26387:40;:::i;:::-;26386:75;;;;:::i;:::-;26356:15;;;:105;26477:42;;;11920:25:1;;;11976:2;11961:18;;11954:34;;;26486:10:0;;26477:42;;11893:18:1;26477:42:0;11746:248:1;24304:990:0;24379:29;24411:12;24424:11;24411:25;;;;;;;;:::i;:::-;;;;;;;;;24470:21;;;:8;:21;;;;;;24492:10;24470:33;;;;;;;24411:25;;;;;;;;-1:-1:-1;24513:28:0;24479:11;24513:15;:28::i;:::-;24555:11;;:15;24551:289;;24586:15;24688:4;:15;;;24666:8;:18;;;24620:8;:26;;;24606:4;:11;;;:40;;;;:::i;:::-;24605:79;;;;:::i;:::-;24604:99;;;;:::i;:::-;24586:117;-1:-1:-1;24721:11:0;;24717:113;;24752:20;;;;:63;;:20;;24794:10;24807:7;24752:33;:63::i;:::-;24572:268;24551:289;24853:11;;24849:268;;24880:21;;:145;;:21;;24944:10;24981:4;25004:7;24880:38;:145::i;:::-;25054:7;25039:4;:11;;;:22;;;;;;;:::i;:::-;;;;;;;;25099:7;25075:8;:20;;;:31;;;;;;;:::i;:::-;;;;-1:-1:-1;;24849:268:0;25213:18;;;;25171:26;;;;25157:11;;:40;;25171:26;25157:40;:::i;:::-;25156:75;;;;:::i;:::-;25126:15;;;:105;25246:41;;;11920:25:1;;;11976:2;11961:18;;11954:34;;;25254:10:0;;25246:41;;11893:18:1;25246:41:0;;;;;;;24369:925;;24304:990;;:::o;5575:169::-;5630:16;5649:6;;;5665:17;;;;;;;;;;5697:40;;5649:6;;;;;;;5697:40;;5630:16;5697:40;5620:124;5575:169;:::o;17314:673::-;17432:7;17488:31;;;:18;:31;;;;;;;;17455:64;;;;;;;;;;;;;;;;;17432:7;;;;17455:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17543:17:0;;17455:64;;-1:-1:-1;;;17574:8:0;17570:47;;17605:1;17598:8;;;;;;17570:47;17631:9;17626:159;17650:3;17646:1;:7;17626:159;;;17697:10;17708:1;17697:13;;;;;;;;:::i;:::-;;;;;;;:26;;;17678:15;:45;17674:100;;17748:10;17759:1;17748:13;;;;;;;;:::i;:::-;;;;;;;:26;;;17741:33;;;;;;;17674:100;17655:3;;;:::i;:::-;;;17626:159;;;-1:-1:-1;17948:10:0;17959:7;17965:1;17959:3;:7;:::i;:::-;17948:19;;;;;;;;:::i;:::-;;;;;;;:32;;;17941:39;;;;17314:673;;;;:::o;21105:2128::-;21170:29;21202:12;21215:11;21202:25;;;;;;;;:::i;:::-;;;;;;;;;21270:31;;;:18;:31;;;;;;21237:64;;;;;;;;;;;;;;;;;21202:25;;;;;;;;-1:-1:-1;21237:64:0;21270:31;;21202:25;;21237:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21334:8;:28;;;21315:15;:47;21311:84;;21378:7;;21105:2128;:::o;21311:84::-;21408:20;;;;21404:606;;21841:45;21857:11;21870:15;21841;:45::i;:::-;21823:15;:63;21802:178;;;21950:15;21919:28;;;:46;21802:178;21993:7;;21105:2128;:::o;21404:606::-;22061:9;22056:1171;22080:10;:17;22076:1;:21;22056:1171;;;22377:18;22398:150;22429:8;:28;;;22475:15;22508:10;22519:1;22508:13;;;;;;;;:::i;22398:150::-;22377:171;-1:-1:-1;22566:15:0;22562:29;;22583:8;;;22562:29;22831:10;22842:1;22831:13;;;;;;;;:::i;:::-;;;;;;;:26;;;22813:15;:44;22809:225;;;22908:10;22919:1;22908:13;;;;;;;;:::i;:::-;;;;;;;;;;;:26;22877:28;;;:57;22809:225;;;23004:15;22973:28;;;:46;22809:225;23196:8;:20;;;23158:8;:18;;;23108:10;23119:1;23108:13;;;;;;;;:::i;:::-;;;;;;;:26;;;23095:10;:39;;;;:::i;:::-;23094:82;;;;:::i;:::-;23093:123;;;;:::i;:::-;23047:8;:26;;;:169;;;;;;;:::i;:::-;;;;-1:-1:-1;;;22056:1171:0;22099:3;;;:::i;:::-;;;22056:1171;;;;21160:2073;;21105:2128;:::o;14:247:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;266:615::-;352:6;360;413:2;401:9;392:7;388:23;384:32;381:52;;;429:1;426;419:12;381:52;469:9;456:23;498:18;539:2;531:6;528:14;525:34;;;555:1;552;545:12;525:34;593:6;582:9;578:22;568:32;;638:7;631:4;627:2;623:13;619:27;609:55;;660:1;657;650:12;609:55;700:2;687:16;726:2;718:6;715:14;712:34;;;742:1;739;732:12;712:34;795:7;790:2;780:6;777:1;773:14;769:2;765:23;761:32;758:45;755:65;;;816:1;813;806:12;755:65;847:2;839:11;;;;;869:6;;-1:-1:-1;266:615:1;;-1:-1:-1;;;;266:615:1:o;886:277::-;953:6;1006:2;994:9;985:7;981:23;977:32;974:52;;;1022:1;1019;1012:12;974:52;1054:9;1048:16;1107:5;1100:13;1093:21;1086:5;1083:32;1073:60;;1129:1;1126;1119:12;1168:496;1285:6;1293;1301;1354:2;1342:9;1333:7;1329:23;1325:32;1322:52;;;1370:1;1367;1360:12;1322:52;1409:9;1396:23;1428:31;1453:5;1428:31;:::i;:::-;1478:5;-1:-1:-1;1535:2:1;1520:18;;1507:32;1548:33;1507:32;1548:33;:::i;:::-;1168:496;;1600:7;;-1:-1:-1;;;1654:2:1;1639:18;;;;1626:32;;1168:496::o;1669:180::-;1728:6;1781:2;1769:9;1760:7;1756:23;1752:32;1749:52;;;1797:1;1794;1787:12;1749:52;-1:-1:-1;1820:23:1;;1669:180;-1:-1:-1;1669:180:1:o;1854:315::-;1922:6;1930;1983:2;1971:9;1962:7;1958:23;1954:32;1951:52;;;1999:1;1996;1989:12;1951:52;2035:9;2022:23;2012:33;;2095:2;2084:9;2080:18;2067:32;2108:31;2133:5;2108:31;:::i;:::-;2158:5;2148:15;;;1854:315;;;;;:::o;2174:248::-;2242:6;2250;2303:2;2291:9;2282:7;2278:23;2274:32;2271:52;;;2319:1;2316;2309:12;2271:52;-1:-1:-1;;2342:23:1;;;2412:2;2397:18;;;2384:32;;-1:-1:-1;2174:248:1:o;2427:383::-;2504:6;2512;2520;2573:2;2561:9;2552:7;2548:23;2544:32;2541:52;;;2589:1;2586;2579:12;2541:52;2625:9;2612:23;2602:33;;2682:2;2671:9;2667:18;2654:32;2644:42;;2736:2;2725:9;2721:18;2708:32;2749:31;2774:5;2749:31;:::i;:::-;2799:5;2789:15;;;2427:383;;;;;:::o;2815:316::-;2892:6;2900;2908;2961:2;2949:9;2940:7;2936:23;2932:32;2929:52;;;2977:1;2974;2967:12;2929:52;-1:-1:-1;;3000:23:1;;;3070:2;3055:18;;3042:32;;-1:-1:-1;3121:2:1;3106:18;;;3093:32;;2815:316;-1:-1:-1;2815:316:1:o;3136:586::-;3238:6;3246;3254;3262;3270;3278;3331:3;3319:9;3310:7;3306:23;3302:33;3299:53;;;3348:1;3345;3338:12;3299:53;3384:9;3371:23;3361:33;;3441:2;3430:9;3426:18;3413:32;3403:42;;3492:2;3481:9;3477:18;3464:32;3454:42;;3546:2;3535:9;3531:18;3518:32;3559:29;3582:5;3559:29;:::i;:::-;3136:586;;;;-1:-1:-1;3136:586:1;;3659:3;3644:19;;3631:33;;3711:3;3696:19;;;3683:33;;-1:-1:-1;3136:586:1;-1:-1:-1;;3136:586:1:o;3727:247::-;3795:6;3848:2;3836:9;3827:7;3823:23;3819:32;3816:52;;;3864:1;3861;3854:12;3816:52;3896:9;3890:16;3915:29;3938:5;3915:29;:::i;3979:426::-;4108:3;4146:6;4140:13;4171:1;4181:129;4195:6;4192:1;4189:13;4181:129;;;4293:4;4277:14;;;4273:25;;4267:32;4254:11;;;4247:53;4210:12;4181:129;;;4328:6;4325:1;4322:13;4319:48;;;4363:1;4354:6;4349:3;4345:16;4338:27;4319:48;-1:-1:-1;4383:16:1;;;;;3979:426;-1:-1:-1;;3979:426:1:o;11999:128::-;12039:3;12070:1;12066:6;12063:1;12060:13;12057:39;;;12076:18;;:::i;:::-;-1:-1:-1;12112:9:1;;11999:128::o;12132:274::-;12172:1;12198;12188:189;;12233:77;12230:1;12223:88;12334:4;12331:1;12324:15;12362:4;12359:1;12352:15;12188:189;-1:-1:-1;12391:9:1;;12132:274::o;12411:482::-;12500:1;12543:5;12500:1;12557:330;12578:7;12568:8;12565:21;12557:330;;;12697:4;12629:66;12625:77;12619:4;12616:87;12613:113;;;12706:18;;:::i;:::-;12756:7;12746:8;12742:22;12739:55;;;12776:16;;;;12739:55;12855:22;;;;12815:15;;;;12557:330;;;12561:3;12411:482;;;;;:::o;12898:131::-;12958:5;12987:36;13014:8;13008:4;13083:5;13113:8;13103:80;;-1:-1:-1;13154:1:1;13168:5;;13103:80;13202:4;13192:76;;-1:-1:-1;13239:1:1;13253:5;;13192:76;13284:4;13302:1;13297:59;;;;13370:1;13365:130;;;;13277:218;;13297:59;13327:1;13318:10;;13341:5;;;13365:130;13402:3;13392:8;13389:17;13386:43;;;13409:18;;:::i;:::-;-1:-1:-1;;13465:1:1;13451:16;;13480:5;;13277:218;;13579:2;13569:8;13566:16;13560:3;13554:4;13551:13;13547:36;13541:2;13531:8;13528:16;13523:2;13517:4;13514:12;13510:35;13507:77;13504:159;;;-1:-1:-1;13616:19:1;;;13648:5;;13504:159;13695:34;13720:8;13714:4;13695:34;:::i;:::-;13825:6;13757:66;13753:79;13744:7;13741:92;13738:118;;;13836:18;;:::i;:::-;13874:20;;13034:866;-1:-1:-1;;;13034:866:1:o;13905:228::-;13945:7;14071:1;14003:66;13999:74;13996:1;13993:81;13988:1;13981:9;13974:17;13970:105;13967:131;;;14078:18;;:::i;:::-;-1:-1:-1;14118:9:1;;13905:228::o;14138:125::-;14178:4;14206:1;14203;14200:8;14197:34;;;14211:18;;:::i;:::-;-1:-1:-1;14248:9:1;;14138:125::o;14268:195::-;14307:3;14338:66;14331:5;14328:77;14325:103;;;14408:18;;:::i;:::-;-1:-1:-1;14455:1:1;14444:13;;14268:195::o;14468:184::-;14520:77;14517:1;14510:88;14617:4;14614:1;14607:15;14641:4;14638:1;14631:15;14657:184;14709:77;14706:1;14699:88;14806:4;14803:1;14796:15;14830:4;14827:1;14820:15;14846:154;14932:42;14925:5;14921:54;14914:5;14911:65;14901:93;;14990:1;14987;14980:12;15005:114;15089:4;15082:5;15078:16;15071:5;15068:27;15058:55;;15109:1;15106;15099:12"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2218000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "addCampaignInfo(address,address,uint256)": "infinite",
                "addRewardInfo(uint256,uint256,uint256)": "infinite",
                "campaignInfo(uint256)": "19642",
                "campaignInfoLen()": "2371",
                "campaignRewardInfo(uint256,uint256)": "6891",
                "currentEndTimestamp(uint256)": "infinite",
                "currentRewardPerSec(uint256)": "infinite",
                "deposit(uint256,uint256)": "infinite",
                "depositWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
                "emergencyRewardWithdraw(uint256,uint256,address)": "infinite",
                "emergencyWithdraw(uint256)": "infinite",
                "getMultiplier(uint256,uint256,uint256)": "536",
                "harvest(uint256[])": "infinite",
                "massUpdateCampaigns()": "infinite",
                "owner()": "2374",
                "pendingReward(uint256,address)": "infinite",
                "renounceOwnership()": "28165",
                "rewardHolder()": "2424",
                "rewardInfoLen(uint256)": "2472",
                "rewardInfoLimit()": "2331",
                "setRewardHolder(address)": "27787",
                "setRewardInfoLimit(uint256)": "25608",
                "transferOwnership(address)": "infinite",
                "updateCampaign(uint256)": "infinite",
                "userInfo(uint256,address)": "4832",
                "withdraw(uint256,uint256)": "infinite"
              },
              "internal": {
                "_deposit(uint256,uint256)": "infinite",
                "_endTimestampOf(uint256,uint256)": "infinite",
                "_pendingReward(uint256,uint256,uint256)": "infinite",
                "_rewardPerSecOf(uint256,uint256)": "infinite",
                "_updateCampaign(uint256)": "infinite",
                "_withdraw(uint256,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "addCampaignInfo(address,address,uint256)": "409e00fc",
              "addRewardInfo(uint256,uint256,uint256)": "2ea807c5",
              "campaignInfo(uint256)": "bb2238ec",
              "campaignInfoLen()": "4ad7ce80",
              "campaignRewardInfo(uint256,uint256)": "10f7a6af",
              "currentEndTimestamp(uint256)": "9e494bee",
              "currentRewardPerSec(uint256)": "32215c42",
              "deposit(uint256,uint256)": "e2bbb158",
              "depositWithPermit(uint256,uint256,uint256,uint8,bytes32,bytes32)": "515bc323",
              "emergencyRewardWithdraw(uint256,uint256,address)": "1d123131",
              "emergencyWithdraw(uint256)": "5312ea8e",
              "getMultiplier(uint256,uint256,uint256)": "7bafb029",
              "harvest(uint256[])": "5d14b06f",
              "massUpdateCampaigns()": "eebdced5",
              "owner()": "8da5cb5b",
              "pendingReward(uint256,address)": "98969e82",
              "renounceOwnership()": "715018a6",
              "rewardHolder()": "569c93d2",
              "rewardInfoLen(uint256)": "4ae56bae",
              "rewardInfoLimit()": "00d74850",
              "setRewardHolder(address)": "6806cc93",
              "setRewardInfoLimit(uint256)": "33824b87",
              "transferOwnership(address)": "f2fde38b",
              "updateCampaign(uint256)": "cef7042d",
              "userInfo(uint256,address)": "93f1a40b",
              "withdraw(uint256,uint256)": "441a3e70"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardHolder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IBoringERC20\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IBoringERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"name\":\"AddCampaignInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"campaignID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"phase\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPerTimestamp\",\"type\":\"uint256\"}],\"name\":\"AddRewardInfo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaign\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaign\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardHolder\",\"type\":\"address\"}],\"name\":\"SetRewardHolder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardInfoLimit\",\"type\":\"uint256\"}],\"name\":\"SetRewardInfoLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaign\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IBoringERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"contract IBoringERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startTimestamp\",\"type\":\"uint256\"}],\"name\":\"addCampaignInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerSec\",\"type\":\"uint256\"}],\"name\":\"addRewardInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"campaignInfo\",\"outputs\":[{\"internalType\":\"contract IBoringERC20\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"contract IBoringERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"precision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRewardPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"campaignInfoLen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"campaignRewardInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardPerSec\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"}],\"name\":\"currentEndTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"}],\"name\":\"currentRewardPerSec\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"emergencyRewardWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTimestamp\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_campaignIDs\",\"type\":\"uint256[]\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdateCampaigns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardHolder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"}],\"name\":\"rewardInfoLen\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardInfoLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardHolder\",\"type\":\"address\"}],\"name\":\"setRewardHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_updatedRewardInfoLimit\",\"type\":\"uint256\"}],\"name\":\"setRewardInfoLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"}],\"name\":\"updateCampaign\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_campaignID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/staking/TokenFarm.sol\":\"TokenFarm\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"contracts/staking/TokenFarm.sol\":{\"content\":\"// Sources flattened with hardhat v2.6.0 https://hardhat.org\\n\\n// File @openzeppelin/contracts/security/ReentrancyGuard.sol@v4.2.0\\n\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n// File @openzeppelin/contracts/utils/Context.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n// File @openzeppelin/contracts/access/Ownable.sol@v4.2.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n// File contracts/libraries/IBoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\ninterface IBoringERC20 {\\n    function mint(address to, uint256 amount) external;\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n\\n    /// @notice EIP 2612\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n// File contracts/libraries/BoringERC20.sol\\n\\npragma solidity ^0.8.7;\\n\\n// solhint-disable avoid-low-level-calls\\n\\nlibrary BoringERC20 {\\n    bytes4 private constant SIG_SYMBOL = 0x95d89b41; // symbol()\\n    bytes4 private constant SIG_NAME = 0x06fdde03; // name()\\n    bytes4 private constant SIG_DECIMALS = 0x313ce567; // decimals()\\n    bytes4 private constant SIG_TRANSFER = 0xa9059cbb; // transfer(address,uint256)\\n    bytes4 private constant SIG_TRANSFER_FROM = 0x23b872dd; // transferFrom(address,address,uint256)\\n\\n    function returnDataToString(bytes memory data)\\n        internal\\n        pure\\n        returns (string memory)\\n    {\\n        if (data.length >= 64) {\\n            return abi.decode(data, (string));\\n        } else if (data.length == 32) {\\n            uint8 i = 0;\\n            while (i < 32 && data[i] != 0) {\\n                i++;\\n            }\\n            bytes memory bytesArray = new bytes(i);\\n            for (i = 0; i < 32 && data[i] != 0; i++) {\\n                bytesArray[i] = data[i];\\n            }\\n            return string(bytesArray);\\n        } else {\\n            return \\\"???\\\";\\n        }\\n    }\\n\\n    /// @notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token symbol.\\n    function safeSymbol(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_SYMBOL)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.name version which returns '???' as fallback string.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (string) Token name.\\n    function safeName(IBoringERC20 token)\\n        internal\\n        view\\n        returns (string memory)\\n    {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_NAME)\\n        );\\n        return success ? returnDataToString(data) : \\\"???\\\";\\n    }\\n\\n    /// @notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\\n    /// @param token The address of the ERC-20 token contract.\\n    /// @return (uint8) Token decimals.\\n    function safeDecimals(IBoringERC20 token) internal view returns (uint8) {\\n        (bool success, bytes memory data) = address(token).staticcall(\\n            abi.encodeWithSelector(SIG_DECIMALS)\\n        );\\n        return success && data.length == 32 ? abi.decode(data, (uint8)) : 18;\\n    }\\n\\n    /// @notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransfer(\\n        IBoringERC20 token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: Transfer failed\\\"\\n        );\\n    }\\n\\n    /// @notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\\n    /// Reverts on a failed transfer.\\n    /// @param token The address of the ERC-20 token.\\n    /// @param from Transfer tokens from.\\n    /// @param to Transfer tokens to.\\n    /// @param amount The token amount.\\n    function safeTransferFrom(\\n        IBoringERC20 token,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        (bool success, bytes memory data) = address(token).call(\\n            abi.encodeWithSelector(SIG_TRANSFER_FROM, from, to, amount)\\n        );\\n        require(\\n            success && (data.length == 0 || abi.decode(data, (bool))),\\n            \\\"BoringERC20: TransferFrom failed\\\"\\n        );\\n    }\\n}\\n// File contracts/staking/TokenFarm.sol\\n\\npragma solidity ^0.8.7;\\n\\ncontract TokenFarm is Ownable, ReentrancyGuard {\\n    using BoringERC20 for IBoringERC20;\\n\\n    // Info of each user for each farm.\\n    struct UserInfo {\\n        uint256 amount; // How many Staking tokens the user has provided.\\n        uint256 rewardDebt; // Reward debt. See explanation below.\\n    }\\n\\n    // Info of each reward distribution campaign.\\n    struct CampaignInfo {\\n        IBoringERC20 stakingToken; // Address of Staking token contract.\\n        IBoringERC20 rewardToken; // Address of Reward token contract\\n        uint256 precision; //reward token precision\\n        uint256 startTimestamp; // start timestamp of the campaign\\n        uint256 lastRewardTimestamp; // Last timestamp that Reward Token distribution occurs.\\n        uint256 accRewardPerShare; // Accumulated Reward Token per share. See below.\\n        uint256 totalStaked; // total staked amount each campaign's stake token, typically, each campaign has the same stake token, so need to track it separatedly\\n        uint256 totalRewards;\\n    }\\n\\n    // Reward info\\n    struct RewardInfo {\\n        uint256 endTimestamp;\\n        uint256 rewardPerSec;\\n    }\\n\\n    // @dev this is mostly used for extending reward period\\n    // @notice Reward info is a set of {endTimestamp, rewardPerTimestamp}\\n    // indexed by campaigh ID\\n    mapping(uint256 => RewardInfo[]) public campaignRewardInfo;\\n\\n    // @notice Info of each campaign. mapped from campaigh ID\\n    CampaignInfo[] public campaignInfo;\\n    // Info of each user that stakes Staking tokens.\\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\\n\\n    // @notice limit length of reward info\\n    // how many phases are allowed\\n    uint256 public rewardInfoLimit;\\n    // @dev reward holder account\\n    address public rewardHolder;\\n\\n    event Deposit(address indexed user, uint256 amount, uint256 campaign);\\n    event Withdraw(address indexed user, uint256 amount, uint256 campaign);\\n    event EmergencyWithdraw(\\n        address indexed user,\\n        uint256 amount,\\n        uint256 campaign\\n    );\\n    event AddCampaignInfo(\\n        uint256 indexed campaignID,\\n        IBoringERC20 stakingToken,\\n        IBoringERC20 rewardToken,\\n        uint256 startTimestamp\\n    );\\n    event AddRewardInfo(\\n        uint256 indexed campaignID,\\n        uint256 indexed phase,\\n        uint256 endTimestamp,\\n        uint256 rewardPerTimestamp\\n    );\\n    event SetRewardInfoLimit(uint256 rewardInfoLimit);\\n    event SetRewardHolder(address rewardHolder);\\n\\n    // constructor\\n    constructor(address _rewardHolder) {\\n        rewardInfoLimit = 53;\\n        rewardHolder = _rewardHolder;\\n    }\\n\\n    // @notice function for setting a reward holder who is responsible for adding a reward info\\n    function setRewardHolder(address _rewardHolder) external onlyOwner {\\n        rewardHolder = _rewardHolder;\\n        emit SetRewardHolder(_rewardHolder);\\n    }\\n\\n    // @notice set new reward info limit\\n    function setRewardInfoLimit(uint256 _updatedRewardInfoLimit)\\n        external\\n        onlyOwner\\n    {\\n        rewardInfoLimit = _updatedRewardInfoLimit;\\n        emit SetRewardInfoLimit(rewardInfoLimit);\\n    }\\n\\n    // @notice reward campaign, one campaign represents a pair of staking and reward token, last reward Timestamp and acc reward Per Share\\n    function addCampaignInfo(\\n        IBoringERC20 _stakingToken,\\n        IBoringERC20 _rewardToken,\\n        uint256 _startTimestamp\\n    ) external onlyOwner {\\n        uint256 decimalsRewardToken = uint256(_rewardToken.safeDecimals());\\n\\n        require(\\n            decimalsRewardToken < 30,\\n            \\\"constructor: reward token decimals must be inferior to 30\\\"\\n        );\\n\\n        uint256 precision = uint256(10**(uint256(30) - (decimalsRewardToken)));\\n\\n        campaignInfo.push(\\n            CampaignInfo({\\n                stakingToken: _stakingToken,\\n                rewardToken: _rewardToken,\\n                precision: precision,\\n                startTimestamp: _startTimestamp,\\n                lastRewardTimestamp: _startTimestamp,\\n                accRewardPerShare: 0,\\n                totalStaked: 0,\\n                totalRewards: 0\\n            })\\n        );\\n        emit AddCampaignInfo(\\n            campaignInfo.length - 1,\\n            _stakingToken,\\n            _rewardToken,\\n            _startTimestamp\\n        );\\n    }\\n\\n    // @notice if the new reward info is added, the reward & its end timestamp will be extended by the newly pushed reward info.\\n    function addRewardInfo(\\n        uint256 _campaignID,\\n        uint256 _endTimestamp,\\n        uint256 _rewardPerSec\\n    ) external onlyOwner {\\n        RewardInfo[] storage rewardInfo = campaignRewardInfo[_campaignID];\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        require(\\n            rewardInfo.length < rewardInfoLimit,\\n            \\\"addRewardInfo::reward info length exceeds the limit\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp >=\\n                block.timestamp,\\n            \\\"addRewardInfo::reward period ended\\\"\\n        );\\n        require(\\n            rewardInfo.length == 0 ||\\n                rewardInfo[rewardInfo.length - 1].endTimestamp < _endTimestamp,\\n            \\\"addRewardInfo::bad new endTimestamp\\\"\\n        );\\n        uint256 startTimestamp = rewardInfo.length == 0\\n            ? campaign.startTimestamp\\n            : rewardInfo[rewardInfo.length - 1].endTimestamp;\\n        uint256 timeRange = _endTimestamp - startTimestamp;\\n        uint256 totalRewards = _rewardPerSec * timeRange;\\n        campaign.rewardToken.safeTransferFrom(\\n            rewardHolder,\\n            address(this),\\n            totalRewards\\n        );\\n        campaign.totalRewards += totalRewards;\\n        rewardInfo.push(\\n            RewardInfo({\\n                endTimestamp: _endTimestamp,\\n                rewardPerSec: _rewardPerSec\\n            })\\n        );\\n        emit AddRewardInfo(\\n            _campaignID,\\n            rewardInfo.length - 1,\\n            _endTimestamp,\\n            _rewardPerSec\\n        );\\n    }\\n\\n    function rewardInfoLen(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return campaignRewardInfo[_campaignID].length;\\n    }\\n\\n    function campaignInfoLen() external view returns (uint256) {\\n        return campaignInfo.length;\\n    }\\n\\n    // @notice this will return  end block based on the current block timestamp.\\n    function currentEndTimestamp(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _endTimestampOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _endTimestampOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].endTimestamp;\\n        }\\n        // @dev when couldn't find any reward info, it means that _blockTimestamp exceed endTimestamp\\n        // so return the latest reward info.\\n        return rewardInfo[len - 1].endTimestamp;\\n    }\\n\\n    // @notice this will return reward per block based on the current block timestamp.\\n    function currentRewardPerSec(uint256 _campaignID)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return _rewardPerSecOf(_campaignID, block.timestamp);\\n    }\\n\\n    function _rewardPerSecOf(uint256 _campaignID, uint256 _blockTimestamp)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 len = rewardInfo.length;\\n        if (len == 0) {\\n            return 0;\\n        }\\n        for (uint256 i = 0; i < len; ++i) {\\n            if (_blockTimestamp <= rewardInfo[i].endTimestamp)\\n                return rewardInfo[i].rewardPerSec;\\n        }\\n        // @dev when couldn't find any reward info, it means that timestamp exceed endtimestamp\\n        // so return 0\\n        return 0;\\n    }\\n\\n    // @notice Return reward multiplier over the given _from to _to timestamp.\\n    function getMultiplier(\\n        uint256 _from,\\n        uint256 _to,\\n        uint256 _endTimestamp\\n    ) public pure returns (uint256) {\\n        if ((_from >= _endTimestamp) || (_from > _to)) {\\n            return 0;\\n        }\\n        if (_to <= _endTimestamp) {\\n            return _to - _from;\\n        }\\n        return _endTimestamp - _from;\\n    }\\n\\n    // @notice View function to see pending Reward on frontend.\\n    function pendingReward(uint256 _campaignID, address _user)\\n        external\\n        view\\n        returns (uint256)\\n    {\\n        return\\n            _pendingReward(\\n                _campaignID,\\n                userInfo[_campaignID][_user].amount,\\n                userInfo[_campaignID][_user].rewardDebt\\n            );\\n    }\\n\\n    function _pendingReward(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 _rewardDebt\\n    ) internal view returns (uint256) {\\n        CampaignInfo memory campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        uint256 accRewardPerShare = campaign.accRewardPerShare;\\n        if (\\n            block.timestamp > campaign.lastRewardTimestamp &&\\n            campaign.totalStaked != 0\\n        ) {\\n            uint256 cursor = campaign.lastRewardTimestamp;\\n            for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n                uint256 multiplier = getMultiplier(\\n                    cursor,\\n                    block.timestamp,\\n                    rewardInfo[i].endTimestamp\\n                );\\n                if (multiplier == 0) continue;\\n                cursor = rewardInfo[i].endTimestamp;\\n                accRewardPerShare +=\\n                    ((multiplier * rewardInfo[i].rewardPerSec) *\\n                        campaign.precision) /\\n                    campaign.totalStaked;\\n            }\\n        }\\n        return\\n            ((_amount * accRewardPerShare) / campaign.precision) - _rewardDebt;\\n    }\\n\\n    function updateCampaign(uint256 _campaignID) external nonReentrant {\\n        _updateCampaign(_campaignID);\\n    }\\n\\n    // @notice Update reward variables of the given campaign to be up-to-date.\\n    function _updateCampaign(uint256 _campaignID) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        RewardInfo[] memory rewardInfo = campaignRewardInfo[_campaignID];\\n        if (block.timestamp <= campaign.lastRewardTimestamp) {\\n            return;\\n        }\\n        if (campaign.totalStaked == 0) {\\n            // if there is no total supply, return and use the campaign's start block timestamp as the last reward block timestamp\\n            // so that ALL reward will be distributed.\\n            // however, if the first deposit is out of reward period, last reward block will be its block timestamp\\n            // in order to keep the multiplier = 0\\n            if (\\n                block.timestamp > _endTimestampOf(_campaignID, block.timestamp)\\n            ) {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            return;\\n        }\\n        // @dev for each reward info\\n        for (uint256 i = 0; i < rewardInfo.length; ++i) {\\n            // @dev get multiplier based on current Block and rewardInfo's end block\\n            // multiplier will be a range of either (current block - campaign.lastRewardBlock)\\n            // or (reward info's endblock - campaign.lastRewardTimestamp) or 0\\n            uint256 multiplier = getMultiplier(\\n                campaign.lastRewardTimestamp,\\n                block.timestamp,\\n                rewardInfo[i].endTimestamp\\n            );\\n            if (multiplier == 0) continue;\\n            // @dev if currentTimestamp exceed end block, use end block as the last reward block\\n            // so that for the next iteration, previous endTimestamp will be used as the last reward block\\n            if (block.timestamp > rewardInfo[i].endTimestamp) {\\n                campaign.lastRewardTimestamp = rewardInfo[i].endTimestamp;\\n            } else {\\n                campaign.lastRewardTimestamp = block.timestamp;\\n            }\\n            campaign.accRewardPerShare +=\\n                ((multiplier * rewardInfo[i].rewardPerSec) *\\n                    campaign.precision) /\\n                campaign.totalStaked;\\n        }\\n    }\\n\\n    // @notice Update reward variables for all campaigns. gas spending is HIGH in this method call, BE CAREFUL\\n    function massUpdateCampaigns() external nonReentrant {\\n        uint256 length = campaignInfo.length;\\n        for (uint256 pid = 0; pid < length; ++pid) {\\n            _updateCampaign(pid);\\n        }\\n    }\\n\\n    function depositWithPermit(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        campaign.stakingToken.permit(\\n            msg.sender,\\n            address(this),\\n            _amount,\\n            deadline,\\n            v,\\n            r,\\n            s\\n        );\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function deposit(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _deposit(_campaignID, _amount);\\n    }\\n\\n    // @notice Stake Staking tokens to TokenFarm\\n    function _deposit(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        _updateCampaign(_campaignID);\\n        if (user.amount > 0) {\\n            uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n                campaign.precision) - user.rewardDebt;\\n            if (pending > 0) {\\n                campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n            }\\n        }\\n        if (_amount > 0) {\\n            campaign.stakingToken.safeTransferFrom(\\n                address(msg.sender),\\n                address(this),\\n                _amount\\n            );\\n            user.amount += _amount;\\n            campaign.totalStaked += _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n        emit Deposit(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw Staking tokens from STAKING.\\n    function withdraw(uint256 _campaignID, uint256 _amount)\\n        external\\n        nonReentrant\\n    {\\n        _withdraw(_campaignID, _amount);\\n    }\\n\\n    // @notice internal method for withdraw (withdraw and harvest method depend on this method)\\n    function _withdraw(uint256 _campaignID, uint256 _amount) internal {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        require(user.amount >= _amount, \\\"withdraw::bad withdraw amount\\\");\\n        _updateCampaign(_campaignID);\\n        uint256 pending = ((user.amount * campaign.accRewardPerShare) /\\n            campaign.precision) - user.rewardDebt;\\n        if (pending > 0) {\\n            campaign.rewardToken.safeTransfer(address(msg.sender), pending);\\n        }\\n        if (_amount > 0) {\\n            user.amount -= _amount;\\n            campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n            campaign.totalStaked -= _amount;\\n        }\\n        user.rewardDebt =\\n            (user.amount * campaign.accRewardPerShare) /\\n            campaign.precision;\\n\\n        emit Withdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice method for harvest campaigns (used when the user want to claim their reward token based on specified campaigns)\\n    function harvest(uint256[] calldata _campaignIDs) external nonReentrant {\\n        for (uint256 i = 0; i < _campaignIDs.length; ++i) {\\n            _withdraw(_campaignIDs[i], 0);\\n        }\\n    }\\n\\n    // @notice Withdraw without caring about rewards. EMERGENCY ONLY.\\n    function emergencyWithdraw(uint256 _campaignID) external nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        UserInfo storage user = userInfo[_campaignID][msg.sender];\\n        uint256 _amount = user.amount;\\n        campaign.totalStaked -= _amount;\\n        user.amount = 0;\\n        user.rewardDebt = 0;\\n        campaign.stakingToken.safeTransfer(address(msg.sender), _amount);\\n        emit EmergencyWithdraw(msg.sender, _amount, _campaignID);\\n    }\\n\\n    // @notice Withdraw reward. EMERGENCY ONLY.\\n    function emergencyRewardWithdraw(\\n        uint256 _campaignID,\\n        uint256 _amount,\\n        address _beneficiary\\n    ) external onlyOwner nonReentrant {\\n        CampaignInfo storage campaign = campaignInfo[_campaignID];\\n        uint256 currentStakingPendingReward = _pendingReward(\\n            _campaignID,\\n            campaign.totalStaked,\\n            0\\n        );\\n        require(\\n            currentStakingPendingReward + _amount <= campaign.totalRewards,\\n            \\\"emergencyRewardWithdraw::not enough reward token\\\"\\n        );\\n        campaign.totalRewards -= _amount;\\n        campaign.rewardToken.safeTransfer(_beneficiary, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0694f4be8e5ed7ebc4357e3e639c73573c0f801f88bd80dbec3b0cb4bd879035\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 65,
                "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 10,
                "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                "label": "_status",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 586,
                "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                "label": "campaignRewardInfo",
                "offset": 0,
                "slot": "2",
                "type": "t_mapping(t_uint256,t_array(t_struct(RewardInfo)580_storage)dyn_storage)"
              },
              {
                "astId": 590,
                "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                "label": "campaignInfo",
                "offset": 0,
                "slot": "3",
                "type": "t_array(t_struct(CampaignInfo)575_storage)dyn_storage"
              },
              {
                "astId": 597,
                "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                "label": "userInfo",
                "offset": 0,
                "slot": "4",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)556_storage))"
              },
              {
                "astId": 599,
                "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                "label": "rewardInfoLimit",
                "offset": 0,
                "slot": "5",
                "type": "t_uint256"
              },
              {
                "astId": 601,
                "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                "label": "rewardHolder",
                "offset": 0,
                "slot": "6",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_struct(CampaignInfo)575_storage)dyn_storage": {
                "base": "t_struct(CampaignInfo)575_storage",
                "encoding": "dynamic_array",
                "label": "struct TokenFarm.CampaignInfo[]",
                "numberOfBytes": "32"
              },
              "t_array(t_struct(RewardInfo)580_storage)dyn_storage": {
                "base": "t_struct(RewardInfo)580_storage",
                "encoding": "dynamic_array",
                "label": "struct TokenFarm.RewardInfo[]",
                "numberOfBytes": "32"
              },
              "t_contract(IBoringERC20)234": {
                "encoding": "inplace",
                "label": "contract IBoringERC20",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_struct(UserInfo)556_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct TokenFarm.UserInfo)",
                "numberOfBytes": "32",
                "value": "t_struct(UserInfo)556_storage"
              },
              "t_mapping(t_uint256,t_array(t_struct(RewardInfo)580_storage)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => struct TokenFarm.RewardInfo[])",
                "numberOfBytes": "32",
                "value": "t_array(t_struct(RewardInfo)580_storage)dyn_storage"
              },
              "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)556_storage))": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => mapping(address => struct TokenFarm.UserInfo))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_struct(UserInfo)556_storage)"
              },
              "t_struct(CampaignInfo)575_storage": {
                "encoding": "inplace",
                "label": "struct TokenFarm.CampaignInfo",
                "members": [
                  {
                    "astId": 559,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "stakingToken",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_contract(IBoringERC20)234"
                  },
                  {
                    "astId": 562,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "rewardToken",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_contract(IBoringERC20)234"
                  },
                  {
                    "astId": 564,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "precision",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 566,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "startTimestamp",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 568,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "lastRewardTimestamp",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 570,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "accRewardPerShare",
                    "offset": 0,
                    "slot": "5",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 572,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "totalStaked",
                    "offset": 0,
                    "slot": "6",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 574,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "totalRewards",
                    "offset": 0,
                    "slot": "7",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "256"
              },
              "t_struct(RewardInfo)580_storage": {
                "encoding": "inplace",
                "label": "struct TokenFarm.RewardInfo",
                "members": [
                  {
                    "astId": 577,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "endTimestamp",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 579,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "rewardPerSec",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_struct(UserInfo)556_storage": {
                "encoding": "inplace",
                "label": "struct TokenFarm.UserInfo",
                "members": [
                  {
                    "astId": 553,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "amount",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 555,
                    "contract": "contracts/staking/TokenFarm.sol:TokenFarm",
                    "label": "rewardDebt",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/staking/TokenFarm.sol": {
        "ast": {
          "absolutePath": "contracts/staking/TokenFarm.sol",
          "exportedSymbols": {
            "BoringERC20": [
              542
            ],
            "Context": [
              59
            ],
            "IBoringERC20": [
              234
            ],
            "Ownable": [
              161
            ],
            "ReentrancyGuard": [
              39
            ],
            "TokenFarm": [
              1906
            ]
          },
          "id": 1907,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "164:23:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "189:750:0",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 39,
              "linearizedBaseContracts": [
                39
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "958:15:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 5,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nameLocation": "1753:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1728:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1728:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 4,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1768:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 8,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nameLocation": "1800:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1775:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1811:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1835:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1819:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 17,
                    "nodeType": "Block",
                    "src": "1863:39:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 15,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1873:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 14,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "1883:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1873:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16,
                        "nodeType": "ExpressionStatement",
                        "src": "1873:22:0"
                      }
                    ]
                  },
                  "id": 18,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1860:2:0"
                  },
                  "returnParameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1863:0:0"
                  },
                  "scope": 39,
                  "src": "1849:53:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 37,
                    "nodeType": "Block",
                    "src": "2301:421:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 24,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 22,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "2390:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 23,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "2401:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2390:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 25,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2411:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 21,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2382:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2382:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27,
                        "nodeType": "ExpressionStatement",
                        "src": "2382:63:0"
                      },
                      {
                        "expression": {
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 28,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2520:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 29,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "2530:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2520:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31,
                        "nodeType": "ExpressionStatement",
                        "src": "2520:18:0"
                      },
                      {
                        "id": 32,
                        "nodeType": "PlaceholderStatement",
                        "src": "2549:1:0"
                      },
                      {
                        "expression": {
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2693:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 34,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "2703:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2693:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 36,
                        "nodeType": "ExpressionStatement",
                        "src": "2693:22:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 19,
                    "nodeType": "StructuredDocumentation",
                    "src": "1908:364:0",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."
                  },
                  "id": 38,
                  "name": "nonReentrant",
                  "nameLocation": "2286:12:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2298:2:0"
                  },
                  "src": "2277:445:0",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1907,
              "src": "940:1784:0",
              "usedErrors": []
            },
            {
              "id": 40,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "2783:23:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 59,
              "linearizedBaseContracts": [
                59
              ],
              "name": "Context",
              "nameLocation": "3322:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 48,
                    "nodeType": "Block",
                    "src": "3398:34:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3415:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3415:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 44,
                        "id": 47,
                        "nodeType": "Return",
                        "src": "3408:17:0"
                      }
                    ]
                  },
                  "id": 49,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "3345:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3355:2:0"
                  },
                  "returnParameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 49,
                        "src": "3389:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3389:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3388:9:0"
                  },
                  "scope": 59,
                  "src": "3336:96:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "3505:32:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 54,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3522:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "3522:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 53,
                        "id": 56,
                        "nodeType": "Return",
                        "src": "3515:15:0"
                      }
                    ]
                  },
                  "id": 58,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "3447:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3455:2:0"
                  },
                  "returnParameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "3489:14:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3488:16:0"
                  },
                  "scope": 59,
                  "src": "3438:99:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1907,
              "src": "3304:235:0",
              "usedErrors": []
            },
            {
              "id": 60,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "3599:23:0"
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 62,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 59,
                    "src": "4148:7:0"
                  },
                  "id": 63,
                  "nodeType": "InheritanceSpecifier",
                  "src": "4148:7:0"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 61,
                "nodeType": "StructuredDocumentation",
                "src": "3624:494:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 161,
              "linearizedBaseContracts": [
                161,
                59
              ],
              "name": "Ownable",
              "nameLocation": "4137:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "4178:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "4162:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4162:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 71,
                  "name": "OwnershipTransferred",
                  "nameLocation": "4197:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "4234:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 71,
                        "src": "4218:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4218:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 69,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "4265:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 71,
                        "src": "4249:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4249:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4217:57:0"
                  },
                  "src": "4191:84:0"
                },
                {
                  "body": {
                    "id": 80,
                    "nodeType": "Block",
                    "src": "4391:40:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 76,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "4411:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 77,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4411:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 75,
                            "name": "_setOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "4401:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4401:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79,
                        "nodeType": "ExpressionStatement",
                        "src": "4401:23:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 72,
                    "nodeType": "StructuredDocumentation",
                    "src": "4281:91:0",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 81,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 73,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4388:2:0"
                  },
                  "returnParameters": {
                    "id": 74,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4391:0:0"
                  },
                  "scope": 161,
                  "src": "4377:54:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 89,
                    "nodeType": "Block",
                    "src": "4562:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 87,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "4579:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 86,
                        "id": 88,
                        "nodeType": "Return",
                        "src": "4572:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 82,
                    "nodeType": "StructuredDocumentation",
                    "src": "4437:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 90,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "4516:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 83,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4521:2:0"
                  },
                  "returnParameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 85,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 90,
                        "src": "4553:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4553:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4552:9:0"
                  },
                  "scope": 161,
                  "src": "4507:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "4701:96:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 94,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 90,
                                  "src": "4719:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 95,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4719:7:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 96,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49,
                                  "src": "4730:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4730:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4719:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4744:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 93,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4711:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4711:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 101,
                        "nodeType": "ExpressionStatement",
                        "src": "4711:68:0"
                      },
                      {
                        "id": 102,
                        "nodeType": "PlaceholderStatement",
                        "src": "4789:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 91,
                    "nodeType": "StructuredDocumentation",
                    "src": "4598:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 104,
                  "name": "onlyOwner",
                  "nameLocation": "4689:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 92,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4698:2:0"
                  },
                  "src": "4680:117:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "5193:38:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 113,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5221:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5213:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 111,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5213:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5213:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 110,
                            "name": "_setOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "5203:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5203:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "5203:21:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 105,
                    "nodeType": "StructuredDocumentation",
                    "src": "4803:331:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 118,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 108,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 107,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "5183:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5183:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "5148:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 106,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5165:2:0"
                  },
                  "returnParameters": {
                    "id": 109,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5193:0:0"
                  },
                  "scope": 161,
                  "src": "5139:92:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 140,
                    "nodeType": "Block",
                    "src": "5450:119:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 127,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 121,
                                "src": "5468:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 130,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5488:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 129,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5480:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 128,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5480:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5480:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5468:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5492:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 126,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5460:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5460:73:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 135,
                        "nodeType": "ExpressionStatement",
                        "src": "5460:73:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 137,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 121,
                              "src": "5553:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 136,
                            "name": "_setOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 160,
                            "src": "5543:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5543:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "5543:19:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "5237:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 141,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 124,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 123,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "5440:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5440:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "5389:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "5415:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 141,
                        "src": "5407:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5406:18:0"
                  },
                  "returnParameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5450:0:0"
                  },
                  "scope": 161,
                  "src": "5380:189:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 159,
                    "nodeType": "Block",
                    "src": "5620:124:0",
                    "statements": [
                      {
                        "assignments": [
                          147
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 147,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "5638:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 159,
                            "src": "5630:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 146,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5630:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 149,
                        "initialValue": {
                          "id": 148,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65,
                          "src": "5649:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5630:25:0"
                      },
                      {
                        "expression": {
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 150,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65,
                            "src": "5665:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 151,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "5674:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5665:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 153,
                        "nodeType": "ExpressionStatement",
                        "src": "5665:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 155,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "5718:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 156,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 143,
                              "src": "5728:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 154,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "5697:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5697:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 158,
                        "nodeType": "EmitStatement",
                        "src": "5692:45:0"
                      }
                    ]
                  },
                  "id": 160,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setOwner",
                  "nameLocation": "5584:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 143,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "5602:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 160,
                        "src": "5594:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 142,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5594:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5593:18:0"
                  },
                  "returnParameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5620:0:0"
                  },
                  "scope": 161,
                  "src": "5575:169:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1907,
              "src": "4119:1627:0",
              "usedErrors": []
            },
            {
              "id": 162,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "5793:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 234,
              "linearizedBaseContracts": [
                234
              ],
              "name": "IBoringERC20",
              "nameLocation": "5828:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "40c10f19",
                  "id": 169,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "5856:4:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 164,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5869:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "5861:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5861:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5881:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "5873:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5873:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5860:28:0"
                  },
                  "returnParameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5897:0:0"
                  },
                  "scope": 234,
                  "src": "5847:51:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18160ddd",
                  "id": 174,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "5913:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5924:2:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "5950:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5950:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5949:9:0"
                  },
                  "scope": 234,
                  "src": "5904:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 181,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "5974:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "5992:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "5984:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5984:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5983:17:0"
                  },
                  "returnParameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 181,
                        "src": "6024:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6024:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6023:9:0"
                  },
                  "scope": 234,
                  "src": "5965:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 190,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "6048:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "6066:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "6058:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6058:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6081:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "6073:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6057:32:0"
                  },
                  "returnParameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 188,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 190,
                        "src": "6137:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6137:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6136:9:0"
                  },
                  "scope": 234,
                  "src": "6039:107:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 199,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "6161:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6177:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "6169:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6169:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6194:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "6186:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6186:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6168:33:0"
                  },
                  "returnParameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 199,
                        "src": "6220:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6220:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6219:6:0"
                  },
                  "scope": 234,
                  "src": "6152:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 207,
                  "name": "Transfer",
                  "nameLocation": "6238:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6263:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 207,
                        "src": "6247:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6247:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 203,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6285:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 207,
                        "src": "6269:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6269:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6297:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 207,
                        "src": "6289:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6289:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6246:57:0"
                  },
                  "src": "6232:72:0"
                },
                {
                  "anonymous": false,
                  "id": 215,
                  "name": "Approval",
                  "nameLocation": "6315:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "6349:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "6333:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6333:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6380:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "6364:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6364:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 213,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6405:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "6397:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6397:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6323:93:0"
                  },
                  "src": "6309:108:0"
                },
                {
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "6423:20:0",
                    "text": "@notice EIP 2612"
                  },
                  "functionSelector": "d505accf",
                  "id": 233,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "6457:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "6481:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "6473:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6473:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6504:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "6496:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6496:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6529:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "6521:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6521:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "6552:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "6544:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6544:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "6576:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "6570:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6570:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "6595:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "6587:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6587:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "6614:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "6606:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6606:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6463:158:0"
                  },
                  "returnParameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6630:0:0"
                  },
                  "scope": 234,
                  "src": "6448:183:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1907,
              "src": "5818:815:0",
              "usedErrors": []
            },
            {
              "id": 235,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "6679:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 542,
              "linearizedBaseContracts": [
                542
              ],
              "name": "BoringERC20",
              "nameLocation": "6754:11:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 238,
                  "mutability": "constant",
                  "name": "SIG_SYMBOL",
                  "nameLocation": "6796:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 542,
                  "src": "6772:47:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6772:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30783935643839623431",
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6809:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2514000705_by_1",
                      "typeString": "int_const 2514000705"
                    },
                    "value": "0x95d89b41"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 241,
                  "mutability": "constant",
                  "name": "SIG_NAME",
                  "nameLocation": "6861:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 542,
                  "src": "6837:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6837:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30783036666464653033",
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6872:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_117300739_by_1",
                      "typeString": "int_const 117300739"
                    },
                    "value": "0x06fdde03"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 244,
                  "mutability": "constant",
                  "name": "SIG_DECIMALS",
                  "nameLocation": "6922:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 542,
                  "src": "6898:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 242,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6898:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30783331336365353637",
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6937:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_826074471_by_1",
                      "typeString": "int_const 826074471"
                    },
                    "value": "0x313ce567"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 247,
                  "mutability": "constant",
                  "name": "SIG_TRANSFER",
                  "nameLocation": "6991:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 542,
                  "src": "6967:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6967:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30786139303539636262",
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7006:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2835717307_by_1",
                      "typeString": "int_const 2835717307"
                    },
                    "value": "0xa9059cbb"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 250,
                  "mutability": "constant",
                  "name": "SIG_TRANSFER_FROM",
                  "nameLocation": "7075:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 542,
                  "src": "7051:54:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "7051:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30783233623837326464",
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7095:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_599290589_by_1",
                      "typeString": "int_const 599290589"
                    },
                    "value": "0x23b872dd"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 336,
                    "nodeType": "Block",
                    "src": "7266:486:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 257,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "7280:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "7280:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "3634",
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7295:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_64_by_1",
                              "typeString": "int_const 64"
                            },
                            "value": "64"
                          },
                          "src": "7280:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 270,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 252,
                                "src": "7367:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7367:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "3332",
                              "id": 272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7382:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            },
                            "src": "7367:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 333,
                            "nodeType": "Block",
                            "src": "7709:37:0",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "3f3f3f",
                                  "id": 331,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7730:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ad68b4dd5516c9b8c2050c111c09e315e44fd13499c6724a87c1b4642b615187",
                                    "typeString": "literal_string \"???\""
                                  },
                                  "value": "???"
                                },
                                "functionReturnParameters": 256,
                                "id": 332,
                                "nodeType": "Return",
                                "src": "7723:12:0"
                              }
                            ]
                          },
                          "id": 334,
                          "nodeType": "IfStatement",
                          "src": "7363:383:0",
                          "trueBody": {
                            "id": 330,
                            "nodeType": "Block",
                            "src": "7386:317:0",
                            "statements": [
                              {
                                "assignments": [
                                  275
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 275,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "7406:1:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 330,
                                    "src": "7400:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "typeName": {
                                      "id": 274,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7400:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 277,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7410:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "7400:11:0"
                              },
                              {
                                "body": {
                                  "id": 290,
                                  "nodeType": "Block",
                                  "src": "7456:36:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 288,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "UnaryOperation",
                                        "operator": "++",
                                        "prefix": false,
                                        "src": "7474:3:0",
                                        "subExpression": {
                                          "id": 287,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 275,
                                          "src": "7474:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "id": 289,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7474:3:0"
                                    }
                                  ]
                                },
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 278,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 275,
                                      "src": "7432:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "hexValue": "3332",
                                      "id": 279,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7436:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "src": "7432:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    },
                                    "id": 285,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 281,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 252,
                                        "src": "7442:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 283,
                                      "indexExpression": {
                                        "id": 282,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 275,
                                        "src": "7447:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7442:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes1",
                                        "typeString": "bytes1"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 284,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7453:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "7442:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "7432:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 291,
                                "nodeType": "WhileStatement",
                                "src": "7425:67:0"
                              },
                              {
                                "assignments": [
                                  293
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 293,
                                    "mutability": "mutable",
                                    "name": "bytesArray",
                                    "nameLocation": "7518:10:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 330,
                                    "src": "7505:23:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes"
                                    },
                                    "typeName": {
                                      "id": 292,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7505:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 298,
                                "initialValue": {
                                  "arguments": [
                                    {
                                      "id": 296,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 275,
                                      "src": "7541:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 295,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "7531:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (uint256) pure returns (bytes memory)"
                                    },
                                    "typeName": {
                                      "id": 294,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7535:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_storage_ptr",
                                        "typeString": "bytes"
                                      }
                                    }
                                  },
                                  "id": 297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7531:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "7505:38:0"
                              },
                              {
                                "body": {
                                  "id": 323,
                                  "nodeType": "Block",
                                  "src": "7598:56:0",
                                  "statements": [
                                    {
                                      "expression": {
                                        "id": 321,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "baseExpression": {
                                            "id": 315,
                                            "name": "bytesArray",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 293,
                                            "src": "7616:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          "id": 317,
                                          "indexExpression": {
                                            "id": 316,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 275,
                                            "src": "7627:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "7616:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes1",
                                            "typeString": "bytes1"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "baseExpression": {
                                            "id": 318,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 252,
                                            "src": "7632:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          "id": 320,
                                          "indexExpression": {
                                            "id": 319,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 275,
                                            "src": "7637:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7632:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes1",
                                            "typeString": "bytes1"
                                          }
                                        },
                                        "src": "7616:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      },
                                      "id": 322,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7616:23:0"
                                    }
                                  ]
                                },
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 305,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 303,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 275,
                                      "src": "7569:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<",
                                    "rightExpression": {
                                      "hexValue": "3332",
                                      "id": 304,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7573:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_32_by_1",
                                        "typeString": "int_const 32"
                                      },
                                      "value": "32"
                                    },
                                    "src": "7569:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "&&",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    },
                                    "id": 310,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 306,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 252,
                                        "src": "7579:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 308,
                                      "indexExpression": {
                                        "id": 307,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 275,
                                        "src": "7584:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "7579:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes1",
                                        "typeString": "bytes1"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 309,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7590:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "7579:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "7569:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 324,
                                "initializationExpression": {
                                  "expression": {
                                    "id": 301,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 299,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 275,
                                      "src": "7562:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "30",
                                      "id": 300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7566:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "7562:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "id": 302,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7562:5:0"
                                },
                                "loopExpression": {
                                  "expression": {
                                    "id": 313,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": false,
                                    "src": "7593:3:0",
                                    "subExpression": {
                                      "id": 312,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 275,
                                      "src": "7593:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "id": 314,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7593:3:0"
                                },
                                "nodeType": "ForStatement",
                                "src": "7557:97:0"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 327,
                                      "name": "bytesArray",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 293,
                                      "src": "7681:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7674:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 325,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7674:6:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7674:18:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "functionReturnParameters": 256,
                                "id": 329,
                                "nodeType": "Return",
                                "src": "7667:25:0"
                              }
                            ]
                          }
                        },
                        "id": 335,
                        "nodeType": "IfStatement",
                        "src": "7276:470:0",
                        "trueBody": {
                          "id": 269,
                          "nodeType": "Block",
                          "src": "7299:58:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 263,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 252,
                                    "src": "7331:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "id": 265,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7338:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 264,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7338:6:0",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "id": 266,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "7337:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    }
                                  ],
                                  "expression": {
                                    "id": 261,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "7320:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 262,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "decode",
                                  "nodeType": "MemberAccess",
                                  "src": "7320:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7320:26:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "functionReturnParameters": 256,
                              "id": 268,
                              "nodeType": "Return",
                              "src": "7313:33:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 337,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "returnDataToString",
                  "nameLocation": "7162:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "7194:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "7181:17:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "7181:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7180:19:0"
                  },
                  "returnParameters": {
                    "id": 256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 337,
                        "src": "7247:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7247:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7246:15:0"
                  },
                  "scope": 542,
                  "src": "7153:599:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 368,
                    "nodeType": "Block",
                    "src": "8059:195:0",
                    "statements": [
                      {
                        "assignments": [
                          347,
                          349
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 347,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "8075:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 368,
                            "src": "8070:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 346,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8070:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 349,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "8097:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 368,
                            "src": "8084:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 348,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8084:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 360,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 357,
                                  "name": "SIG_SYMBOL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 238,
                                  "src": "8167:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 355,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8144:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "8144:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8144:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 352,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 341,
                                  "src": "8113:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                ],
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8105:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 350,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8105:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8105:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "8105:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8105:83:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8069:119:0"
                      },
                      {
                        "expression": {
                          "condition": {
                            "id": 361,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "8205:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "3f3f3f",
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8242:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ad68b4dd5516c9b8c2050c111c09e315e44fd13499c6724a87c1b4642b615187",
                              "typeString": "literal_string \"???\""
                            },
                            "value": "???"
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8205:42:0",
                          "trueExpression": {
                            "arguments": [
                              {
                                "id": 363,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 349,
                                "src": "8234:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 362,
                              "name": "returnDataToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "8215:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8215:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 345,
                        "id": 367,
                        "nodeType": "Return",
                        "src": "8198:49:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 338,
                    "nodeType": "StructuredDocumentation",
                    "src": "7758:190:0",
                    "text": "@notice Provides a safe ERC20.symbol version which returns '???' as fallback string.\n @param token The address of the ERC-20 token contract.\n @return (string) Token symbol."
                  },
                  "id": 369,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeSymbol",
                  "nameLocation": "7962:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "7986:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "7973:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        },
                        "typeName": {
                          "id": 340,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 339,
                            "name": "IBoringERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 234,
                            "src": "7973:12:0"
                          },
                          "referencedDeclaration": 234,
                          "src": "7973:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBoringERC20_$234",
                            "typeString": "contract IBoringERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7972:20:0"
                  },
                  "returnParameters": {
                    "id": 345,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 344,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "8040:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 343,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8040:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8039:15:0"
                  },
                  "scope": 542,
                  "src": "7953:301:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 400,
                    "nodeType": "Block",
                    "src": "8555:193:0",
                    "statements": [
                      {
                        "assignments": [
                          379,
                          381
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 379,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "8571:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 400,
                            "src": "8566:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 378,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "8566:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 381,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "8593:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 400,
                            "src": "8580:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 380,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "8580:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 392,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 389,
                                  "name": "SIG_NAME",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 241,
                                  "src": "8663:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 387,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8640:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "8640:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8640:32:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 384,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 373,
                                  "src": "8609:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                ],
                                "id": 383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8601:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 382,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8601:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8601:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "8601:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8601:81:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8565:117:0"
                      },
                      {
                        "expression": {
                          "condition": {
                            "id": 393,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 379,
                            "src": "8699:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "3f3f3f",
                            "id": 397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8736:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ad68b4dd5516c9b8c2050c111c09e315e44fd13499c6724a87c1b4642b615187",
                              "typeString": "literal_string \"???\""
                            },
                            "value": "???"
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8699:42:0",
                          "trueExpression": {
                            "arguments": [
                              {
                                "id": 395,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 381,
                                "src": "8728:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 394,
                              "name": "returnDataToString",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "8709:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (bytes memory) pure returns (string memory)"
                              }
                            },
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8709:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 377,
                        "id": 399,
                        "nodeType": "Return",
                        "src": "8692:49:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "8260:186:0",
                    "text": "@notice Provides a safe ERC20.name version which returns '???' as fallback string.\n @param token The address of the ERC-20 token contract.\n @return (string) Token name."
                  },
                  "id": 401,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeName",
                  "nameLocation": "8460:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8482:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "8469:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        },
                        "typeName": {
                          "id": 372,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 371,
                            "name": "IBoringERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 234,
                            "src": "8469:12:0"
                          },
                          "referencedDeclaration": 234,
                          "src": "8469:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBoringERC20_$234",
                            "typeString": "contract IBoringERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8468:20:0"
                  },
                  "returnParameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 401,
                        "src": "8536:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 375,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8536:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8535:15:0"
                  },
                  "scope": 542,
                  "src": "8451:297:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 441,
                    "nodeType": "Block",
                    "src": "9022:216:0",
                    "statements": [
                      {
                        "assignments": [
                          411,
                          413
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 411,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9038:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 441,
                            "src": "9033:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 410,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9033:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 413,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "9060:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 441,
                            "src": "9047:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 412,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "9047:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 424,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 421,
                                  "name": "SIG_DECIMALS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "9130:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "expression": {
                                  "id": 419,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9107:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "9107:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9107:36:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 416,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 405,
                                  "src": "9076:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                ],
                                "id": 415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9068:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 414,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9068:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9068:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "9068:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9068:85:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9032:121:0"
                      },
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 425,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 411,
                              "src": "9170:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 426,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 413,
                                  "src": "9181:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "9181:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "3332",
                                "id": 428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9196:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "9181:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9170:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "hexValue": "3138",
                            "id": 438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9229:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "9170:61:0",
                          "trueExpression": {
                            "arguments": [
                              {
                                "id": 433,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 413,
                                "src": "9212:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "components": [
                                  {
                                    "id": 435,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9219:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint8_$",
                                      "typeString": "type(uint8)"
                                    },
                                    "typeName": {
                                      "id": 434,
                                      "name": "uint8",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9219:5:0",
                                      "typeDescriptions": {}
                                    }
                                  }
                                ],
                                "id": 436,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9218:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                }
                              ],
                              "expression": {
                                "id": 431,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "9201:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "decode",
                              "nodeType": "MemberAccess",
                              "src": "9201:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9201:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "functionReturnParameters": 409,
                        "id": 440,
                        "nodeType": "Return",
                        "src": "9163:68:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 402,
                    "nodeType": "StructuredDocumentation",
                    "src": "8754:191:0",
                    "text": "@notice Provides a safe ERC20.decimals version which returns '18' as fallback value.\n @param token The address of the ERC-20 token contract.\n @return (uint8) Token decimals."
                  },
                  "id": 442,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecimals",
                  "nameLocation": "8959:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 406,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "8985:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "8972:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        },
                        "typeName": {
                          "id": 404,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 403,
                            "name": "IBoringERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 234,
                            "src": "8972:12:0"
                          },
                          "referencedDeclaration": 234,
                          "src": "8972:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBoringERC20_$234",
                            "typeString": "contract IBoringERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8971:20:0"
                  },
                  "returnParameters": {
                    "id": 409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 408,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 442,
                        "src": "9015:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "9015:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9014:7:0"
                  },
                  "scope": 542,
                  "src": "8950:288:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 489,
                    "nodeType": "Block",
                    "src": "9616:286:0",
                    "statements": [
                      {
                        "assignments": [
                          454,
                          456
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 454,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "9632:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 489,
                            "src": "9627:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 453,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "9627:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 456,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "9654:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 489,
                            "src": "9641:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 455,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "9641:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 469,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 464,
                                  "name": "SIG_TRANSFER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 247,
                                  "src": "9718:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 465,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "9732:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 466,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 450,
                                  "src": "9736:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 462,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "9695:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 463,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "9695:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9695:48:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 459,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 446,
                                  "src": "9670:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                ],
                                "id": 458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9662:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 457,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9662:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9662:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "9662:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9662:91:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9626:127:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 471,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 454,
                                "src": "9784:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 483,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 475,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 472,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 456,
                                          "src": "9796:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 473,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "9796:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 474,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9811:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "9796:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 478,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 456,
                                          "src": "9827:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 480,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "9834:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 479,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "9834:4:0",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 481,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "9833:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 476,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "9816:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 477,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "9816:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 482,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9816:24:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "9796:44:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 484,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9795:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "9784:57:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426f72696e6745524332303a205472616e73666572206661696c6564",
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9855:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1a3f0851ddc9e157ae96e52ed9dfd71a8cb4b1cf2a73b26b9f3f9e0aa9469d27",
                                "typeString": "literal_string \"BoringERC20: Transfer failed\""
                              },
                              "value": "BoringERC20: Transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1a3f0851ddc9e157ae96e52ed9dfd71a8cb4b1cf2a73b26b9f3f9e0aa9469d27",
                                "typeString": "literal_string \"BoringERC20: Transfer failed\""
                              }
                            ],
                            "id": 470,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9763:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9763:132:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 488,
                        "nodeType": "ExpressionStatement",
                        "src": "9763:132:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 443,
                    "nodeType": "StructuredDocumentation",
                    "src": "9244:258:0",
                    "text": "@notice Provides a safe ERC20.transfer version for different ERC-20 implementations.\n Reverts on a failed transfer.\n @param token The address of the ERC-20 token.\n @param to Transfer tokens to.\n @param amount The token amount."
                  },
                  "id": 490,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nameLocation": "9516:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 446,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "9551:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 490,
                        "src": "9538:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        },
                        "typeName": {
                          "id": 445,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 444,
                            "name": "IBoringERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 234,
                            "src": "9538:12:0"
                          },
                          "referencedDeclaration": 234,
                          "src": "9538:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBoringERC20_$234",
                            "typeString": "contract IBoringERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "9574:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 490,
                        "src": "9566:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9566:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "9594:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 490,
                        "src": "9586:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9586:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9528:78:0"
                  },
                  "returnParameters": {
                    "id": 452,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9616:0:0"
                  },
                  "scope": 542,
                  "src": "9507:395:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 540,
                    "nodeType": "Block",
                    "src": "10352:301:0",
                    "statements": [
                      {
                        "assignments": [
                          504,
                          506
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 504,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "10368:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 540,
                            "src": "10363:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 503,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "10363:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 506,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "10390:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 540,
                            "src": "10377:17:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 505,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "10377:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 520,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 514,
                                  "name": "SIG_TRANSFER_FROM",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 250,
                                  "src": "10454:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "id": 515,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "10473:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 516,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 498,
                                  "src": "10479:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 517,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "10483:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 512,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "10431:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 513,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "src": "10431:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10431:59:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 509,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 494,
                                  "src": "10406:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                ],
                                "id": 508,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10398:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 507,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10398:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10398:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "10398:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10398:102:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10362:138:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 522,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 504,
                                "src": "10531:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 534,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 526,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 523,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 506,
                                          "src": "10543:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 524,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "10543:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 525,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10558:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "10543:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "id": 529,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 506,
                                          "src": "10574:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "components": [
                                            {
                                              "id": 531,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "10581:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_bool_$",
                                                "typeString": "type(bool)"
                                              },
                                              "typeName": {
                                                "id": 530,
                                                "name": "bool",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "10581:4:0",
                                                "typeDescriptions": {}
                                              }
                                            }
                                          ],
                                          "id": 532,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "10580:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_type$_t_bool_$",
                                            "typeString": "type(bool)"
                                          }
                                        ],
                                        "expression": {
                                          "id": 527,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "10563:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 528,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "decode",
                                        "nodeType": "MemberAccess",
                                        "src": "10563:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 533,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10563:24:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "10543:44:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 535,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "10542:46:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10531:57:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "426f72696e6745524332303a205472616e7366657246726f6d206661696c6564",
                              "id": 537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10602:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dffd2f381f9235cb5927387124071d63a91c90f587c3edae76629d7dc4794f26",
                                "typeString": "literal_string \"BoringERC20: TransferFrom failed\""
                              },
                              "value": "BoringERC20: TransferFrom failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dffd2f381f9235cb5927387124071d63a91c90f587c3edae76629d7dc4794f26",
                                "typeString": "literal_string \"BoringERC20: TransferFrom failed\""
                              }
                            ],
                            "id": 521,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10510:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10510:136:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 539,
                        "nodeType": "ExpressionStatement",
                        "src": "10510:136:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 491,
                    "nodeType": "StructuredDocumentation",
                    "src": "9908:304:0",
                    "text": "@notice Provides a safe ERC20.transferFrom version for different ERC-20 implementations.\n Reverts on a failed transfer.\n @param token The address of the ERC-20 token.\n @param from Transfer tokens from.\n @param to Transfer tokens to.\n @param amount The token amount."
                  },
                  "id": 541,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nameLocation": "10226:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 494,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "10265:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "10252:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        },
                        "typeName": {
                          "id": 493,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 492,
                            "name": "IBoringERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 234,
                            "src": "10252:12:0"
                          },
                          "referencedDeclaration": 234,
                          "src": "10252:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBoringERC20_$234",
                            "typeString": "contract IBoringERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 496,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "10288:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "10280:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10280:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 498,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "10310:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "10302:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 497,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10302:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "10330:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 541,
                        "src": "10322:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10322:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10242:100:0"
                  },
                  "returnParameters": {
                    "id": 502,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10352:0:0"
                  },
                  "scope": 542,
                  "src": "10217:436:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1907,
              "src": "6746:3909:0",
              "usedErrors": []
            },
            {
              "id": 543,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".7"
              ],
              "nodeType": "PragmaDirective",
              "src": "10697:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 544,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 161,
                    "src": "10744:7:0"
                  },
                  "id": 545,
                  "nodeType": "InheritanceSpecifier",
                  "src": "10744:7:0"
                },
                {
                  "baseName": {
                    "id": 546,
                    "name": "ReentrancyGuard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 39,
                    "src": "10753:15:0"
                  },
                  "id": 547,
                  "nodeType": "InheritanceSpecifier",
                  "src": "10753:15:0"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1906,
              "linearizedBaseContracts": [
                1906,
                39,
                161,
                59
              ],
              "name": "TokenFarm",
              "nameLocation": "10731:9:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 551,
                  "libraryName": {
                    "id": 548,
                    "name": "BoringERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 542,
                    "src": "10781:11:0"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "10775:35:0",
                  "typeName": {
                    "id": 550,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 549,
                      "name": "IBoringERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 234,
                      "src": "10797:12:0"
                    },
                    "referencedDeclaration": 234,
                    "src": "10797:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IBoringERC20_$234",
                      "typeString": "contract IBoringERC20"
                    }
                  }
                },
                {
                  "canonicalName": "TokenFarm.UserInfo",
                  "id": 556,
                  "members": [
                    {
                      "constant": false,
                      "id": 553,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "10890:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "10882:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 552,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10882:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 555,
                      "mutability": "mutable",
                      "name": "rewardDebt",
                      "nameLocation": "10964:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 556,
                      "src": "10956:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 554,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10956:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "UserInfo",
                  "nameLocation": "10863:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 1906,
                  "src": "10856:164:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "TokenFarm.CampaignInfo",
                  "id": 575,
                  "members": [
                    {
                      "constant": false,
                      "id": 559,
                      "mutability": "mutable",
                      "name": "stakingToken",
                      "nameLocation": "11119:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 575,
                      "src": "11106:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBoringERC20_$234",
                        "typeString": "contract IBoringERC20"
                      },
                      "typeName": {
                        "id": 558,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 557,
                          "name": "IBoringERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 234,
                          "src": "11106:12:0"
                        },
                        "referencedDeclaration": 234,
                        "src": "11106:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 562,
                      "mutability": "mutable",
                      "name": "rewardToken",
                      "nameLocation": "11192:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 575,
                      "src": "11179:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBoringERC20_$234",
                        "typeString": "contract IBoringERC20"
                      },
                      "typeName": {
                        "id": 561,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 560,
                          "name": "IBoringERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 234,
                          "src": "11179:12:0"
                        },
                        "referencedDeclaration": 234,
                        "src": "11179:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 564,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "11257:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 575,
                      "src": "11249:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 563,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11249:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 566,
                      "mutability": "mutable",
                      "name": "startTimestamp",
                      "nameLocation": "11309:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 575,
                      "src": "11301:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 565,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11301:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 568,
                      "mutability": "mutable",
                      "name": "lastRewardTimestamp",
                      "nameLocation": "11376:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 575,
                      "src": "11368:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 567,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11368:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 570,
                      "mutability": "mutable",
                      "name": "accRewardPerShare",
                      "nameLocation": "11470:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 575,
                      "src": "11462:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 569,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11462:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 572,
                      "mutability": "mutable",
                      "name": "totalStaked",
                      "nameLocation": "11555:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 575,
                      "src": "11547:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 571,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11547:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 574,
                      "mutability": "mutable",
                      "name": "totalRewards",
                      "nameLocation": "11719:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 575,
                      "src": "11711:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 573,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11711:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "CampaignInfo",
                  "nameLocation": "11083:12:0",
                  "nodeType": "StructDefinition",
                  "scope": 1906,
                  "src": "11076:662:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "TokenFarm.RewardInfo",
                  "id": 580,
                  "members": [
                    {
                      "constant": false,
                      "id": 577,
                      "mutability": "mutable",
                      "name": "endTimestamp",
                      "nameLocation": "11799:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "11791:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 576,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11791:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 579,
                      "mutability": "mutable",
                      "name": "rewardPerSec",
                      "nameLocation": "11829:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "11821:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 578,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11821:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RewardInfo",
                  "nameLocation": "11770:10:0",
                  "nodeType": "StructDefinition",
                  "scope": 1906,
                  "src": "11763:85:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "10f7a6af",
                  "id": 586,
                  "mutability": "mutable",
                  "name": "campaignRewardInfo",
                  "nameLocation": "12058:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1906,
                  "src": "12018:58:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_$",
                    "typeString": "mapping(uint256 => struct TokenFarm.RewardInfo[])"
                  },
                  "typeName": {
                    "id": 585,
                    "keyType": {
                      "id": 581,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12026:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "12018:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_$",
                      "typeString": "mapping(uint256 => struct TokenFarm.RewardInfo[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 583,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 582,
                          "name": "RewardInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 580,
                          "src": "12037:10:0"
                        },
                        "referencedDeclaration": 580,
                        "src": "12037:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RewardInfo_$580_storage_ptr",
                          "typeString": "struct TokenFarm.RewardInfo"
                        }
                      },
                      "id": 584,
                      "nodeType": "ArrayTypeName",
                      "src": "12037:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                        "typeString": "struct TokenFarm.RewardInfo[]"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "bb2238ec",
                  "id": 590,
                  "mutability": "mutable",
                  "name": "campaignInfo",
                  "nameLocation": "12167:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1906,
                  "src": "12145:34:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                    "typeString": "struct TokenFarm.CampaignInfo[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 588,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 587,
                        "name": "CampaignInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 575,
                        "src": "12145:12:0"
                      },
                      "referencedDeclaration": 575,
                      "src": "12145:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                        "typeString": "struct TokenFarm.CampaignInfo"
                      }
                    },
                    "id": 589,
                    "nodeType": "ArrayTypeName",
                    "src": "12145:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage_ptr",
                      "typeString": "struct TokenFarm.CampaignInfo[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "93f1a40b",
                  "id": 597,
                  "mutability": "mutable",
                  "name": "userInfo",
                  "nameLocation": "12294:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1906,
                  "src": "12238:64:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$_$",
                    "typeString": "mapping(uint256 => mapping(address => struct TokenFarm.UserInfo))"
                  },
                  "typeName": {
                    "id": 596,
                    "keyType": {
                      "id": 591,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12246:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "12238:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$_$",
                      "typeString": "mapping(uint256 => mapping(address => struct TokenFarm.UserInfo))"
                    },
                    "valueType": {
                      "id": 595,
                      "keyType": {
                        "id": 592,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12265:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "12257:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$",
                        "typeString": "mapping(address => struct TokenFarm.UserInfo)"
                      },
                      "valueType": {
                        "id": 594,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 593,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 556,
                          "src": "12276:8:0"
                        },
                        "referencedDeclaration": 556,
                        "src": "12276:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                          "typeString": "struct TokenFarm.UserInfo"
                        }
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "00d74850",
                  "id": 599,
                  "mutability": "mutable",
                  "name": "rewardInfoLimit",
                  "nameLocation": "12402:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1906,
                  "src": "12387:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12387:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "569c93d2",
                  "id": 601,
                  "mutability": "mutable",
                  "name": "rewardHolder",
                  "nameLocation": "12472:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1906,
                  "src": "12457:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12457:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 609,
                  "name": "Deposit",
                  "nameLocation": "12497:7:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 608,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 603,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "12521:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 609,
                        "src": "12505:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 602,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12505:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 605,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "12535:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 609,
                        "src": "12527:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12527:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 607,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "campaign",
                        "nameLocation": "12551:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 609,
                        "src": "12543:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12543:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12504:56:0"
                  },
                  "src": "12491:70:0"
                },
                {
                  "anonymous": false,
                  "id": 617,
                  "name": "Withdraw",
                  "nameLocation": "12572:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 616,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 611,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "12597:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 617,
                        "src": "12581:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12581:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 613,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "12611:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 617,
                        "src": "12603:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 612,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12603:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 615,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "campaign",
                        "nameLocation": "12627:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 617,
                        "src": "12619:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 614,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12619:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12580:56:0"
                  },
                  "src": "12566:71:0"
                },
                {
                  "anonymous": false,
                  "id": 625,
                  "name": "EmergencyWithdraw",
                  "nameLocation": "12648:17:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 624,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "12691:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 625,
                        "src": "12675:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12675:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "12713:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 625,
                        "src": "12705:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12705:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 623,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "campaign",
                        "nameLocation": "12737:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 625,
                        "src": "12729:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 622,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12729:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12665:86:0"
                  },
                  "src": "12642:110:0"
                },
                {
                  "anonymous": false,
                  "id": 637,
                  "name": "AddCampaignInfo",
                  "nameLocation": "12763:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 636,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 627,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "campaignID",
                        "nameLocation": "12804:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "12788:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12788:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 630,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "stakingToken",
                        "nameLocation": "12837:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "12824:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        },
                        "typeName": {
                          "id": 629,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 628,
                            "name": "IBoringERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 234,
                            "src": "12824:12:0"
                          },
                          "referencedDeclaration": 234,
                          "src": "12824:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBoringERC20_$234",
                            "typeString": "contract IBoringERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 633,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nameLocation": "12872:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "12859:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        },
                        "typeName": {
                          "id": 632,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 631,
                            "name": "IBoringERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 234,
                            "src": "12859:12:0"
                          },
                          "referencedDeclaration": 234,
                          "src": "12859:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBoringERC20_$234",
                            "typeString": "contract IBoringERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 635,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "startTimestamp",
                        "nameLocation": "12901:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "12893:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12893:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12778:143:0"
                  },
                  "src": "12757:165:0"
                },
                {
                  "anonymous": false,
                  "id": 647,
                  "name": "AddRewardInfo",
                  "nameLocation": "12933:13:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 639,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "campaignID",
                        "nameLocation": "12972:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "12956:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 638,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12956:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 641,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "phase",
                        "nameLocation": "13008:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "12992:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12992:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 643,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "endTimestamp",
                        "nameLocation": "13031:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "13023:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13023:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardPerTimestamp",
                        "nameLocation": "13061:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 647,
                        "src": "13053:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13053:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12946:139:0"
                  },
                  "src": "12927:159:0"
                },
                {
                  "anonymous": false,
                  "id": 651,
                  "name": "SetRewardInfoLimit",
                  "nameLocation": "13097:18:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 650,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 649,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardInfoLimit",
                        "nameLocation": "13124:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "13116:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 648,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13116:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13115:25:0"
                  },
                  "src": "13091:50:0"
                },
                {
                  "anonymous": false,
                  "id": 655,
                  "name": "SetRewardHolder",
                  "nameLocation": "13152:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 653,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "rewardHolder",
                        "nameLocation": "13176:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 655,
                        "src": "13168:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13168:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13167:22:0"
                  },
                  "src": "13146:44:0"
                },
                {
                  "body": {
                    "id": 668,
                    "nodeType": "Block",
                    "src": "13250:75:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 660,
                            "name": "rewardInfoLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "13260:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3533",
                            "id": 661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13278:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_53_by_1",
                              "typeString": "int_const 53"
                            },
                            "value": "53"
                          },
                          "src": "13260:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 663,
                        "nodeType": "ExpressionStatement",
                        "src": "13260:20:0"
                      },
                      {
                        "expression": {
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 664,
                            "name": "rewardHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 601,
                            "src": "13290:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 665,
                            "name": "_rewardHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "13305:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13290:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 667,
                        "nodeType": "ExpressionStatement",
                        "src": "13290:28:0"
                      }
                    ]
                  },
                  "id": 669,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "mutability": "mutable",
                        "name": "_rewardHolder",
                        "nameLocation": "13235:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "13227:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13227:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13226:23:0"
                  },
                  "returnParameters": {
                    "id": 659,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13250:0:0"
                  },
                  "scope": 1906,
                  "src": "13215:110:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 684,
                    "nodeType": "Block",
                    "src": "13494:90:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 676,
                            "name": "rewardHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 601,
                            "src": "13504:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 677,
                            "name": "_rewardHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "13519:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13504:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "13504:28:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 681,
                              "name": "_rewardHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 671,
                              "src": "13563:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 680,
                            "name": "SetRewardHolder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 655,
                            "src": "13547:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13547:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 683,
                        "nodeType": "EmitStatement",
                        "src": "13542:35:0"
                      }
                    ]
                  },
                  "functionSelector": "6806cc93",
                  "id": 685,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 674,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 673,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "13484:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13484:9:0"
                    }
                  ],
                  "name": "setRewardHolder",
                  "nameLocation": "13436:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 672,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 671,
                        "mutability": "mutable",
                        "name": "_rewardHolder",
                        "nameLocation": "13460:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "13452:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 670,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13452:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13451:23:0"
                  },
                  "returnParameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13494:0:0"
                  },
                  "scope": 1906,
                  "src": "13427:157:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 700,
                    "nodeType": "Block",
                    "src": "13731:108:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 692,
                            "name": "rewardInfoLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "13741:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 693,
                            "name": "_updatedRewardInfoLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 687,
                            "src": "13759:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13741:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 695,
                        "nodeType": "ExpressionStatement",
                        "src": "13741:41:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 697,
                              "name": "rewardInfoLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 599,
                              "src": "13816:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 696,
                            "name": "SetRewardInfoLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 651,
                            "src": "13797:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13797:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 699,
                        "nodeType": "EmitStatement",
                        "src": "13792:40:0"
                      }
                    ]
                  },
                  "functionSelector": "33824b87",
                  "id": 701,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 690,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 689,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "13717:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13717:9:0"
                    }
                  ],
                  "name": "setRewardInfoLimit",
                  "nameLocation": "13640:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 688,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 687,
                        "mutability": "mutable",
                        "name": "_updatedRewardInfoLimit",
                        "nameLocation": "13667:23:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 701,
                        "src": "13659:31:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 686,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13659:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13658:33:0"
                  },
                  "returnParameters": {
                    "id": 691,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13731:0:0"
                  },
                  "scope": 1906,
                  "src": "13631:208:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 771,
                    "nodeType": "Block",
                    "src": "14138:874:0",
                    "statements": [
                      {
                        "assignments": [
                          715
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 715,
                            "mutability": "mutable",
                            "name": "decimalsRewardToken",
                            "nameLocation": "14156:19:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 771,
                            "src": "14148:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 714,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14148:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 722,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 718,
                                  "name": "_rewardToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 707,
                                  "src": "14186:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                },
                                "id": 719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "safeDecimals",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 442,
                                "src": "14186:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_contract$_IBoringERC20_$234_$returns$_t_uint8_$bound_to$_t_contract$_IBoringERC20_$234_$",
                                  "typeString": "function (contract IBoringERC20) view returns (uint8)"
                                }
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14186:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14178:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 716,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14178:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14178:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14148:66:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 724,
                                "name": "decimalsRewardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 715,
                                "src": "14246:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "3330",
                                "id": 725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14268:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_30_by_1",
                                  "typeString": "int_const 30"
                                },
                                "value": "30"
                              },
                              "src": "14246:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "636f6e7374727563746f723a2072657761726420746f6b656e20646563696d616c73206d75737420626520696e666572696f7220746f203330",
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14284:59:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_09999a83a6ca38b78ac937b0ef60ec67685008d1db29892188df71492abfce75",
                                "typeString": "literal_string \"constructor: reward token decimals must be inferior to 30\""
                              },
                              "value": "constructor: reward token decimals must be inferior to 30"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_09999a83a6ca38b78ac937b0ef60ec67685008d1db29892188df71492abfce75",
                                "typeString": "literal_string \"constructor: reward token decimals must be inferior to 30\""
                              }
                            ],
                            "id": 723,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14225:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14225:128:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 729,
                        "nodeType": "ExpressionStatement",
                        "src": "14225:128:0"
                      },
                      {
                        "assignments": [
                          731
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 731,
                            "mutability": "mutable",
                            "name": "precision",
                            "nameLocation": "14372:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 771,
                            "src": "14364:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 730,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14364:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 745,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14392:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 741,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "hexValue": "3330",
                                          "id": 737,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14405:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_30_by_1",
                                            "typeString": "int_const 30"
                                          },
                                          "value": "30"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_30_by_1",
                                            "typeString": "int_const 30"
                                          }
                                        ],
                                        "id": 736,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "14397:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 735,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "14397:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 738,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14397:11:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "id": 739,
                                          "name": "decimalsRewardToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 715,
                                          "src": "14412:19:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 740,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "14411:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "14397:35:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 742,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14396:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14392:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14384:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 732,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14384:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14384:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14364:70:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 750,
                                  "name": "_stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 704,
                                  "src": "14521:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                },
                                {
                                  "id": 751,
                                  "name": "_rewardToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 707,
                                  "src": "14565:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  }
                                },
                                {
                                  "id": 752,
                                  "name": "precision",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 731,
                                  "src": "14606:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 753,
                                  "name": "_startTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 709,
                                  "src": "14649:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 754,
                                  "name": "_startTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 709,
                                  "src": "14703:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 755,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14755:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14787:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 757,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14820:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                    "typeString": "contract IBoringERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 749,
                                "name": "CampaignInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 575,
                                "src": "14476:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_CampaignInfo_$575_storage_ptr_$",
                                  "typeString": "type(struct TokenFarm.CampaignInfo storage pointer)"
                                }
                              },
                              "id": 758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "stakingToken",
                                "rewardToken",
                                "precision",
                                "startTimestamp",
                                "lastRewardTimestamp",
                                "accRewardPerShare",
                                "totalStaked",
                                "totalRewards"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "14476:360:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_memory_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_memory_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo memory"
                              }
                            ],
                            "expression": {
                              "id": 746,
                              "name": "campaignInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 590,
                              "src": "14445:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                                "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                              }
                            },
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "14445:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage_ptr_$_t_struct$_CampaignInfo_$575_storage_$returns$__$bound_to$_t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct TokenFarm.CampaignInfo storage ref[] storage pointer,struct TokenFarm.CampaignInfo storage ref)"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14445:401:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 760,
                        "nodeType": "ExpressionStatement",
                        "src": "14445:401:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 762,
                                  "name": "campaignInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 590,
                                  "src": "14890:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                                    "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "14890:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14912:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "14890:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 766,
                              "name": "_stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 704,
                              "src": "14927:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                "typeString": "contract IBoringERC20"
                              }
                            },
                            {
                              "id": 767,
                              "name": "_rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 707,
                              "src": "14954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                "typeString": "contract IBoringERC20"
                              }
                            },
                            {
                              "id": 768,
                              "name": "_startTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "14980:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                "typeString": "contract IBoringERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                "typeString": "contract IBoringERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 761,
                            "name": "AddCampaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "14861:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_IBoringERC20_$234_$_t_contract$_IBoringERC20_$234_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,contract IBoringERC20,contract IBoringERC20,uint256)"
                            }
                          },
                          "id": 769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14861:144:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 770,
                        "nodeType": "EmitStatement",
                        "src": "14856:149:0"
                      }
                    ]
                  },
                  "functionSelector": "409e00fc",
                  "id": 772,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 712,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 711,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "14128:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14128:9:0"
                    }
                  ],
                  "name": "addCampaignInfo",
                  "nameLocation": "13993:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 710,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 704,
                        "mutability": "mutable",
                        "name": "_stakingToken",
                        "nameLocation": "14031:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "14018:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        },
                        "typeName": {
                          "id": 703,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 702,
                            "name": "IBoringERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 234,
                            "src": "14018:12:0"
                          },
                          "referencedDeclaration": 234,
                          "src": "14018:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBoringERC20_$234",
                            "typeString": "contract IBoringERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 707,
                        "mutability": "mutable",
                        "name": "_rewardToken",
                        "nameLocation": "14067:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "14054:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBoringERC20_$234",
                          "typeString": "contract IBoringERC20"
                        },
                        "typeName": {
                          "id": 706,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 705,
                            "name": "IBoringERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 234,
                            "src": "14054:12:0"
                          },
                          "referencedDeclaration": 234,
                          "src": "14054:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBoringERC20_$234",
                            "typeString": "contract IBoringERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 709,
                        "mutability": "mutable",
                        "name": "_startTimestamp",
                        "nameLocation": "14097:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 772,
                        "src": "14089:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14089:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14008:110:0"
                  },
                  "returnParameters": {
                    "id": 713,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14138:0:0"
                  },
                  "scope": 1906,
                  "src": "13984:1028:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 911,
                    "nodeType": "Block",
                    "src": "15286:1476:0",
                    "statements": [
                      {
                        "assignments": [
                          787
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 787,
                            "mutability": "mutable",
                            "name": "rewardInfo",
                            "nameLocation": "15317:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 911,
                            "src": "15296:31:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                              "typeString": "struct TokenFarm.RewardInfo[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 785,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 784,
                                  "name": "RewardInfo",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 580,
                                  "src": "15296:10:0"
                                },
                                "referencedDeclaration": 580,
                                "src": "15296:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardInfo_$580_storage_ptr",
                                  "typeString": "struct TokenFarm.RewardInfo"
                                }
                              },
                              "id": 786,
                              "nodeType": "ArrayTypeName",
                              "src": "15296:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                "typeString": "struct TokenFarm.RewardInfo[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 791,
                        "initialValue": {
                          "baseExpression": {
                            "id": 788,
                            "name": "campaignRewardInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "15330:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_$",
                              "typeString": "mapping(uint256 => struct TokenFarm.RewardInfo storage ref[] storage ref)"
                            }
                          },
                          "id": 790,
                          "indexExpression": {
                            "id": 789,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 774,
                            "src": "15349:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15330:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage",
                            "typeString": "struct TokenFarm.RewardInfo storage ref[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15296:65:0"
                      },
                      {
                        "assignments": [
                          794
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 794,
                            "mutability": "mutable",
                            "name": "campaign",
                            "nameLocation": "15392:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 911,
                            "src": "15371:29:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                              "typeString": "struct TokenFarm.CampaignInfo"
                            },
                            "typeName": {
                              "id": 793,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 792,
                                "name": "CampaignInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 575,
                                "src": "15371:12:0"
                              },
                              "referencedDeclaration": 575,
                              "src": "15371:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 798,
                        "initialValue": {
                          "baseExpression": {
                            "id": 795,
                            "name": "campaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "15403:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                            }
                          },
                          "id": 797,
                          "indexExpression": {
                            "id": 796,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 774,
                            "src": "15416:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15403:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage",
                            "typeString": "struct TokenFarm.CampaignInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15371:57:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 800,
                                  "name": "rewardInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 787,
                                  "src": "15459:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                    "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                  }
                                },
                                "id": 801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "15459:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 802,
                                "name": "rewardInfoLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 599,
                                "src": "15479:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15459:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "616464526577617264496e666f3a3a72657761726420696e666f206c656e677468206578636565647320746865206c696d6974",
                              "id": 804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15508:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ec41ec236d91df2ac5421791ea1e4c7e5e2031b36c4bff91410eca2468cc3fb1",
                                "typeString": "literal_string \"addRewardInfo::reward info length exceeds the limit\""
                              },
                              "value": "addRewardInfo::reward info length exceeds the limit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ec41ec236d91df2ac5421791ea1e4c7e5e2031b36c4bff91410eca2468cc3fb1",
                                "typeString": "literal_string \"addRewardInfo::reward info length exceeds the limit\""
                              }
                            ],
                            "id": 799,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15438:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15438:133:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 806,
                        "nodeType": "ExpressionStatement",
                        "src": "15438:133:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 808,
                                    "name": "rewardInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 787,
                                    "src": "15602:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                      "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                    }
                                  },
                                  "id": 809,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "15602:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15623:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "15602:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 812,
                                      "name": "rewardInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 787,
                                      "src": "15644:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                        "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                      }
                                    },
                                    "id": 817,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 816,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 813,
                                          "name": "rewardInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 787,
                                          "src": "15655:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                            "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 814,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "15655:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 815,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15675:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "15655:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15644:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$580_storage",
                                      "typeString": "struct TokenFarm.RewardInfo storage ref"
                                    }
                                  },
                                  "id": 818,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 577,
                                  "src": "15644:46:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 819,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "15710:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "15710:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15644:81:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15602:123:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "616464526577617264496e666f3a3a72657761726420706572696f6420656e646564",
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15739:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e64fce31b3bd3504f76000aa77c64257eff796b8a51f9dbabf1394eb7b527db7",
                                "typeString": "literal_string \"addRewardInfo::reward period ended\""
                              },
                              "value": "addRewardInfo::reward period ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e64fce31b3bd3504f76000aa77c64257eff796b8a51f9dbabf1394eb7b527db7",
                                "typeString": "literal_string \"addRewardInfo::reward period ended\""
                              }
                            ],
                            "id": 807,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15581:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15581:204:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 825,
                        "nodeType": "ExpressionStatement",
                        "src": "15581:204:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 827,
                                    "name": "rewardInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 787,
                                    "src": "15816:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                      "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                    }
                                  },
                                  "id": 828,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "15816:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 829,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15837:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "15816:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 831,
                                      "name": "rewardInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 787,
                                      "src": "15858:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                        "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                      }
                                    },
                                    "id": 836,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 835,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 832,
                                          "name": "rewardInfo",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 787,
                                          "src": "15869:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                            "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                          }
                                        },
                                        "id": 833,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "15869:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 834,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15889:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "15869:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15858:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$580_storage",
                                      "typeString": "struct TokenFarm.RewardInfo storage ref"
                                    }
                                  },
                                  "id": 837,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 577,
                                  "src": "15858:46:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 838,
                                  "name": "_endTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 776,
                                  "src": "15907:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15858:62:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "15816:104:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "616464526577617264496e666f3a3a626164206e657720656e6454696d657374616d70",
                              "id": 841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15934:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5962806da4a4b793afb6956d0241830d41a127269ec57c15349bd63de06c2970",
                                "typeString": "literal_string \"addRewardInfo::bad new endTimestamp\""
                              },
                              "value": "addRewardInfo::bad new endTimestamp"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5962806da4a4b793afb6956d0241830d41a127269ec57c15349bd63de06c2970",
                                "typeString": "literal_string \"addRewardInfo::bad new endTimestamp\""
                              }
                            ],
                            "id": 826,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15795:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15795:186:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 843,
                        "nodeType": "ExpressionStatement",
                        "src": "15795:186:0"
                      },
                      {
                        "assignments": [
                          845
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 845,
                            "mutability": "mutable",
                            "name": "startTimestamp",
                            "nameLocation": "15999:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 911,
                            "src": "15991:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 844,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15991:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 860,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 846,
                                "name": "rewardInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "16016:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                  "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                }
                              },
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "16016:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16037:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "16016:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 852,
                                "name": "rewardInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "16091:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                  "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                }
                              },
                              "id": 857,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 853,
                                    "name": "rewardInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 787,
                                    "src": "16102:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                      "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                    }
                                  },
                                  "id": 854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "16102:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 855,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16122:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "16102:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16091:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RewardInfo_$580_storage",
                                "typeString": "struct TokenFarm.RewardInfo storage ref"
                              }
                            },
                            "id": 858,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 577,
                            "src": "16091:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "16016:121:0",
                          "trueExpression": {
                            "expression": {
                              "id": 850,
                              "name": "campaign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 794,
                              "src": "16053:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                              }
                            },
                            "id": 851,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 566,
                            "src": "16053:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15991:146:0"
                      },
                      {
                        "assignments": [
                          862
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 862,
                            "mutability": "mutable",
                            "name": "timeRange",
                            "nameLocation": "16155:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 911,
                            "src": "16147:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 861,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16147:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 866,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 863,
                            "name": "_endTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 776,
                            "src": "16167:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 864,
                            "name": "startTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "16183:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16167:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16147:50:0"
                      },
                      {
                        "assignments": [
                          868
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 868,
                            "mutability": "mutable",
                            "name": "totalRewards",
                            "nameLocation": "16215:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 911,
                            "src": "16207:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 867,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16207:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 872,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 869,
                            "name": "_rewardPerSec",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 778,
                            "src": "16230:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 870,
                            "name": "timeRange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 862,
                            "src": "16246:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16230:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16207:48:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 878,
                              "name": "rewardHolder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "16316:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 881,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "16350:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenFarm_$1906",
                                    "typeString": "contract TokenFarm"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenFarm_$1906",
                                    "typeString": "contract TokenFarm"
                                  }
                                ],
                                "id": 880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16342:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 879,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16342:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 882,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16342:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 883,
                              "name": "totalRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 868,
                              "src": "16369:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 873,
                                "name": "campaign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 794,
                                "src": "16265:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                  "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                }
                              },
                              "id": 876,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 562,
                              "src": "16265:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                "typeString": "contract IBoringERC20"
                              }
                            },
                            "id": 877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 541,
                            "src": "16265:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBoringERC20_$234_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBoringERC20_$234_$",
                              "typeString": "function (contract IBoringERC20,address,address,uint256)"
                            }
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16265:126:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 885,
                        "nodeType": "ExpressionStatement",
                        "src": "16265:126:0"
                      },
                      {
                        "expression": {
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 886,
                              "name": "campaign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 794,
                              "src": "16401:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                              }
                            },
                            "id": 888,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 574,
                            "src": "16401:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 889,
                            "name": "totalRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "16426:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16401:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 891,
                        "nodeType": "ExpressionStatement",
                        "src": "16401:37:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 896,
                                  "name": "_endTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 776,
                                  "src": "16520:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 897,
                                  "name": "_rewardPerSec",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 778,
                                  "src": "16565:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 895,
                                "name": "RewardInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 580,
                                "src": "16477:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_RewardInfo_$580_storage_ptr_$",
                                  "typeString": "type(struct TokenFarm.RewardInfo storage pointer)"
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [
                                "endTimestamp",
                                "rewardPerSec"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "16477:116:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                "typeString": "struct TokenFarm.RewardInfo memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                "typeString": "struct TokenFarm.RewardInfo memory"
                              }
                            ],
                            "expression": {
                              "id": 892,
                              "name": "rewardInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "16448:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                              }
                            },
                            "id": 894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "16448:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr_$_t_struct$_RewardInfo_$580_storage_$returns$__$bound_to$_t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct TokenFarm.RewardInfo storage ref[] storage pointer,struct TokenFarm.RewardInfo storage ref)"
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16448:155:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 900,
                        "nodeType": "ExpressionStatement",
                        "src": "16448:155:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 902,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 774,
                              "src": "16645:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 903,
                                  "name": "rewardInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 787,
                                  "src": "16670:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                    "typeString": "struct TokenFarm.RewardInfo storage ref[] storage pointer"
                                  }
                                },
                                "id": 904,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "16670:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16690:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "16670:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 907,
                              "name": "_endTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 776,
                              "src": "16705:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 908,
                              "name": "_rewardPerSec",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "16732:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 901,
                            "name": "AddRewardInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "16618:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16618:137:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 910,
                        "nodeType": "EmitStatement",
                        "src": "16613:142:0"
                      }
                    ]
                  },
                  "functionSelector": "2ea807c5",
                  "id": 912,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 781,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 780,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "15276:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15276:9:0"
                    }
                  ],
                  "name": "addRewardInfo",
                  "nameLocation": "15156:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 779,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 774,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "15187:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "15179:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 773,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15179:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 776,
                        "mutability": "mutable",
                        "name": "_endTimestamp",
                        "nameLocation": "15216:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "15208:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 775,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15208:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 778,
                        "mutability": "mutable",
                        "name": "_rewardPerSec",
                        "nameLocation": "15247:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "15239:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 777,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15239:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15169:97:0"
                  },
                  "returnParameters": {
                    "id": 782,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15286:0:0"
                  },
                  "scope": 1906,
                  "src": "15147:1615:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 924,
                    "nodeType": "Block",
                    "src": "16872:62:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 919,
                              "name": "campaignRewardInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 586,
                              "src": "16889:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_$",
                                "typeString": "mapping(uint256 => struct TokenFarm.RewardInfo storage ref[] storage ref)"
                              }
                            },
                            "id": 921,
                            "indexExpression": {
                              "id": 920,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "16908:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16889:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.RewardInfo storage ref[] storage ref"
                            }
                          },
                          "id": 922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "16889:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 918,
                        "id": 923,
                        "nodeType": "Return",
                        "src": "16882:45:0"
                      }
                    ]
                  },
                  "functionSelector": "4ae56bae",
                  "id": 925,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rewardInfoLen",
                  "nameLocation": "16777:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "16799:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 925,
                        "src": "16791:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16791:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16790:21:0"
                  },
                  "returnParameters": {
                    "id": 918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 917,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 925,
                        "src": "16859:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 916,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16859:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16858:9:0"
                  },
                  "scope": 1906,
                  "src": "16768:166:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 933,
                    "nodeType": "Block",
                    "src": "16999:43:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 930,
                            "name": "campaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "17016:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17016:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 929,
                        "id": 932,
                        "nodeType": "Return",
                        "src": "17009:26:0"
                      }
                    ]
                  },
                  "functionSelector": "4ad7ce80",
                  "id": 934,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "campaignInfoLen",
                  "nameLocation": "16949:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 926,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16964:2:0"
                  },
                  "returnParameters": {
                    "id": 929,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "16990:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16990:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16989:9:0"
                  },
                  "scope": 1906,
                  "src": "16940:102:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 947,
                    "nodeType": "Block",
                    "src": "17239:69:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 942,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "17272:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 943,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "17285:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "17285:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 941,
                            "name": "_endTimestampOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1010,
                            "src": "17256:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17256:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 940,
                        "id": 946,
                        "nodeType": "Return",
                        "src": "17249:52:0"
                      }
                    ]
                  },
                  "functionSelector": "9e494bee",
                  "id": 948,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentEndTimestamp",
                  "nameLocation": "17138:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 937,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 936,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "17166:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 948,
                        "src": "17158:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 935,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17158:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17157:21:0"
                  },
                  "returnParameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 939,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 948,
                        "src": "17226:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 938,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17226:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17225:9:0"
                  },
                  "scope": 1906,
                  "src": "17129:179:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1009,
                    "nodeType": "Block",
                    "src": "17445:542:0",
                    "statements": [
                      {
                        "assignments": [
                          961
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 961,
                            "mutability": "mutable",
                            "name": "rewardInfo",
                            "nameLocation": "17475:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1009,
                            "src": "17455:30:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TokenFarm.RewardInfo[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 959,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 958,
                                  "name": "RewardInfo",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 580,
                                  "src": "17455:10:0"
                                },
                                "referencedDeclaration": 580,
                                "src": "17455:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardInfo_$580_storage_ptr",
                                  "typeString": "struct TokenFarm.RewardInfo"
                                }
                              },
                              "id": 960,
                              "nodeType": "ArrayTypeName",
                              "src": "17455:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                "typeString": "struct TokenFarm.RewardInfo[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 965,
                        "initialValue": {
                          "baseExpression": {
                            "id": 962,
                            "name": "campaignRewardInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "17488:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_$",
                              "typeString": "mapping(uint256 => struct TokenFarm.RewardInfo storage ref[] storage ref)"
                            }
                          },
                          "id": 964,
                          "indexExpression": {
                            "id": 963,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 950,
                            "src": "17507:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17488:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage",
                            "typeString": "struct TokenFarm.RewardInfo storage ref[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17455:64:0"
                      },
                      {
                        "assignments": [
                          967
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 967,
                            "mutability": "mutable",
                            "name": "len",
                            "nameLocation": "17537:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1009,
                            "src": "17529:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 966,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17529:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 970,
                        "initialValue": {
                          "expression": {
                            "id": 968,
                            "name": "rewardInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "17543:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17543:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17529:31:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 971,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "17574:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17581:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17574:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 977,
                        "nodeType": "IfStatement",
                        "src": "17570:47:0",
                        "trueBody": {
                          "id": 976,
                          "nodeType": "Block",
                          "src": "17584:33:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17605:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 956,
                              "id": 975,
                              "nodeType": "Return",
                              "src": "17598:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "body": {
                          "id": 1000,
                          "nodeType": "Block",
                          "src": "17660:125:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 988,
                                  "name": "_blockTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 952,
                                  "src": "17678:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 989,
                                      "name": "rewardInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 961,
                                      "src": "17697:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                      }
                                    },
                                    "id": 991,
                                    "indexExpression": {
                                      "id": 990,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 979,
                                      "src": "17708:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17697:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                      "typeString": "struct TokenFarm.RewardInfo memory"
                                    }
                                  },
                                  "id": 992,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 577,
                                  "src": "17697:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17678:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 999,
                              "nodeType": "IfStatement",
                              "src": "17674:100:0",
                              "trueBody": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 994,
                                      "name": "rewardInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 961,
                                      "src": "17748:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                      }
                                    },
                                    "id": 996,
                                    "indexExpression": {
                                      "id": 995,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 979,
                                      "src": "17759:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17748:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                      "typeString": "struct TokenFarm.RewardInfo memory"
                                    }
                                  },
                                  "id": 997,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 577,
                                  "src": "17748:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 956,
                                "id": 998,
                                "nodeType": "Return",
                                "src": "17741:33:0"
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 982,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "17646:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 983,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "17650:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17646:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1001,
                        "initializationExpression": {
                          "assignments": [
                            979
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 979,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "17639:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1001,
                              "src": "17631:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 978,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "17631:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 981,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17643:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "17631:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "17655:3:0",
                            "subExpression": {
                              "id": 985,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 979,
                              "src": "17657:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 987,
                          "nodeType": "ExpressionStatement",
                          "src": "17655:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "17626:159:0"
                      },
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1002,
                              "name": "rewardInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "17948:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                              }
                            },
                            "id": 1006,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1003,
                                "name": "len",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 967,
                                "src": "17959:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17965:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "17959:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17948:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                              "typeString": "struct TokenFarm.RewardInfo memory"
                            }
                          },
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 577,
                          "src": "17948:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 956,
                        "id": 1008,
                        "nodeType": "Return",
                        "src": "17941:39:0"
                      }
                    ]
                  },
                  "id": 1010,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_endTimestampOf",
                  "nameLocation": "17323:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 953,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 950,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "17347:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "17339:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 949,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17339:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 952,
                        "mutability": "mutable",
                        "name": "_blockTimestamp",
                        "nameLocation": "17368:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "17360:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17360:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17338:46:0"
                  },
                  "returnParameters": {
                    "id": 956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 955,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1010,
                        "src": "17432:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 954,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17432:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17431:9:0"
                  },
                  "scope": 1906,
                  "src": "17314:673:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1023,
                    "nodeType": "Block",
                    "src": "18190:69:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1018,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1012,
                              "src": "18223:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1019,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "18236:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "18236:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1017,
                            "name": "_rewardPerSecOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1081,
                            "src": "18207:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18207:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1016,
                        "id": 1022,
                        "nodeType": "Return",
                        "src": "18200:52:0"
                      }
                    ]
                  },
                  "functionSelector": "32215c42",
                  "id": 1024,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentRewardPerSec",
                  "nameLocation": "18089:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1013,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1012,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "18117:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1024,
                        "src": "18109:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1011,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18109:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18108:21:0"
                  },
                  "returnParameters": {
                    "id": 1016,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1015,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1024,
                        "src": "18177:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1014,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18177:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18176:9:0"
                  },
                  "scope": 1906,
                  "src": "18080:179:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1080,
                    "nodeType": "Block",
                    "src": "18396:483:0",
                    "statements": [
                      {
                        "assignments": [
                          1037
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1037,
                            "mutability": "mutable",
                            "name": "rewardInfo",
                            "nameLocation": "18426:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1080,
                            "src": "18406:30:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TokenFarm.RewardInfo[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1035,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1034,
                                  "name": "RewardInfo",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 580,
                                  "src": "18406:10:0"
                                },
                                "referencedDeclaration": 580,
                                "src": "18406:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardInfo_$580_storage_ptr",
                                  "typeString": "struct TokenFarm.RewardInfo"
                                }
                              },
                              "id": 1036,
                              "nodeType": "ArrayTypeName",
                              "src": "18406:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                "typeString": "struct TokenFarm.RewardInfo[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1041,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1038,
                            "name": "campaignRewardInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "18439:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_$",
                              "typeString": "mapping(uint256 => struct TokenFarm.RewardInfo storage ref[] storage ref)"
                            }
                          },
                          "id": 1040,
                          "indexExpression": {
                            "id": 1039,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1026,
                            "src": "18458:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18439:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage",
                            "typeString": "struct TokenFarm.RewardInfo storage ref[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18406:64:0"
                      },
                      {
                        "assignments": [
                          1043
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1043,
                            "mutability": "mutable",
                            "name": "len",
                            "nameLocation": "18488:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1080,
                            "src": "18480:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1042,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18480:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1046,
                        "initialValue": {
                          "expression": {
                            "id": 1044,
                            "name": "rewardInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1037,
                            "src": "18494:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                            }
                          },
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "18494:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18480:31:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1047,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1043,
                            "src": "18525:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18532:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "18525:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1053,
                        "nodeType": "IfStatement",
                        "src": "18521:47:0",
                        "trueBody": {
                          "id": 1052,
                          "nodeType": "Block",
                          "src": "18535:33:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 1050,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18556:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1032,
                              "id": 1051,
                              "nodeType": "Return",
                              "src": "18549:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "body": {
                          "id": 1076,
                          "nodeType": "Block",
                          "src": "18611:125:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1064,
                                  "name": "_blockTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1028,
                                  "src": "18629:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1065,
                                      "name": "rewardInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1037,
                                      "src": "18648:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                      }
                                    },
                                    "id": 1067,
                                    "indexExpression": {
                                      "id": 1066,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1055,
                                      "src": "18659:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18648:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                      "typeString": "struct TokenFarm.RewardInfo memory"
                                    }
                                  },
                                  "id": 1068,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 577,
                                  "src": "18648:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18629:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1075,
                              "nodeType": "IfStatement",
                              "src": "18625:100:0",
                              "trueBody": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1070,
                                      "name": "rewardInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1037,
                                      "src": "18699:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                      }
                                    },
                                    "id": 1072,
                                    "indexExpression": {
                                      "id": 1071,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1055,
                                      "src": "18710:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18699:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                      "typeString": "struct TokenFarm.RewardInfo memory"
                                    }
                                  },
                                  "id": 1073,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardPerSec",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 579,
                                  "src": "18699:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "functionReturnParameters": 1032,
                                "id": 1074,
                                "nodeType": "Return",
                                "src": "18692:33:0"
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1058,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1055,
                            "src": "18597:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1059,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1043,
                            "src": "18601:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18597:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1077,
                        "initializationExpression": {
                          "assignments": [
                            1055
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1055,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18590:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1077,
                              "src": "18582:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1054,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18582:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1057,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18594:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18582:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "18606:3:0",
                            "subExpression": {
                              "id": 1061,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1055,
                              "src": "18608:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1063,
                          "nodeType": "ExpressionStatement",
                          "src": "18606:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "18577:159:0"
                      },
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18871:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1032,
                        "id": 1079,
                        "nodeType": "Return",
                        "src": "18864:8:0"
                      }
                    ]
                  },
                  "id": 1081,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_rewardPerSecOf",
                  "nameLocation": "18274:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1026,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "18298:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "18290:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1025,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18290:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1028,
                        "mutability": "mutable",
                        "name": "_blockTimestamp",
                        "nameLocation": "18319:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "18311:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18311:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18289:46:0"
                  },
                  "returnParameters": {
                    "id": 1032,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1031,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1081,
                        "src": "18383:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1030,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18383:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18382:9:0"
                  },
                  "scope": 1906,
                  "src": "18265:614:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1118,
                    "nodeType": "Block",
                    "src": "19098:212:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1094,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1092,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1083,
                                  "src": "19113:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1093,
                                  "name": "_endTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1087,
                                  "src": "19122:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19113:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1095,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "19112:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1096,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1083,
                                  "src": "19141:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 1097,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1085,
                                  "src": "19149:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19141:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 1099,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "19140:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "19112:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1104,
                        "nodeType": "IfStatement",
                        "src": "19108:80:0",
                        "trueBody": {
                          "id": 1103,
                          "nodeType": "Block",
                          "src": "19155:33:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 1101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19176:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1091,
                              "id": 1102,
                              "nodeType": "Return",
                              "src": "19169:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1105,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1085,
                            "src": "19201:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1106,
                            "name": "_endTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1087,
                            "src": "19208:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19201:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1113,
                        "nodeType": "IfStatement",
                        "src": "19197:69:0",
                        "trueBody": {
                          "id": 1112,
                          "nodeType": "Block",
                          "src": "19223:43:0",
                          "statements": [
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1108,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1085,
                                  "src": "19244:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1109,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1083,
                                  "src": "19250:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19244:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1091,
                              "id": 1111,
                              "nodeType": "Return",
                              "src": "19237:18:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1114,
                            "name": "_endTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1087,
                            "src": "19282:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1115,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1083,
                            "src": "19298:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19282:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1091,
                        "id": 1117,
                        "nodeType": "Return",
                        "src": "19275:28:0"
                      }
                    ]
                  },
                  "functionSelector": "7bafb029",
                  "id": 1119,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMultiplier",
                  "nameLocation": "18973:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1088,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "_from",
                        "nameLocation": "19004:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1119,
                        "src": "18996:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18996:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "19027:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1119,
                        "src": "19019:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19019:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1087,
                        "mutability": "mutable",
                        "name": "_endTimestamp",
                        "nameLocation": "19048:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1119,
                        "src": "19040:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1086,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19040:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18986:81:0"
                  },
                  "returnParameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1119,
                        "src": "19089:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19089:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19088:9:0"
                  },
                  "scope": 1906,
                  "src": "18964:346:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1144,
                    "nodeType": "Block",
                    "src": "19499:203:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1129,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1121,
                              "src": "19560:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1130,
                                    "name": "userInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 597,
                                    "src": "19589:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => struct TokenFarm.UserInfo storage ref))"
                                    }
                                  },
                                  "id": 1132,
                                  "indexExpression": {
                                    "id": 1131,
                                    "name": "_campaignID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1121,
                                    "src": "19598:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19589:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$",
                                    "typeString": "mapping(address => struct TokenFarm.UserInfo storage ref)"
                                  }
                                },
                                "id": 1134,
                                "indexExpression": {
                                  "id": 1133,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1123,
                                  "src": "19611:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19589:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$556_storage",
                                  "typeString": "struct TokenFarm.UserInfo storage ref"
                                }
                              },
                              "id": 1135,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 553,
                              "src": "19589:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1136,
                                    "name": "userInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 597,
                                    "src": "19642:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => struct TokenFarm.UserInfo storage ref))"
                                    }
                                  },
                                  "id": 1138,
                                  "indexExpression": {
                                    "id": 1137,
                                    "name": "_campaignID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1121,
                                    "src": "19651:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "19642:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$",
                                    "typeString": "mapping(address => struct TokenFarm.UserInfo storage ref)"
                                  }
                                },
                                "id": 1140,
                                "indexExpression": {
                                  "id": 1139,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1123,
                                  "src": "19664:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "19642:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$556_storage",
                                  "typeString": "struct TokenFarm.UserInfo storage ref"
                                }
                              },
                              "id": 1141,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 555,
                              "src": "19642:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1128,
                            "name": "_pendingReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "19528:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19528:167:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1127,
                        "id": 1143,
                        "nodeType": "Return",
                        "src": "19509:186:0"
                      }
                    ]
                  },
                  "functionSelector": "98969e82",
                  "id": 1145,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "pendingReward",
                  "nameLocation": "19389:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1121,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "19411:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1145,
                        "src": "19403:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1120,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19403:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1123,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "19432:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1145,
                        "src": "19424:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19424:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19402:36:0"
                  },
                  "returnParameters": {
                    "id": 1127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1126,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1145,
                        "src": "19486:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1125,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19486:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19485:9:0"
                  },
                  "scope": 1906,
                  "src": "19380:322:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1259,
                    "nodeType": "Block",
                    "src": "19853:1049:0",
                    "statements": [
                      {
                        "assignments": [
                          1158
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1158,
                            "mutability": "mutable",
                            "name": "campaign",
                            "nameLocation": "19883:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1259,
                            "src": "19863:28:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CampaignInfo_$575_memory_ptr",
                              "typeString": "struct TokenFarm.CampaignInfo"
                            },
                            "typeName": {
                              "id": 1157,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1156,
                                "name": "CampaignInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 575,
                                "src": "19863:12:0"
                              },
                              "referencedDeclaration": 575,
                              "src": "19863:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1162,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1159,
                            "name": "campaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "19894:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                            }
                          },
                          "id": 1161,
                          "indexExpression": {
                            "id": 1160,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "19907:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19894:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage",
                            "typeString": "struct TokenFarm.CampaignInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19863:56:0"
                      },
                      {
                        "assignments": [
                          1167
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1167,
                            "mutability": "mutable",
                            "name": "rewardInfo",
                            "nameLocation": "19949:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1259,
                            "src": "19929:30:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TokenFarm.RewardInfo[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1165,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1164,
                                  "name": "RewardInfo",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 580,
                                  "src": "19929:10:0"
                                },
                                "referencedDeclaration": 580,
                                "src": "19929:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardInfo_$580_storage_ptr",
                                  "typeString": "struct TokenFarm.RewardInfo"
                                }
                              },
                              "id": 1166,
                              "nodeType": "ArrayTypeName",
                              "src": "19929:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                "typeString": "struct TokenFarm.RewardInfo[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1171,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1168,
                            "name": "campaignRewardInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "19962:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_$",
                              "typeString": "mapping(uint256 => struct TokenFarm.RewardInfo storage ref[] storage ref)"
                            }
                          },
                          "id": 1170,
                          "indexExpression": {
                            "id": 1169,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1147,
                            "src": "19981:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19962:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage",
                            "typeString": "struct TokenFarm.RewardInfo storage ref[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19929:64:0"
                      },
                      {
                        "assignments": [
                          1173
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1173,
                            "mutability": "mutable",
                            "name": "accRewardPerShare",
                            "nameLocation": "20011:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1259,
                            "src": "20003:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1172,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "20003:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1176,
                        "initialValue": {
                          "expression": {
                            "id": 1174,
                            "name": "campaign",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1158,
                            "src": "20031:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CampaignInfo_$575_memory_ptr",
                              "typeString": "struct TokenFarm.CampaignInfo memory"
                            }
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accRewardPerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 570,
                          "src": "20031:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20003:54:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1177,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "20084:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "20084:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 1179,
                                "name": "campaign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1158,
                                "src": "20102:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CampaignInfo_$575_memory_ptr",
                                  "typeString": "struct TokenFarm.CampaignInfo memory"
                                }
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 568,
                              "src": "20102:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "20084:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1182,
                                "name": "campaign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1158,
                                "src": "20146:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CampaignInfo_$575_memory_ptr",
                                  "typeString": "struct TokenFarm.CampaignInfo memory"
                                }
                              },
                              "id": 1183,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalStaked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 572,
                              "src": "20146:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20170:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "20146:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "20084:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1247,
                        "nodeType": "IfStatement",
                        "src": "20067:734:0",
                        "trueBody": {
                          "id": 1246,
                          "nodeType": "Block",
                          "src": "20182:619:0",
                          "statements": [
                            {
                              "assignments": [
                                1188
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1188,
                                  "mutability": "mutable",
                                  "name": "cursor",
                                  "nameLocation": "20204:6:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1246,
                                  "src": "20196:14:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1187,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20196:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1191,
                              "initialValue": {
                                "expression": {
                                  "id": 1189,
                                  "name": "campaign",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1158,
                                  "src": "20213:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CampaignInfo_$575_memory_ptr",
                                    "typeString": "struct TokenFarm.CampaignInfo memory"
                                  }
                                },
                                "id": 1190,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lastRewardTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 568,
                                "src": "20213:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "20196:45:0"
                            },
                            {
                              "body": {
                                "id": 1244,
                                "nodeType": "Block",
                                "src": "20303:488:0",
                                "statements": [
                                  {
                                    "assignments": [
                                      1204
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1204,
                                        "mutability": "mutable",
                                        "name": "multiplier",
                                        "nameLocation": "20329:10:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1244,
                                        "src": "20321:18:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 1203,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "20321:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 1214,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 1206,
                                          "name": "cursor",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1188,
                                          "src": "20377:6:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 1207,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "20405:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1208,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "20405:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1209,
                                              "name": "rewardInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1167,
                                              "src": "20442:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                                "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                              }
                                            },
                                            "id": 1211,
                                            "indexExpression": {
                                              "id": 1210,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1193,
                                              "src": "20453:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "20442:13:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                              "typeString": "struct TokenFarm.RewardInfo memory"
                                            }
                                          },
                                          "id": 1212,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "endTimestamp",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 577,
                                          "src": "20442:26:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1205,
                                        "name": "getMultiplier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1119,
                                        "src": "20342:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1213,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20342:144:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "20321:165:0"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1217,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1215,
                                        "name": "multiplier",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1204,
                                        "src": "20508:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1216,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "20522:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "20508:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1219,
                                    "nodeType": "IfStatement",
                                    "src": "20504:29:0",
                                    "trueBody": {
                                      "id": 1218,
                                      "nodeType": "Continue",
                                      "src": "20525:8:0"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1225,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1220,
                                        "name": "cursor",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1188,
                                        "src": "20551:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1221,
                                            "name": "rewardInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1167,
                                            "src": "20560:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                            }
                                          },
                                          "id": 1223,
                                          "indexExpression": {
                                            "id": 1222,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1193,
                                            "src": "20571:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "20560:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                            "typeString": "struct TokenFarm.RewardInfo memory"
                                          }
                                        },
                                        "id": 1224,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 577,
                                        "src": "20560:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "20551:35:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1226,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20551:35:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 1242,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1227,
                                        "name": "accRewardPerShare",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1173,
                                        "src": "20604:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1241,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1237,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "components": [
                                                  {
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 1233,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "id": 1228,
                                                      "name": "multiplier",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1204,
                                                      "src": "20647:10:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                      "expression": {
                                                        "baseExpression": {
                                                          "id": 1229,
                                                          "name": "rewardInfo",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1167,
                                                          "src": "20660:10:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                                            "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                                          }
                                                        },
                                                        "id": 1231,
                                                        "indexExpression": {
                                                          "id": 1230,
                                                          "name": "i",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 1193,
                                                          "src": "20671:1:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "nodeType": "IndexAccess",
                                                        "src": "20660:13:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                                          "typeString": "struct TokenFarm.RewardInfo memory"
                                                        }
                                                      },
                                                      "id": 1232,
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "memberName": "rewardPerSec",
                                                      "nodeType": "MemberAccess",
                                                      "referencedDeclaration": 579,
                                                      "src": "20660:26:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "20647:39:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 1234,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "20646:41:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 1235,
                                                  "name": "campaign",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1158,
                                                  "src": "20714:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_CampaignInfo_$575_memory_ptr",
                                                    "typeString": "struct TokenFarm.CampaignInfo memory"
                                                  }
                                                },
                                                "id": 1236,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "precision",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 564,
                                                "src": "20714:18:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "20646:86:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1238,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "20645:88:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 1239,
                                            "name": "campaign",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1158,
                                            "src": "20756:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_CampaignInfo_$575_memory_ptr",
                                              "typeString": "struct TokenFarm.CampaignInfo memory"
                                            }
                                          },
                                          "id": 1240,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "totalStaked",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 572,
                                          "src": "20756:20:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "20645:131:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "20604:172:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1243,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20604:172:0"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1196,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1193,
                                  "src": "20275:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1197,
                                    "name": "rewardInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1167,
                                    "src": "20279:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                    }
                                  },
                                  "id": 1198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "20279:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20275:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1245,
                              "initializationExpression": {
                                "assignments": [
                                  1193
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1193,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "20268:1:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1245,
                                    "src": "20260:9:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1192,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "20260:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1195,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 1194,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20272:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "20260:13:0"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 1201,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": true,
                                  "src": "20298:3:0",
                                  "subExpression": {
                                    "id": 1200,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1193,
                                    "src": "20300:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1202,
                                "nodeType": "ExpressionStatement",
                                "src": "20298:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "20255:536:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1250,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1248,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1149,
                                        "src": "20831:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1249,
                                        "name": "accRewardPerShare",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1173,
                                        "src": "20841:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "20831:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1251,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "20830:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1252,
                                    "name": "campaign",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1158,
                                    "src": "20862:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CampaignInfo_$575_memory_ptr",
                                      "typeString": "struct TokenFarm.CampaignInfo memory"
                                    }
                                  },
                                  "id": 1253,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "precision",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 564,
                                  "src": "20862:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "20830:50:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1255,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "20829:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1256,
                            "name": "_rewardDebt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1151,
                            "src": "20884:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20829:66:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1155,
                        "id": 1258,
                        "nodeType": "Return",
                        "src": "20810:85:0"
                      }
                    ]
                  },
                  "id": 1260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_pendingReward",
                  "nameLocation": "19717:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1147,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "19749:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "19741:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19741:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1149,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "19778:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "19770:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19770:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1151,
                        "mutability": "mutable",
                        "name": "_rewardDebt",
                        "nameLocation": "19803:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "19795:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1150,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19795:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19731:89:0"
                  },
                  "returnParameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1154,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "19844:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19844:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19843:9:0"
                  },
                  "scope": 1906,
                  "src": "19708:1194:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1271,
                    "nodeType": "Block",
                    "src": "20975:45:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1268,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1262,
                              "src": "21001:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1267,
                            "name": "_updateCampaign",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1402,
                            "src": "20985:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20985:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1270,
                        "nodeType": "ExpressionStatement",
                        "src": "20985:28:0"
                      }
                    ]
                  },
                  "functionSelector": "cef7042d",
                  "id": 1272,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1265,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1264,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "20962:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "20962:12:0"
                    }
                  ],
                  "name": "updateCampaign",
                  "nameLocation": "20917:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1263,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1262,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "20940:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1272,
                        "src": "20932:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1261,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20932:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20931:21:0"
                  },
                  "returnParameters": {
                    "id": 1266,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20975:0:0"
                  },
                  "scope": 1906,
                  "src": "20908:112:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1401,
                    "nodeType": "Block",
                    "src": "21160:2073:0",
                    "statements": [
                      {
                        "assignments": [
                          1279
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1279,
                            "mutability": "mutable",
                            "name": "campaign",
                            "nameLocation": "21191:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1401,
                            "src": "21170:29:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                              "typeString": "struct TokenFarm.CampaignInfo"
                            },
                            "typeName": {
                              "id": 1278,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1277,
                                "name": "CampaignInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 575,
                                "src": "21170:12:0"
                              },
                              "referencedDeclaration": 575,
                              "src": "21170:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1283,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1280,
                            "name": "campaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "21202:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                            }
                          },
                          "id": 1282,
                          "indexExpression": {
                            "id": 1281,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1274,
                            "src": "21215:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21202:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage",
                            "typeString": "struct TokenFarm.CampaignInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21170:57:0"
                      },
                      {
                        "assignments": [
                          1288
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1288,
                            "mutability": "mutable",
                            "name": "rewardInfo",
                            "nameLocation": "21257:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1401,
                            "src": "21237:30:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TokenFarm.RewardInfo[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1286,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 1285,
                                  "name": "RewardInfo",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 580,
                                  "src": "21237:10:0"
                                },
                                "referencedDeclaration": 580,
                                "src": "21237:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardInfo_$580_storage_ptr",
                                  "typeString": "struct TokenFarm.RewardInfo"
                                }
                              },
                              "id": 1287,
                              "nodeType": "ArrayTypeName",
                              "src": "21237:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_ptr",
                                "typeString": "struct TokenFarm.RewardInfo[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1292,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1289,
                            "name": "campaignRewardInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "21270:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage_$",
                              "typeString": "mapping(uint256 => struct TokenFarm.RewardInfo storage ref[] storage ref)"
                            }
                          },
                          "id": 1291,
                          "indexExpression": {
                            "id": 1290,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1274,
                            "src": "21289:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21270:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_storage_$dyn_storage",
                            "typeString": "struct TokenFarm.RewardInfo storage ref[] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21237:64:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1293,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "21315:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "21315:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 1295,
                              "name": "campaign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1279,
                              "src": "21334:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                              }
                            },
                            "id": 1296,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lastRewardTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 568,
                            "src": "21334:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21315:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1300,
                        "nodeType": "IfStatement",
                        "src": "21311:84:0",
                        "trueBody": {
                          "id": 1299,
                          "nodeType": "Block",
                          "src": "21364:31:0",
                          "statements": [
                            {
                              "functionReturnParameters": 1276,
                              "id": 1298,
                              "nodeType": "Return",
                              "src": "21378:7:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1301,
                              "name": "campaign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1279,
                              "src": "21408:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                              }
                            },
                            "id": 1302,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 572,
                            "src": "21408:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21432:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "21408:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1324,
                        "nodeType": "IfStatement",
                        "src": "21404:606:0",
                        "trueBody": {
                          "id": 1323,
                          "nodeType": "Block",
                          "src": "21435:575:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1305,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "21823:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "21823:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 1308,
                                      "name": "_campaignID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1274,
                                      "src": "21857:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1309,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "21870:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 1310,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "21870:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1307,
                                    "name": "_endTimestampOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1010,
                                    "src": "21841:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 1311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21841:45:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21823:63:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1321,
                              "nodeType": "IfStatement",
                              "src": "21802:178:0",
                              "trueBody": {
                                "id": 1320,
                                "nodeType": "Block",
                                "src": "21901:79:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1318,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 1313,
                                          "name": "campaign",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1279,
                                          "src": "21919:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                            "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                          }
                                        },
                                        "id": 1315,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lastRewardTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 568,
                                        "src": "21919:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 1316,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "21950:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1317,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "21950:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "21919:46:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1319,
                                    "nodeType": "ExpressionStatement",
                                    "src": "21919:46:0"
                                  }
                                ]
                              }
                            },
                            {
                              "functionReturnParameters": 1276,
                              "id": 1322,
                              "nodeType": "Return",
                              "src": "21993:7:0"
                            }
                          ]
                        }
                      },
                      {
                        "body": {
                          "id": 1399,
                          "nodeType": "Block",
                          "src": "22104:1123:0",
                          "statements": [
                            {
                              "assignments": [
                                1337
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1337,
                                  "mutability": "mutable",
                                  "name": "multiplier",
                                  "nameLocation": "22385:10:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1399,
                                  "src": "22377:18:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1336,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22377:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1348,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1339,
                                      "name": "campaign",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1279,
                                      "src": "22429:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                        "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                      }
                                    },
                                    "id": 1340,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lastRewardTimestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 568,
                                    "src": "22429:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1341,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "22475:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1342,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "22475:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1343,
                                        "name": "rewardInfo",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1288,
                                        "src": "22508:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                        }
                                      },
                                      "id": 1345,
                                      "indexExpression": {
                                        "id": 1344,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1326,
                                        "src": "22519:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "22508:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                        "typeString": "struct TokenFarm.RewardInfo memory"
                                      }
                                    },
                                    "id": 1346,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "endTimestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 577,
                                    "src": "22508:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1338,
                                  "name": "getMultiplier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1119,
                                  "src": "22398:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22398:150:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22377:171:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1349,
                                  "name": "multiplier",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1337,
                                  "src": "22566:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "22580:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "22566:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1353,
                              "nodeType": "IfStatement",
                              "src": "22562:29:0",
                              "trueBody": {
                                "id": 1352,
                                "nodeType": "Continue",
                                "src": "22583:8:0"
                              }
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1354,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "22813:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "22813:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1356,
                                      "name": "rewardInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1288,
                                      "src": "22831:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                      }
                                    },
                                    "id": 1358,
                                    "indexExpression": {
                                      "id": 1357,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1326,
                                      "src": "22842:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "22831:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                      "typeString": "struct TokenFarm.RewardInfo memory"
                                    }
                                  },
                                  "id": 1359,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "endTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 577,
                                  "src": "22831:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22813:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1378,
                                "nodeType": "Block",
                                "src": "22955:79:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1376,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 1371,
                                          "name": "campaign",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1279,
                                          "src": "22973:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                            "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                          }
                                        },
                                        "id": 1373,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lastRewardTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 568,
                                        "src": "22973:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "id": 1374,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "23004:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 1375,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "23004:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "22973:46:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1377,
                                    "nodeType": "ExpressionStatement",
                                    "src": "22973:46:0"
                                  }
                                ]
                              },
                              "id": 1379,
                              "nodeType": "IfStatement",
                              "src": "22809:225:0",
                              "trueBody": {
                                "id": 1370,
                                "nodeType": "Block",
                                "src": "22859:90:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1368,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 1361,
                                          "name": "campaign",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1279,
                                          "src": "22877:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                            "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                          }
                                        },
                                        "id": 1363,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lastRewardTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 568,
                                        "src": "22877:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1364,
                                            "name": "rewardInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1288,
                                            "src": "22908:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                            }
                                          },
                                          "id": 1366,
                                          "indexExpression": {
                                            "id": 1365,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1326,
                                            "src": "22919:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "22908:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                            "typeString": "struct TokenFarm.RewardInfo memory"
                                          }
                                        },
                                        "id": 1367,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "endTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 577,
                                        "src": "22908:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "22877:57:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1369,
                                    "nodeType": "ExpressionStatement",
                                    "src": "22877:57:0"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 1397,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1380,
                                    "name": "campaign",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1279,
                                    "src": "23047:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                      "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                    }
                                  },
                                  "id": 1382,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "accRewardPerShare",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 570,
                                  "src": "23047:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1396,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1392,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1388,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1383,
                                                "name": "multiplier",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1337,
                                                "src": "23095:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 1384,
                                                    "name": "rewardInfo",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1288,
                                                    "src": "23108:10:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                                      "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                                                    }
                                                  },
                                                  "id": 1386,
                                                  "indexExpression": {
                                                    "id": 1385,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1326,
                                                    "src": "23119:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "23108:13:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_RewardInfo_$580_memory_ptr",
                                                    "typeString": "struct TokenFarm.RewardInfo memory"
                                                  }
                                                },
                                                "id": 1387,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "rewardPerSec",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 579,
                                                "src": "23108:26:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "23095:39:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1389,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "23094:41:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 1390,
                                            "name": "campaign",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1279,
                                            "src": "23158:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                              "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                            }
                                          },
                                          "id": 1391,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "precision",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 564,
                                          "src": "23158:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "23094:82:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1393,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "23093:84:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1394,
                                      "name": "campaign",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1279,
                                      "src": "23196:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                        "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                      }
                                    },
                                    "id": 1395,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "totalStaked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 572,
                                    "src": "23196:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "23093:123:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23047:169:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1398,
                              "nodeType": "ExpressionStatement",
                              "src": "23047:169:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1329,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1326,
                            "src": "22076:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1330,
                              "name": "rewardInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1288,
                              "src": "22080:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_RewardInfo_$580_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct TokenFarm.RewardInfo memory[] memory"
                              }
                            },
                            "id": 1331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "22080:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22076:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1400,
                        "initializationExpression": {
                          "assignments": [
                            1326
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1326,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "22069:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1400,
                              "src": "22061:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1325,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "22061:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1328,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22073:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "22061:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "22099:3:0",
                            "subExpression": {
                              "id": 1333,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1326,
                              "src": "22101:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1335,
                          "nodeType": "ExpressionStatement",
                          "src": "22099:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "22056:1171:0"
                      }
                    ]
                  },
                  "id": 1402,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_updateCampaign",
                  "nameLocation": "21114:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1274,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "21138:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1402,
                        "src": "21130:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1273,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "21130:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "21129:21:0"
                  },
                  "returnParameters": {
                    "id": 1276,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "21160:0:0"
                  },
                  "scope": 1906,
                  "src": "21105:2128:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1428,
                    "nodeType": "Block",
                    "src": "23403:150:0",
                    "statements": [
                      {
                        "assignments": [
                          1408
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1408,
                            "mutability": "mutable",
                            "name": "length",
                            "nameLocation": "23421:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1428,
                            "src": "23413:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1407,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "23413:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1411,
                        "initialValue": {
                          "expression": {
                            "id": 1409,
                            "name": "campaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "23430:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "23430:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23413:36:0"
                      },
                      {
                        "body": {
                          "id": 1426,
                          "nodeType": "Block",
                          "src": "23502:45:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1423,
                                    "name": "pid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1413,
                                    "src": "23532:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1422,
                                  "name": "_updateCampaign",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1402,
                                  "src": "23516:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 1424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23516:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1425,
                              "nodeType": "ExpressionStatement",
                              "src": "23516:20:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1416,
                            "name": "pid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1413,
                            "src": "23481:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1417,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1408,
                            "src": "23487:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23481:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1427,
                        "initializationExpression": {
                          "assignments": [
                            1413
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1413,
                              "mutability": "mutable",
                              "name": "pid",
                              "nameLocation": "23472:3:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1427,
                              "src": "23464:11:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1412,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "23464:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1415,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "23478:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "23464:15:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "23495:5:0",
                            "subExpression": {
                              "id": 1419,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1413,
                              "src": "23497:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1421,
                          "nodeType": "ExpressionStatement",
                          "src": "23495:5:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "23459:88:0"
                      }
                    ]
                  },
                  "functionSelector": "eebdced5",
                  "id": 1429,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1405,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1404,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "23390:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "23390:12:0"
                    }
                  ],
                  "name": "massUpdateCampaigns",
                  "nameLocation": "23359:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1403,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23378:2:0"
                  },
                  "returnParameters": {
                    "id": 1406,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23403:0:0"
                  },
                  "scope": 1906,
                  "src": "23350:203:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1476,
                    "nodeType": "Block",
                    "src": "23749:301:0",
                    "statements": [
                      {
                        "assignments": [
                          1448
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1448,
                            "mutability": "mutable",
                            "name": "campaign",
                            "nameLocation": "23780:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1476,
                            "src": "23759:29:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                              "typeString": "struct TokenFarm.CampaignInfo"
                            },
                            "typeName": {
                              "id": 1447,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1446,
                                "name": "CampaignInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 575,
                                "src": "23759:12:0"
                              },
                              "referencedDeclaration": 575,
                              "src": "23759:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1452,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1449,
                            "name": "campaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "23791:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                            }
                          },
                          "id": 1451,
                          "indexExpression": {
                            "id": 1450,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1431,
                            "src": "23804:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23791:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage",
                            "typeString": "struct TokenFarm.CampaignInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23759:57:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1458,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23868:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "23868:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1462,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "23900:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenFarm_$1906",
                                    "typeString": "contract TokenFarm"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenFarm_$1906",
                                    "typeString": "contract TokenFarm"
                                  }
                                ],
                                "id": 1461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "23892:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1460,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "23892:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "23892:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1464,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1433,
                              "src": "23919:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1465,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1435,
                              "src": "23940:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1466,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "23962:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 1467,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1439,
                              "src": "23977:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1468,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1441,
                              "src": "23992:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1453,
                                "name": "campaign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1448,
                                "src": "23826:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                  "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                }
                              },
                              "id": 1456,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "stakingToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 559,
                              "src": "23826:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                "typeString": "contract IBoringERC20"
                              }
                            },
                            "id": 1457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "permit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 233,
                            "src": "23826:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                            }
                          },
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23826:177:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1470,
                        "nodeType": "ExpressionStatement",
                        "src": "23826:177:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1472,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1431,
                              "src": "24022:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1473,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1433,
                              "src": "24035:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1471,
                            "name": "_deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1616,
                            "src": "24013:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24013:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1475,
                        "nodeType": "ExpressionStatement",
                        "src": "24013:30:0"
                      }
                    ]
                  },
                  "functionSelector": "515bc323",
                  "id": 1477,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1444,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1443,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "23736:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "23736:12:0"
                    }
                  ],
                  "name": "depositWithPermit",
                  "nameLocation": "23568:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1431,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "23603:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "23595:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23595:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1433,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "23632:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "23624:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1432,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23624:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1435,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "23657:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "23649:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1434,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23649:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1437,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "23681:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "23675:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1436,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "23675:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1439,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "23700:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "23692:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1438,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "23692:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1441,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "23719:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1477,
                        "src": "23711:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1440,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "23711:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23585:141:0"
                  },
                  "returnParameters": {
                    "id": 1445,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23749:0:0"
                  },
                  "scope": 1906,
                  "src": "23559:491:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1491,
                    "nodeType": "Block",
                    "src": "24202:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1487,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "24221:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1488,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "24234:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1486,
                            "name": "_deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1616,
                            "src": "24212:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24212:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1490,
                        "nodeType": "ExpressionStatement",
                        "src": "24212:30:0"
                      }
                    ]
                  },
                  "functionSelector": "e2bbb158",
                  "id": 1492,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1484,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1483,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "24185:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "24185:12:0"
                    }
                  ],
                  "name": "deposit",
                  "nameLocation": "24114:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1479,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "24130:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1492,
                        "src": "24122:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1478,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24122:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1481,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "24151:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1492,
                        "src": "24143:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24143:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24121:38:0"
                  },
                  "returnParameters": {
                    "id": 1485,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "24202:0:0"
                  },
                  "scope": 1906,
                  "src": "24105:144:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1615,
                    "nodeType": "Block",
                    "src": "24369:925:0",
                    "statements": [
                      {
                        "assignments": [
                          1501
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1501,
                            "mutability": "mutable",
                            "name": "campaign",
                            "nameLocation": "24400:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1615,
                            "src": "24379:29:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                              "typeString": "struct TokenFarm.CampaignInfo"
                            },
                            "typeName": {
                              "id": 1500,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1499,
                                "name": "CampaignInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 575,
                                "src": "24379:12:0"
                              },
                              "referencedDeclaration": 575,
                              "src": "24379:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1505,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1502,
                            "name": "campaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "24411:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                            }
                          },
                          "id": 1504,
                          "indexExpression": {
                            "id": 1503,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1494,
                            "src": "24424:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24411:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage",
                            "typeString": "struct TokenFarm.CampaignInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24379:57:0"
                      },
                      {
                        "assignments": [
                          1508
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1508,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "24463:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1615,
                            "src": "24446:21:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                              "typeString": "struct TokenFarm.UserInfo"
                            },
                            "typeName": {
                              "id": 1507,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1506,
                                "name": "UserInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 556,
                                "src": "24446:8:0"
                              },
                              "referencedDeclaration": 556,
                              "src": "24446:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                "typeString": "struct TokenFarm.UserInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1515,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1509,
                              "name": "userInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "24470:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct TokenFarm.UserInfo storage ref))"
                              }
                            },
                            "id": 1511,
                            "indexExpression": {
                              "id": 1510,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1494,
                              "src": "24479:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "24470:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.UserInfo storage ref)"
                            }
                          },
                          "id": 1514,
                          "indexExpression": {
                            "expression": {
                              "id": 1512,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "24492:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "24492:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24470:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$556_storage",
                            "typeString": "struct TokenFarm.UserInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "24446:57:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1517,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1494,
                              "src": "24529:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1516,
                            "name": "_updateCampaign",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1402,
                            "src": "24513:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24513:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1519,
                        "nodeType": "ExpressionStatement",
                        "src": "24513:28:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1520,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1508,
                              "src": "24555:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                "typeString": "struct TokenFarm.UserInfo storage pointer"
                              }
                            },
                            "id": 1521,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 553,
                            "src": "24555:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24569:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "24555:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1559,
                        "nodeType": "IfStatement",
                        "src": "24551:289:0",
                        "trueBody": {
                          "id": 1558,
                          "nodeType": "Block",
                          "src": "24572:268:0",
                          "statements": [
                            {
                              "assignments": [
                                1525
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1525,
                                  "mutability": "mutable",
                                  "name": "pending",
                                  "nameLocation": "24594:7:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1558,
                                  "src": "24586:15:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1524,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "24586:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1539,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1534,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1530,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 1526,
                                                "name": "user",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1508,
                                                "src": "24606:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                                  "typeString": "struct TokenFarm.UserInfo storage pointer"
                                                }
                                              },
                                              "id": 1527,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "amount",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 553,
                                              "src": "24606:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "expression": {
                                                "id": 1528,
                                                "name": "campaign",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1501,
                                                "src": "24620:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                                  "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                                }
                                              },
                                              "id": 1529,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "accRewardPerShare",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 570,
                                              "src": "24620:26:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "24606:40:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1531,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "24605:42:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1532,
                                          "name": "campaign",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1501,
                                          "src": "24666:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                            "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                          }
                                        },
                                        "id": 1533,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "precision",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 564,
                                        "src": "24666:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "24605:79:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1535,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "24604:81:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1536,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1508,
                                    "src": "24688:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                      "typeString": "struct TokenFarm.UserInfo storage pointer"
                                    }
                                  },
                                  "id": 1537,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardDebt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 555,
                                  "src": "24688:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "24604:99:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "24586:117:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1540,
                                  "name": "pending",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1525,
                                  "src": "24721:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1541,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "24731:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "24721:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1557,
                              "nodeType": "IfStatement",
                              "src": "24717:113:0",
                              "trueBody": {
                                "id": 1556,
                                "nodeType": "Block",
                                "src": "24734:96:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 1550,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "24794:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 1551,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "24794:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1549,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "24786:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 1548,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "24786:7:0",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 1552,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "24786:19:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1553,
                                          "name": "pending",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1525,
                                          "src": "24807:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "id": 1543,
                                            "name": "campaign",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1501,
                                            "src": "24752:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                              "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                            }
                                          },
                                          "id": 1546,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "rewardToken",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 562,
                                          "src": "24752:20:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                            "typeString": "contract IBoringERC20"
                                          }
                                        },
                                        "id": 1547,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safeTransfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 490,
                                        "src": "24752:33:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBoringERC20_$234_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBoringERC20_$234_$",
                                          "typeString": "function (contract IBoringERC20,address,uint256)"
                                        }
                                      },
                                      "id": 1554,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "24752:63:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1555,
                                    "nodeType": "ExpressionStatement",
                                    "src": "24752:63:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1560,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "24853:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24863:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "24853:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1593,
                        "nodeType": "IfStatement",
                        "src": "24849:268:0",
                        "trueBody": {
                          "id": 1592,
                          "nodeType": "Block",
                          "src": "24866:251:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1570,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "24944:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1571,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "24944:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1569,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "24936:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1568,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "24936:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1572,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24936:19:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1575,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "24981:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TokenFarm_$1906",
                                          "typeString": "contract TokenFarm"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TokenFarm_$1906",
                                          "typeString": "contract TokenFarm"
                                        }
                                      ],
                                      "id": 1574,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "24973:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1573,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "24973:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1576,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24973:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1577,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1496,
                                    "src": "25004:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 1563,
                                      "name": "campaign",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1501,
                                      "src": "24880:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                        "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                      }
                                    },
                                    "id": 1566,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "stakingToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 559,
                                    "src": "24880:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                      "typeString": "contract IBoringERC20"
                                    }
                                  },
                                  "id": 1567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 541,
                                  "src": "24880:38:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBoringERC20_$234_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBoringERC20_$234_$",
                                    "typeString": "function (contract IBoringERC20,address,address,uint256)"
                                  }
                                },
                                "id": 1578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24880:145:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1579,
                              "nodeType": "ExpressionStatement",
                              "src": "24880:145:0"
                            },
                            {
                              "expression": {
                                "id": 1584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1580,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1508,
                                    "src": "25039:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                      "typeString": "struct TokenFarm.UserInfo storage pointer"
                                    }
                                  },
                                  "id": 1582,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 553,
                                  "src": "25039:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1583,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1496,
                                  "src": "25054:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "25039:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1585,
                              "nodeType": "ExpressionStatement",
                              "src": "25039:22:0"
                            },
                            {
                              "expression": {
                                "id": 1590,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1586,
                                    "name": "campaign",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1501,
                                    "src": "25075:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                      "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                    }
                                  },
                                  "id": 1588,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "totalStaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 572,
                                  "src": "25075:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1589,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1496,
                                  "src": "25099:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "25075:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1591,
                              "nodeType": "ExpressionStatement",
                              "src": "25075:31:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1594,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1508,
                              "src": "25126:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                "typeString": "struct TokenFarm.UserInfo storage pointer"
                              }
                            },
                            "id": 1596,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardDebt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 555,
                            "src": "25126:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1601,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1597,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1508,
                                      "src": "25157:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                        "typeString": "struct TokenFarm.UserInfo storage pointer"
                                      }
                                    },
                                    "id": 1598,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 553,
                                    "src": "25157:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1599,
                                      "name": "campaign",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1501,
                                      "src": "25171:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                        "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                      }
                                    },
                                    "id": 1600,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "accRewardPerShare",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 570,
                                    "src": "25171:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "25157:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1602,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "25156:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "expression": {
                                "id": 1603,
                                "name": "campaign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1501,
                                "src": "25213:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                  "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                }
                              },
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "precision",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 564,
                              "src": "25213:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "25156:75:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25126:105:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1607,
                        "nodeType": "ExpressionStatement",
                        "src": "25126:105:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1609,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "25254:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1610,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "25254:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1611,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1496,
                              "src": "25266:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1612,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1494,
                              "src": "25275:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1608,
                            "name": "Deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "25246:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25246:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1614,
                        "nodeType": "EmitStatement",
                        "src": "25241:46:0"
                      }
                    ]
                  },
                  "id": 1616,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deposit",
                  "nameLocation": "24313:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1494,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "24330:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1616,
                        "src": "24322:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1493,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24322:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1496,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "24351:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1616,
                        "src": "24343:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1495,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "24343:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24321:38:0"
                  },
                  "returnParameters": {
                    "id": 1498,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "24369:0:0"
                  },
                  "scope": 1906,
                  "src": "24304:990:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1630,
                    "nodeType": "Block",
                    "src": "25451:48:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1626,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1618,
                              "src": "25471:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1627,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1620,
                              "src": "25484:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1625,
                            "name": "_withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1753,
                            "src": "25461:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25461:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1629,
                        "nodeType": "ExpressionStatement",
                        "src": "25461:31:0"
                      }
                    ]
                  },
                  "functionSelector": "441a3e70",
                  "id": 1631,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1623,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1622,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "25434:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "25434:12:0"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "25362:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1621,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1618,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "25379:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "25371:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1617,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25371:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1620,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "25400:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "25392:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1619,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25392:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25370:38:0"
                  },
                  "returnParameters": {
                    "id": 1624,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "25451:0:0"
                  },
                  "scope": 1906,
                  "src": "25353:146:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1752,
                    "nodeType": "Block",
                    "src": "25667:859:0",
                    "statements": [
                      {
                        "assignments": [
                          1640
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1640,
                            "mutability": "mutable",
                            "name": "campaign",
                            "nameLocation": "25698:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1752,
                            "src": "25677:29:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                              "typeString": "struct TokenFarm.CampaignInfo"
                            },
                            "typeName": {
                              "id": 1639,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1638,
                                "name": "CampaignInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 575,
                                "src": "25677:12:0"
                              },
                              "referencedDeclaration": 575,
                              "src": "25677:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1644,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1641,
                            "name": "campaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "25709:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                            }
                          },
                          "id": 1643,
                          "indexExpression": {
                            "id": 1642,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1633,
                            "src": "25722:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25709:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage",
                            "typeString": "struct TokenFarm.CampaignInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25677:57:0"
                      },
                      {
                        "assignments": [
                          1647
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1647,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "25761:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1752,
                            "src": "25744:21:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                              "typeString": "struct TokenFarm.UserInfo"
                            },
                            "typeName": {
                              "id": 1646,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1645,
                                "name": "UserInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 556,
                                "src": "25744:8:0"
                              },
                              "referencedDeclaration": 556,
                              "src": "25744:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                "typeString": "struct TokenFarm.UserInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1654,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1648,
                              "name": "userInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "25768:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct TokenFarm.UserInfo storage ref))"
                              }
                            },
                            "id": 1650,
                            "indexExpression": {
                              "id": 1649,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1633,
                              "src": "25777:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "25768:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.UserInfo storage ref)"
                            }
                          },
                          "id": 1653,
                          "indexExpression": {
                            "expression": {
                              "id": 1651,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "25790:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "25790:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25768:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$556_storage",
                            "typeString": "struct TokenFarm.UserInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25744:57:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1656,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1647,
                                  "src": "25819:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                    "typeString": "struct TokenFarm.UserInfo storage pointer"
                                  }
                                },
                                "id": 1657,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 553,
                                "src": "25819:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1658,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1635,
                                "src": "25834:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "25819:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "77697468647261773a3a62616420776974686472617720616d6f756e74",
                              "id": 1660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25843:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a70ca985973376d4b7dc52a397193c7ec20f1b7fa3d4fe0b2073dd7373e4599b",
                                "typeString": "literal_string \"withdraw::bad withdraw amount\""
                              },
                              "value": "withdraw::bad withdraw amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a70ca985973376d4b7dc52a397193c7ec20f1b7fa3d4fe0b2073dd7373e4599b",
                                "typeString": "literal_string \"withdraw::bad withdraw amount\""
                              }
                            ],
                            "id": 1655,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "25811:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25811:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1662,
                        "nodeType": "ExpressionStatement",
                        "src": "25811:64:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1664,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1633,
                              "src": "25901:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1663,
                            "name": "_updateCampaign",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1402,
                            "src": "25885:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25885:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1666,
                        "nodeType": "ExpressionStatement",
                        "src": "25885:28:0"
                      },
                      {
                        "assignments": [
                          1668
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1668,
                            "mutability": "mutable",
                            "name": "pending",
                            "nameLocation": "25931:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1752,
                            "src": "25923:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1667,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "25923:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1682,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1673,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 1669,
                                          "name": "user",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1647,
                                          "src": "25943:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                            "typeString": "struct TokenFarm.UserInfo storage pointer"
                                          }
                                        },
                                        "id": 1670,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 553,
                                        "src": "25943:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1671,
                                          "name": "campaign",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1640,
                                          "src": "25957:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                            "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                          }
                                        },
                                        "id": 1672,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "accRewardPerShare",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 570,
                                        "src": "25957:26:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "25943:40:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1674,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "25942:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1675,
                                    "name": "campaign",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1640,
                                    "src": "25999:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                      "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                    }
                                  },
                                  "id": 1676,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "precision",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 564,
                                  "src": "25999:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "25942:75:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1678,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "25941:77:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 1679,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1647,
                              "src": "26021:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                "typeString": "struct TokenFarm.UserInfo storage pointer"
                              }
                            },
                            "id": 1680,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "rewardDebt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 555,
                            "src": "26021:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25941:95:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25923:113:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1683,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1668,
                            "src": "26050:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26060:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "26050:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1700,
                        "nodeType": "IfStatement",
                        "src": "26046:105:0",
                        "trueBody": {
                          "id": 1699,
                          "nodeType": "Block",
                          "src": "26063:88:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1693,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "26119:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1694,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "26119:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1692,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "26111:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1691,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "26111:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1695,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "26111:19:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1696,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1668,
                                    "src": "26132:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 1686,
                                      "name": "campaign",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1640,
                                      "src": "26077:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                        "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                      }
                                    },
                                    "id": 1689,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rewardToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 562,
                                    "src": "26077:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                      "typeString": "contract IBoringERC20"
                                    }
                                  },
                                  "id": 1690,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 490,
                                  "src": "26077:33:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBoringERC20_$234_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBoringERC20_$234_$",
                                    "typeString": "function (contract IBoringERC20,address,uint256)"
                                  }
                                },
                                "id": 1697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26077:63:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1698,
                              "nodeType": "ExpressionStatement",
                              "src": "26077:63:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1701,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1635,
                            "src": "26164:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26174:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "26164:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1730,
                        "nodeType": "IfStatement",
                        "src": "26160:187:0",
                        "trueBody": {
                          "id": 1729,
                          "nodeType": "Block",
                          "src": "26177:170:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1704,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1647,
                                    "src": "26191:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                      "typeString": "struct TokenFarm.UserInfo storage pointer"
                                    }
                                  },
                                  "id": 1706,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 553,
                                  "src": "26191:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1707,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1635,
                                  "src": "26206:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26191:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1709,
                              "nodeType": "ExpressionStatement",
                              "src": "26191:22:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 1717,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "26270:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1718,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "26270:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1716,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "26262:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1715,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "26262:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1719,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "26262:19:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1720,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1635,
                                    "src": "26283:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 1710,
                                      "name": "campaign",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1640,
                                      "src": "26227:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                        "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                      }
                                    },
                                    "id": 1713,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "stakingToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 559,
                                    "src": "26227:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                      "typeString": "contract IBoringERC20"
                                    }
                                  },
                                  "id": 1714,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 490,
                                  "src": "26227:34:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBoringERC20_$234_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBoringERC20_$234_$",
                                    "typeString": "function (contract IBoringERC20,address,uint256)"
                                  }
                                },
                                "id": 1721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26227:64:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1722,
                              "nodeType": "ExpressionStatement",
                              "src": "26227:64:0"
                            },
                            {
                              "expression": {
                                "id": 1727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1723,
                                    "name": "campaign",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1640,
                                    "src": "26305:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                      "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                    }
                                  },
                                  "id": 1725,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "totalStaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 572,
                                  "src": "26305:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 1726,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1635,
                                  "src": "26329:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26305:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1728,
                              "nodeType": "ExpressionStatement",
                              "src": "26305:31:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1731,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1647,
                              "src": "26356:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                "typeString": "struct TokenFarm.UserInfo storage pointer"
                              }
                            },
                            "id": 1733,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardDebt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 555,
                            "src": "26356:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1738,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1734,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1647,
                                      "src": "26387:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                        "typeString": "struct TokenFarm.UserInfo storage pointer"
                                      }
                                    },
                                    "id": 1735,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 553,
                                    "src": "26387:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1736,
                                      "name": "campaign",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1640,
                                      "src": "26401:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                        "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                      }
                                    },
                                    "id": 1737,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "accRewardPerShare",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 570,
                                    "src": "26401:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "26387:40:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1739,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "26386:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "expression": {
                                "id": 1740,
                                "name": "campaign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1640,
                                "src": "26443:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                  "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                }
                              },
                              "id": 1741,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "precision",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 564,
                              "src": "26443:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "26386:75:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26356:105:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1744,
                        "nodeType": "ExpressionStatement",
                        "src": "26356:105:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1746,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "26486:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "26486:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1748,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1635,
                              "src": "26498:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1749,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1633,
                              "src": "26507:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1745,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 617,
                            "src": "26477:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26477:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1751,
                        "nodeType": "EmitStatement",
                        "src": "26472:47:0"
                      }
                    ]
                  },
                  "id": 1753,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_withdraw",
                  "nameLocation": "25610:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1636,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1633,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "25628:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1753,
                        "src": "25620:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1632,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25620:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1635,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "25649:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1753,
                        "src": "25641:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1634,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25641:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25619:38:0"
                  },
                  "returnParameters": {
                    "id": 1637,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "25667:0:0"
                  },
                  "scope": 1906,
                  "src": "25601:925:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1781,
                    "nodeType": "Block",
                    "src": "26731:120:0",
                    "statements": [
                      {
                        "body": {
                          "id": 1779,
                          "nodeType": "Block",
                          "src": "26791:54:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1773,
                                      "name": "_campaignIDs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1756,
                                      "src": "26815:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 1775,
                                    "indexExpression": {
                                      "id": 1774,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1762,
                                      "src": "26828:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26815:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 1776,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "26832:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1772,
                                  "name": "_withdraw",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1753,
                                  "src": "26805:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 1777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26805:29:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1778,
                              "nodeType": "ExpressionStatement",
                              "src": "26805:29:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1765,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1762,
                            "src": "26761:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1766,
                              "name": "_campaignIDs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1756,
                              "src": "26765:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            "id": 1767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "26765:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "26761:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1780,
                        "initializationExpression": {
                          "assignments": [
                            1762
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1762,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "26754:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1780,
                              "src": "26746:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1761,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "26746:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1764,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26758:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "26746:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "26786:3:0",
                            "subExpression": {
                              "id": 1769,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1762,
                              "src": "26788:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1771,
                          "nodeType": "ExpressionStatement",
                          "src": "26786:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "26741:104:0"
                      }
                    ]
                  },
                  "functionSelector": "5d14b06f",
                  "id": 1782,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1759,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1758,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "26718:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "26718:12:0"
                    }
                  ],
                  "name": "harvest",
                  "nameLocation": "26668:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1756,
                        "mutability": "mutable",
                        "name": "_campaignIDs",
                        "nameLocation": "26695:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1782,
                        "src": "26676:31:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1754,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "26676:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1755,
                          "nodeType": "ArrayTypeName",
                          "src": "26676:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "26675:33:0"
                  },
                  "returnParameters": {
                    "id": 1760,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "26731:0:0"
                  },
                  "scope": 1906,
                  "src": "26659:192:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1849,
                    "nodeType": "Block",
                    "src": "26997:415:0",
                    "statements": [
                      {
                        "assignments": [
                          1791
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1791,
                            "mutability": "mutable",
                            "name": "campaign",
                            "nameLocation": "27028:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1849,
                            "src": "27007:29:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                              "typeString": "struct TokenFarm.CampaignInfo"
                            },
                            "typeName": {
                              "id": 1790,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1789,
                                "name": "CampaignInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 575,
                                "src": "27007:12:0"
                              },
                              "referencedDeclaration": 575,
                              "src": "27007:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1795,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1792,
                            "name": "campaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "27039:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                            }
                          },
                          "id": 1794,
                          "indexExpression": {
                            "id": 1793,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "27052:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27039:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage",
                            "typeString": "struct TokenFarm.CampaignInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27007:57:0"
                      },
                      {
                        "assignments": [
                          1798
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1798,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "27091:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1849,
                            "src": "27074:21:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                              "typeString": "struct TokenFarm.UserInfo"
                            },
                            "typeName": {
                              "id": 1797,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1796,
                                "name": "UserInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 556,
                                "src": "27074:8:0"
                              },
                              "referencedDeclaration": 556,
                              "src": "27074:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                "typeString": "struct TokenFarm.UserInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1805,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1799,
                              "name": "userInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "27098:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct TokenFarm.UserInfo storage ref))"
                              }
                            },
                            "id": 1801,
                            "indexExpression": {
                              "id": 1800,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1784,
                              "src": "27107:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "27098:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$556_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.UserInfo storage ref)"
                            }
                          },
                          "id": 1804,
                          "indexExpression": {
                            "expression": {
                              "id": 1802,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "27120:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "27120:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27098:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$556_storage",
                            "typeString": "struct TokenFarm.UserInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27074:57:0"
                      },
                      {
                        "assignments": [
                          1807
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1807,
                            "mutability": "mutable",
                            "name": "_amount",
                            "nameLocation": "27149:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1849,
                            "src": "27141:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1806,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "27141:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1810,
                        "initialValue": {
                          "expression": {
                            "id": 1808,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1798,
                            "src": "27159:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                              "typeString": "struct TokenFarm.UserInfo storage pointer"
                            }
                          },
                          "id": 1809,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 553,
                          "src": "27159:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27141:29:0"
                      },
                      {
                        "expression": {
                          "id": 1815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1811,
                              "name": "campaign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1791,
                              "src": "27180:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                              }
                            },
                            "id": 1813,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 572,
                            "src": "27180:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1814,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1807,
                            "src": "27204:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "27180:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1816,
                        "nodeType": "ExpressionStatement",
                        "src": "27180:31:0"
                      },
                      {
                        "expression": {
                          "id": 1821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1817,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1798,
                              "src": "27221:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                "typeString": "struct TokenFarm.UserInfo storage pointer"
                              }
                            },
                            "id": 1819,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 553,
                            "src": "27221:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27235:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "27221:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1822,
                        "nodeType": "ExpressionStatement",
                        "src": "27221:15:0"
                      },
                      {
                        "expression": {
                          "id": 1827,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1823,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1798,
                              "src": "27246:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$556_storage_ptr",
                                "typeString": "struct TokenFarm.UserInfo storage pointer"
                              }
                            },
                            "id": 1825,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardDebt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 555,
                            "src": "27246:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "27264:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "27246:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1828,
                        "nodeType": "ExpressionStatement",
                        "src": "27246:19:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1836,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "27318:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1837,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "27318:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "27310:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1834,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "27310:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27310:19:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1839,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1807,
                              "src": "27331:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1829,
                                "name": "campaign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1791,
                                "src": "27275:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                  "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                }
                              },
                              "id": 1832,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "stakingToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 559,
                              "src": "27275:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                "typeString": "contract IBoringERC20"
                              }
                            },
                            "id": 1833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 490,
                            "src": "27275:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBoringERC20_$234_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBoringERC20_$234_$",
                              "typeString": "function (contract IBoringERC20,address,uint256)"
                            }
                          },
                          "id": 1840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27275:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1841,
                        "nodeType": "ExpressionStatement",
                        "src": "27275:64:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1843,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "27372:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "27372:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1845,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1807,
                              "src": "27384:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1846,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1784,
                              "src": "27393:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1842,
                            "name": "EmergencyWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "27354:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27354:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1848,
                        "nodeType": "EmitStatement",
                        "src": "27349:56:0"
                      }
                    ]
                  },
                  "functionSelector": "5312ea8e",
                  "id": 1850,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1787,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1786,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "26984:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "26984:12:0"
                    }
                  ],
                  "name": "emergencyWithdraw",
                  "nameLocation": "26936:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1785,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1784,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "26962:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1850,
                        "src": "26954:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1783,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26954:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "26953:21:0"
                  },
                  "returnParameters": {
                    "id": 1788,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "26997:0:0"
                  },
                  "scope": 1906,
                  "src": "26927:485:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1904,
                    "nodeType": "Block",
                    "src": "27621:495:0",
                    "statements": [
                      {
                        "assignments": [
                          1865
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1865,
                            "mutability": "mutable",
                            "name": "campaign",
                            "nameLocation": "27652:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1904,
                            "src": "27631:29:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                              "typeString": "struct TokenFarm.CampaignInfo"
                            },
                            "typeName": {
                              "id": 1864,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1863,
                                "name": "CampaignInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 575,
                                "src": "27631:12:0"
                              },
                              "referencedDeclaration": 575,
                              "src": "27631:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1869,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1866,
                            "name": "campaignInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "27663:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_CampaignInfo_$575_storage_$dyn_storage",
                              "typeString": "struct TokenFarm.CampaignInfo storage ref[] storage ref"
                            }
                          },
                          "id": 1868,
                          "indexExpression": {
                            "id": 1867,
                            "name": "_campaignID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1852,
                            "src": "27676:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "27663:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CampaignInfo_$575_storage",
                            "typeString": "struct TokenFarm.CampaignInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27631:57:0"
                      },
                      {
                        "assignments": [
                          1871
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1871,
                            "mutability": "mutable",
                            "name": "currentStakingPendingReward",
                            "nameLocation": "27706:27:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1904,
                            "src": "27698:35:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1870,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "27698:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1878,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1873,
                              "name": "_campaignID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1852,
                              "src": "27764:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1874,
                                "name": "campaign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1865,
                                "src": "27789:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                  "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                }
                              },
                              "id": 1875,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalStaked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 572,
                              "src": "27789:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 1876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27823:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1872,
                            "name": "_pendingReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "27736:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27736:98:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27698:136:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1880,
                                  "name": "currentStakingPendingReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1871,
                                  "src": "27865:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1881,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1854,
                                  "src": "27895:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "27865:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1883,
                                  "name": "campaign",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1865,
                                  "src": "27906:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                    "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                  }
                                },
                                "id": 1884,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "totalRewards",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 574,
                                "src": "27906:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "27865:62:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "656d657267656e637952657761726457697468647261773a3a6e6f7420656e6f7567682072657761726420746f6b656e",
                              "id": 1886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "27941:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_94ba677cf0efe4285070395ca1ecb0fb4dde88e049741c66212c77f57fc3f34b",
                                "typeString": "literal_string \"emergencyRewardWithdraw::not enough reward token\""
                              },
                              "value": "emergencyRewardWithdraw::not enough reward token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_94ba677cf0efe4285070395ca1ecb0fb4dde88e049741c66212c77f57fc3f34b",
                                "typeString": "literal_string \"emergencyRewardWithdraw::not enough reward token\""
                              }
                            ],
                            "id": 1879,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "27844:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27844:157:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1888,
                        "nodeType": "ExpressionStatement",
                        "src": "27844:157:0"
                      },
                      {
                        "expression": {
                          "id": 1893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1889,
                              "name": "campaign",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1865,
                              "src": "28011:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                              }
                            },
                            "id": 1891,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 574,
                            "src": "28011:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1892,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1854,
                            "src": "28036:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28011:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1894,
                        "nodeType": "ExpressionStatement",
                        "src": "28011:32:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1900,
                              "name": "_beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1856,
                              "src": "28087:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1901,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1854,
                              "src": "28101:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1895,
                                "name": "campaign",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1865,
                                "src": "28053:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CampaignInfo_$575_storage_ptr",
                                  "typeString": "struct TokenFarm.CampaignInfo storage pointer"
                                }
                              },
                              "id": 1898,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 562,
                              "src": "28053:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBoringERC20_$234",
                                "typeString": "contract IBoringERC20"
                              }
                            },
                            "id": 1899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 490,
                            "src": "28053:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBoringERC20_$234_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBoringERC20_$234_$",
                              "typeString": "function (contract IBoringERC20,address,uint256)"
                            }
                          },
                          "id": 1902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28053:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1903,
                        "nodeType": "ExpressionStatement",
                        "src": "28053:56:0"
                      }
                    ]
                  },
                  "functionSelector": "1d123131",
                  "id": 1905,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1859,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1858,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 104,
                        "src": "27598:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "27598:9:0"
                    },
                    {
                      "id": 1861,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1860,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "27608:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "27608:12:0"
                    }
                  ],
                  "name": "emergencyRewardWithdraw",
                  "nameLocation": "27475:23:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1857,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1852,
                        "mutability": "mutable",
                        "name": "_campaignID",
                        "nameLocation": "27516:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1905,
                        "src": "27508:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27508:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1854,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "27545:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1905,
                        "src": "27537:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1853,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "27537:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1856,
                        "mutability": "mutable",
                        "name": "_beneficiary",
                        "nameLocation": "27570:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1905,
                        "src": "27562:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1855,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "27562:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "27498:90:0"
                  },
                  "returnParameters": {
                    "id": 1862,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "27621:0:0"
                  },
                  "scope": 1906,
                  "src": "27466:650:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1907,
              "src": "10722:17396:0",
              "usedErrors": []
            }
          ],
          "src": "164:27955:0"
        },
        "id": 0
      }
    }
  }
}
